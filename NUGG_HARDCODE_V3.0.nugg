<?xml version="1.0" encoding="utf-8"?>
<nugget name="HARDCODE_V3.0">
 <CLAS CLSNAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" MSG_ID="ZHARDCODE" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CX_DYNAMIC_CHECK">
  <implementing CLSNAME="ZCX_HARDCODE_SHM" REFCLSNAME="IF_T100_MESSAGE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="0 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZCX_HARDCODE_SHM" REFCLSNAME="CX_DYNAMIC_CHECK" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" CATEGORY="40" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CX_DYNAMIC_CHECK">
  <friends CLSNAME="ZCX_HARDCODE_MAINTAIN" REFCLSNAME="ZCL_HARDCODE_MAINTAIN" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <implementing CLSNAME="ZCX_HARDCODE_MAINTAIN" REFCLSNAME="IF_T100_MESSAGE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="0 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZCX_HARDCODE_MAINTAIN" REFCLSNAME="CX_DYNAMIC_CHECK" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe exploitation" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" MSG_ID="ZHARDCODE" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TY_HARDCODE_INSTANCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="7 " SRCCOLUMN2="32 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hardcode_instance,
      repid    TYPE        sy-repid,
      instance TYPE REF TO zcl_hardcode,
    END OF   ty_hardcode_instance
"/>
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TY_T_HARDCODE_INSTANCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="10 " SRCCOLUMN2="61 " TYPESRC_LENG="0 " TYPESRC="ty_t_hardcode_instance TYPE SORTED TABLE OF ty_hardcode_instance
                  WITH UNIQUE KEY primary_key COMPONENTS repid
"/>
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TS_ATTRIBUTE_VALUE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="15 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_attribute_value,
        attribute_name TYPE ztec_t_hc_attr-attribute_name.
            INCLUDE TYPE ztec_s_hc_attribute_value.
    TYPES :
    END OF   ts_attribute_value
"/>
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TT_ATTRIBUTE_VALUE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="17 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="110 " TYPESRC_LENG="0 " TYPESRC="tt_attribute_value TYPE SORTED TABLE OF ts_attribute_value
                                      WITH UNIQUE KEY primary_key components attribute_name KEY1 KEY2 KEY3 KEY4
"/>
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TS_HARDCODE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="4 " SRCROW2="24 " SRCCOLUMN2="25 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_hardcode.
        INCLUDE TYPE zvtec_t_hc.
        TYPES :
        t_code_source TYPE stringtab,
      END OF   ts_hardcode
"/>
  <types CLSNAME="ZCL_HARDCODE" CMPNAME="TT_HARDCODE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="26 " SRCCOLUMN1="4 " SRCROW2="35 " SRCCOLUMN2="91 " TYPESRC_LENG="0 " TYPESRC="tt_hardcode TYPE SORTED TABLE OF zcl_hardcode=&gt;ts_hardcode
                      WITH NON-UNIQUE KEY primary_key COMPONENTS version_id
                                                                        parameter_name
                                                                        attribute_name
                                                                        attribute_key1
                                                                        attribute_key2
                                                                        attribute_key3
                                                                        attribute_key4
                             WITH NON-UNIQUE SORTED KEY second_key COMPONENTS attribute_guid_regroup
                                                                              attribute_guid
"/>
  <friends CLSNAME="ZCL_HARDCODE" REFCLSNAME="ZCL_HARDCODE_SHM_ROOT" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_HARDCODE" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <typeClasDef CLSNAME="ZCL_HARDCODE" TYPEGROUP="ZCL_HARDCODE" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MC_MY_MSGID" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : classe de messages" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;ZHARDCODE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MC_VERSION_DEFAULT" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;00001&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_ID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MO_HARDCODE_SHM" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MT_HARDCODE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TT_HARDCODE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MT_HARDCODE_INSTANCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="5 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_HARDCODE_INSTANCE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MV_PRIMARY_VERSION_ONLY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="FLAG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MV_REPID" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE" CMPNAME="MV_VERSION_PRIMARY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_ID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" VERSION="1" LANGU="F" DESCRIPT="Attribut - RÃ©cuprÃ©ation Valeur" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_VERSION_ID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_PARAMETER_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_ATTRIBUTE_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_KEY1" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Clef" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_KEY2" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Clef" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_KEY3" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Clef" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="IV_KEY4" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Clef" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="RS_VALUE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Valeurs Attributs" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_S_HC_ATTRIBUTE_VALUE"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="ATTRIBUTE_VALUE_GET" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_value_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_VALUE_GET                               *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : RÃ©cupÃ©ration Valeur de l&apos;Attribut                 *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    lsr_range TYPE ztec_s_hc_attribute_range.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_version_id TYPE ztec_hc_version_id.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_s_harcode&gt; TYPE zcl_hardcode=&gt;ts_hardcode.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation variables
  &quot; -----------------------------------------------------------

  IF  iv_version_id           IS  INITIAL
  AND mv_primary_version_only EQ abap_false.
    &quot; NumÃ©ro de version manquant
    &quot;&quot;  --&gt; LÃ¨ve une exception
    me-&gt;__raise_exception( iv_msgno = 401 ).

  ELSEIF NOT iv_version_id       IS INITIAL
     AND mv_primary_version_only EQ abap_false.
    &quot; NumÃ©ro de Version fournie et plusieurs Versions traitÃ©es
    &quot;&quot;  --&gt; Utilisation de la Version fournie
    lv_version_id = iv_version_id.

  ELSE.
    &quot; Autre cas
    &quot;&quot;  --&gt; Utilisation de la version primaire
    lv_version_id = me-&gt;mv_version_primary.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des valeurs associÃ©es aux clefs
  &quot; -----------------------------------------------------------

  IF iv_key4 IS SUPPLIED.
    &quot; La quatriÃ¨me clef est fournie
    &quot;&quot;  --&gt; Recherche premiÃ¨re itÃ©ration correspondante
    READ TABLE me-&gt;mt_hardcode WITH TABLE KEY version_id     = lv_version_id
                                              parameter_name = iv_parameter_name
                                              attribute_name = iv_attribute_name
                                              attribute_key1 = iv_key1
                                              attribute_key2 = iv_key2
                                              attribute_key3 = iv_key3
                                              attribute_key4 = iv_key4
                                    ASSIGNING &lt;lfs_s_harcode&gt;.

  ELSEIF iv_key3 IS SUPPLIED.
    &quot; La troisiÃ¨me est fournie
    &quot;&quot;  --&gt; Recherche premiÃ¨re itÃ©ration correspondante
    READ TABLE me-&gt;mt_hardcode WITH KEY version_id     = lv_version_id
                                        parameter_name = iv_parameter_name
                                        attribute_name = iv_attribute_name
                                        attribute_key1 = iv_key1
                                        attribute_key2 = iv_key2
                                        attribute_key3 = iv_key3
                              ASSIGNING &lt;lfs_s_harcode&gt; BINARY SEARCH.

  ELSEIF iv_key2 IS SUPPLIED.
    &quot; La deuxiÃ¨me clef est fournie
    &quot;&quot;  --&gt; Recherche premiÃ¨re itÃ©ration correspondante
    READ TABLE me-&gt;mt_hardcode WITH KEY version_id     = lv_version_id
                                        parameter_name = iv_parameter_name
                                        attribute_name = iv_attribute_name
                                        attribute_key1 = iv_key1
                                        attribute_key2 = iv_key2
                              ASSIGNING &lt;lfs_s_harcode&gt; BINARY SEARCH.

  ELSEIF iv_key1 IS SUPPLIED.
    &quot; La premiÃ¨re clef est fournie
    &quot;&quot;  --&gt; Recherche premiÃ¨re itÃ©ration correspondante
    READ TABLE me-&gt;mt_hardcode WITH KEY version_id     = lv_version_id
                                        parameter_name = iv_parameter_name
                                        attribute_name = iv_attribute_name
                                        attribute_key1 = iv_key1
                              ASSIGNING &lt;lfs_s_harcode&gt; BINARY SEARCH.

  ELSE.
    &quot; Aucune Clef
    &quot;&quot;  --&gt; Recherche premiÃ¨re itÃ©ration correspondante
    READ TABLE me-&gt;mt_hardcode WITH KEY version_id     = lv_version_id
                                        parameter_name = iv_parameter_name
                                        attribute_name = iv_attribute_name
                              ASSIGNING &lt;lfs_s_harcode&gt; BINARY SEARCH.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF NOT &lt;lfs_s_harcode&gt; IS ASSIGNED.
    &quot; Aucune valeur correspondante
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception( iv_msgno = 402 ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Traitement des donnÃ©es
  &quot; -----------------------------------------------------------

  IF &lt;lfs_s_harcode&gt;-attribute_guid_regroup NE &lt;lfs_s_harcode&gt;-attribute_guid.
    &quot; Remonte Ã  l&apos;entrÃ©e de rÃ©fÃ©rence
    READ TABLE me-&gt;mt_hardcode WITH KEY second_key COMPONENTS attribute_guid_regroup = &lt;lfs_s_harcode&gt;-attribute_guid_regroup
                                                              attribute_guid         = &lt;lfs_s_harcode&gt;-attribute_guid_regroup
                                                    ASSIGNING &lt;lfs_s_harcode&gt;.
    IF sy-subrc NE 0.
      &quot; InconsistÃ©nce dans la table des Hardcodes
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception( iv_msgno = 004 ).

    ENDIF.

  ENDIF.

  &quot; Initialisation des donnÃ©es de retour
  rs_value-key1        = &lt;lfs_s_harcode&gt;-attribute_key1.
  rs_value-key2        = &lt;lfs_s_harcode&gt;-attribute_key2.
  rs_value-key3        = &lt;lfs_s_harcode&gt;-attribute_key3.
  rs_value-key4        = &lt;lfs_s_harcode&gt;-attribute_key4.
  rs_value-code_source = &lt;lfs_s_harcode&gt;-t_code_source.

  IF &lt;lfs_s_harcode&gt;-attribute_as_range EQ abap_true.
    &quot; Traitement particulier si Range prÃ©sent
    READ TABLE me-&gt;mt_hardcode WITH KEY second_key COMPONENTS attribute_guid_regroup = &lt;lfs_s_harcode&gt;-attribute_guid_regroup
                                                 TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      LOOP AT me-&gt;mt_hardcode ASSIGNING FIELD-SYMBOL(&lt;lfs_s_harcode_2&gt;)
                               USING KEY second_key
                                    FROM sy-tabix.

        CLEAR : lsr_range.

        IF &lt;lfs_s_harcode_2&gt;-attribute_guid_regroup NE &lt;lfs_s_harcode&gt;-attribute_guid_regroup.
          &quot; On ne traite plus le mÃªme Attribut
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        IF &lt;lfs_s_harcode_2&gt;-attribute_guid_regroup EQ &lt;lfs_s_harcode_2&gt;-attribute_guid.
          &quot; Ligne de rÃ©fÃ©rence
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
          CONTINUE.

        ENDIF.

        &quot; Ajout valeurs du Range
        lsr_range-low    = &lt;lfs_s_harcode_2&gt;-attribute_low.
        lsr_range-sign   = &lt;lfs_s_harcode_2&gt;-attribute_sign.
        lsr_range-high   = &lt;lfs_s_harcode_2&gt;-attribute_high.
        lsr_range-option = &lt;lfs_s_harcode_2&gt;-attribute_opti.

        &quot; Ajout de l&apos;entrÃ©e
        APPEND lsr_range TO rs_value-range.

      ENDLOOP.

    ENDIF.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="CODE_INJECTION" VERSION="1" LANGU="F" DESCRIPT="Code Source - Injection" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD code_injection.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CODE_INJECTION                                    *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : Injection Code Source                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 29/08/2018                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Non implÃ©mentÃ©e
  &quot; -----------------------------------------------------------
  &quot;   DifficultÃ© d&apos;implÃ©mentation :
  &quot;     - Il faut crÃ©er une couche d&apos;encapsulation de l&apos;appel
  &quot;       pour gÃ©rer les valeurs d&apos;Import / Export
  &quot; -----------------------------------------------------------

**  zcl_dynamic_source_code=&gt;execute( ).
*
*  DATA : lt_mara TYPE mara_tt.
*  TYPES :
*      BEGIN OF ts_dyn,
*        name TYPE string,
*        itab TYPE REF TO data,
*      END OF   ts_dyn.
*
*  TYPES : tt_dyn TYPE STANDARD TABLE OF ts_dyn
*          WITH NON-UNIQUE KEY primary_key COMPONENTS name.
*
*  DATa : lt_dyn TYPE tt_dyn.
*
*  SELECT * FROM mara INTO TABLE @lt_mara.
*  SELECT * FROM mara INTO TABLE @lt_dyn[ 1 ]-itab.
*
*

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="CONSTRUCTOR" SCONAME="IV_REPID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-REPID"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="CONSTRUCTOR" SCONAME="IV_VERSION_PRIMARY_ONLY" VERSION="1" LANGU="F" DESCRIPT="Charge la Version primaire uniquement ?" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG" PARVALUE="ABAP_TRUE"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="CONSTRUCTOR" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="2" EDITORDER="1 "/>
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : Constructeur                                      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; RÃ©cupÃ©ration des Hardcodes
      &quot; -----------------------------------------------------------

      &quot; Initialisation Attribut
      me-&gt;mv_repid = iv_repid.

      &quot; RÃ©cupÃ©ration des Hardcods
      me-&gt;data_load(
          iv_repid                = iv_repid
          iv_load_from_shm        = abap_true
          iv_version_primary_only = iv_version_primary_only
      ).

    CATCH zcx_hardcode INTO lo_cx_exception.
      &quot; Une exception est survenue
      &quot;&quot;  --&gt; LÃ¨ve l&apos;exception
      me-&gt;__raise_exception( lo_cx_exception ).

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="DATA_LOAD" VERSION="1" LANGU="F" DESCRIPT="Chargement des Hardcodes" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="DATA_LOAD" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="DATA_LOAD" SCONAME="IV_LOAD_FROM_SHM" VERSION="1" LANGU="F" DESCRIPT="Charger Ã  partir de la SHM ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="DATA_LOAD" SCONAME="IV_VERSION_PRIMARY_ONLY" VERSION="1" LANGU="F" DESCRIPT="Charge la Version primaire uniquement ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="DATA_LOAD" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD data_load.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : DATA_LOAD                                         *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : Chargement des donnÃ©es                            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_load_from_db TYPE xsdboolean.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Chargement des donnÃ©es
  &quot; -----------------------------------------------------------

  IF iv_load_from_shm EQ abap_true.
    &quot; Charge depuis la SHM
    TRY.
        &quot;&quot;  --&gt; Charge les Hardcodes depuis la SHM
        me-&gt;mo_hardcode_shm = zcl_hardcode_shm=&gt;get_instance( iv_repid ).

        me-&gt;mt_hardcode = me-&gt;mo_hardcode_shm-&gt;hardcode_get(
          iv_version_primary_only
        ).

        &quot;&quot;  --&gt; LibÃ¨re le Token de Lecture
        me-&gt;mo_hardcode_shm-&gt;hardcode_finish( ).

      CATCH zcx_hardcode_shm.
        &quot; Erreur chargement depuis la SHM
        &quot;&quot;  --&gt; Initialisation Indicateur chargement depuis la DB
        lv_load_from_db = abap_true.

    ENDTRY.

  ELSE.
    &quot; Charge depuis la DB
    &quot;&quot;  --&gt; Initialisation Indicateur chargement depuis la DB
    lv_load_from_db = abap_true.

  ENDIF.

  IF lv_load_from_db EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; Charge les Hardcodes depuis la DB
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration Hardcode en DB
    me-&gt;mt_hardcode = zcl_hardcode=&gt;_hardcode_get(
        iv_repid                = iv_repid
        iv_version_primary_only = iv_version_primary_only
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le prÃ©sence de donnÃ©es
  &quot; -----------------------------------------------------------

  IF me-&gt;mt_hardcode[] IS INITIAL.
    &quot; Aucune donnÃ©es
    &quot;&quot;  --&gt; LÃ¨ve une exception
    me-&gt;__raise_exception(
        iv_msgno = 001                                      &quot;#EC NOTEXT
        iv_msgv1 = iv_repid
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; DÃ©termination Version Primaire
  &quot; -----------------------------------------------------------

  &quot;&quot;  --&gt; Initialisation Indicateur chargement Version Primaire Uniquement
  me-&gt;mv_primary_version_only = iv_version_primary_only.

  &quot;&quot;  --&gt; DÃ©termination de la Version Primaire
  me-&gt;mv_version_primary = me-&gt;mt_hardcode[ version_primary = abap_true ]-version_id.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="RÃ©cupÃ©ration instance" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="GET_INSTANCE" SCONAME="IV_REPID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="GET_INSTANCE" SCONAME="RO_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe exploitation" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="GET_INSTANCE" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD get_instance.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : GET_INSTANCE                                      *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : RÃ©cupÃ©ration Instance                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_instance TYPE ty_hardcode_instance.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; RÃ©cupÃ©ration de l&apos;instance correspondant au Programme
      &quot; -----------------------------------------------------------

      ro_instance = zcl_hardcode=&gt;mt_hardcode_instance[ repid = iv_repid ]-instance.

      IF ro_instance-&gt;_validity_check( ) NE abap_true.
        &quot; Instance non valide (ObsolÃ¨te)
        &quot;&quot;  --&gt; Recharge les donnÃ©es Hardcodes
        CREATE OBJECT ro_instance
          EXPORTING
            iv_repid = iv_repid.

        &quot;&quot;  --&gt; MÃ J table Buffer
        zcl_hardcode=&gt;mt_hardcode_instance[ repid = iv_repid ]-instance = ro_instance.

      ENDIF.

    CATCH cx_sy_itab_line_not_found.
      &quot; Aucune instance trouvÃ©e pour ce Programme
      &quot;&quot;  --&gt; CrÃ©ation nouvelle
      ls_hardcode_instance-repid = iv_repid.
      TRY.
          CREATE OBJECT ls_hardcode_instance-instance
            EXPORTING
              iv_repid = iv_repid.

        CATCH zcx_hardcode INTO lo_cx_exception.
          &quot; Une erreur est survenue
          &quot;&quot;  --&gt; Retourne l&apos;exception
          zcl_hardcode=&gt;__raise_exception( lo_cx_exception ).

      ENDTRY.

      &quot;&quot;  --&gt; Ajout de l&apos;entrÃ©e
      INSERT ls_hardcode_instance INTO TABLE zcl_hardcode=&gt;mt_hardcode_instance.

      &quot;&quot;  --&gt; Retourne l&apos;Instance
      ro_instance = ls_hardcode_instance-instance.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="HARDCODE_DISPLAY" VERSION="1" LANGU="F" DESCRIPT="Transaction - Lancement" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="HARDCODE_DISPLAY" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="REPID"/>
   <source>METHOD hardcode_display.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_DISPLAY                                  *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : RÃ©cupÃ©ration Instance                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Affichage des Hardcodes
  &quot; -----------------------------------------------------------

  SUBMIT ztec_hardcode WITH p_repid = iv_repid AND RETURN.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="PARAMETER_VALUE_GET" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - RÃ©cupÃ©ration Valeur" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="PARAMETER_VALUE_GET" SCONAME="IV_VERSION_ID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="PARAMETER_VALUE_GET" SCONAME="IV_PARAMETER_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="PARAMETER_VALUE_GET" SCONAME="RT_VALUE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Valeurs Attributs" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TT_ATTRIBUTE_VALUE"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="PARAMETER_VALUE_GET" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD PARAMETER_VALUE_GET.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_VALUE_GET                               *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : RÃ©cupÃ©ration Valeurs du ParamÃ¨tres                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_value TYPE ts_attribute_value.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_version_id TYPE ztec_hc_version_id.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation variables
  &quot; -----------------------------------------------------------

  IF  iv_version_id           IS  INITIAL
  AND mv_primary_version_only EQ abap_false.
    &quot; NumÃ©ro de version manquant
    &quot;&quot;  --&gt; LÃ¨ve une exception
    me-&gt;__raise_exception( iv_msgno = 401 ).

  ELSEIF NOT iv_version_id       IS INITIAL
     AND mv_primary_version_only EQ abap_false.
    &quot; NumÃ©ro de Version fournie et plusieurs Versions traitÃ©
    &quot;&quot;  --&gt; Utilisation de la Version fournie
    lv_version_id = iv_version_id.

  ELSE.
    &quot; Autre cas
    &quot;&quot;  --&gt; Utilisation de la version primaire
    lv_version_id = me-&gt;mv_version_primary.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des valeurs
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration position premiÃ¨re occurence du ParamÃ¨tre
  READ TABLE me-&gt;mt_hardcode WITH KEY version_id     = lv_version_id
                                      parameter_name = iv_parameter_name
                            TRANSPORTING NO FIELDS BINARY SEARCH.
  IF sy-subrc NE 0.
    &quot; Aucune correspondance
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception( iv_msgno = 402 ).

  ENDIF.

  &quot; Parcours l&apos;ensemble des donnÃ©es correspondant au paramÃ¨tre
  LOOP AT me-&gt;mt_hardcode ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode&gt;)
                               FROM sy-tabix.

    CLEAR : ls_value.

    IF &lt;lfs_s_hardcode&gt;-version_id      NE lv_version_id
    OR &lt;lfs_s_hardcode&gt;-parameter_name NE iv_parameter_name.
      &quot; On ne traite plus le mÃªme paramÃ¨tre
      &quot;&quot;  --&gt; ArrÃªt de la boucle
      EXIT.

    ENDIF.

    IF &lt;lfs_s_hardcode&gt;-attribute_guid_regroup NE &lt;lfs_s_hardcode&gt;-attribute_guid.
      &quot; Il ne s&apos;agit pas d&apos;une ligne de rÃ©fÃ©rence
      &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
      CONTINUE.

    ENDIF.

    &quot; Recherche si entrÃ©e dÃ©jÃ  existante
    READ TABLE rt_value WITH TABLE KEY attribute_name = &lt;lfs_s_hardcode&gt;-attribute_name
                                       key1           = &lt;lfs_s_hardcode&gt;-attribute_key1
                                       key2           = &lt;lfs_s_hardcode&gt;-attribute_key2
                                       key3           = &lt;lfs_s_hardcode&gt;-attribute_key3
                                       key4           = &lt;lfs_s_hardcode&gt;-attribute_key4
                          TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      &quot; Valeurs dÃ©jÃ  rÃ©cupÃ©rÃ©e
      &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
      CONTINUE.

    ENDIF.

    &quot; Initialisation des donnÃ©es
    ls_value-attribute_name = &lt;lfs_s_hardcode&gt;-attribute_name.

    TRY.
        &quot; RÃ©cupÃ©ration des donnÃ©es
        MOVE-CORRESPONDING me-&gt;attribute_value_get(
            iv_version_id         = &lt;lfs_s_hardcode&gt;-version_id
            iv_parameter_name     = &lt;lfs_s_hardcode&gt;-parameter_name
            iv_attribute_name     = &lt;lfs_s_hardcode&gt;-attribute_name
            iv_key1               = &lt;lfs_s_hardcode&gt;-attribute_key1
            iv_key2               = &lt;lfs_s_hardcode&gt;-attribute_key2
            iv_key3               = &lt;lfs_s_hardcode&gt;-attribute_key3
            iv_key4               = &lt;lfs_s_hardcode&gt;-attribute_key4
        ) TO ls_value.

      CATCH zcx_hardcode_maintain.
        &quot; Erreur lors de la rÃ©cupÃ©ration
        &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
        CONTINUE.

    ENDTRY.

    &quot; Ajout de l&apos;entrÃ©e
    INSERT ls_value INTO TABLE rt_value.

  ENDLOOP.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="_HARDCODE_GET" VERSION="1" LANGU="F" DESCRIPT="Usage Interne : Hardcode - RÃ©cupÃ©ration" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="_HARDCODE_GET" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="_HARDCODE_GET" SCONAME="IV_VERSION_PRIMARY_ONLY" VERSION="1" LANGU="F" DESCRIPT="Uniquement version Primaire ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="_HARDCODE_GET" SCONAME="RT_HARDCODE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCL_HARDCODE=&gt;TT_HARDCODE"/>
   <source>METHOD _hardcode_get.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des Hardcodes
  &quot; -----------------------------------------------------------

  IF iv_version_primary_only EQ abap_true.
    &quot; Charge uniquement la version courante
    &quot;&quot;  --&gt; RÃ©cupÃ©ration des Hardcodes
    SELECT * FROM zvtec_t_hc
       INTO CORRESPONDING FIELDS OF TABLE rt_hardcode
            WHERE repid           EQ iv_repid
              AND version_primary EQ abap_true.

  ELSE.
    &quot; Charge toutes les versions
    SELECT * FROM zvtec_t_hc
       INTO CORRESPONDING FIELDS OF TABLE rt_hardcode
            WHERE repid EQ iv_repid.

  ENDIF.

  IF sy-subrc NE 0.
    &quot; Aucune donnÃ©es
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ratin Texte Source
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration Identifiant des Textes Sources
  SELECT srtfd FROM ztec_t_hc_attr_c
    FOR ALL ENTRIES IN @rt_hardcode
                 WHERE srtfd EQ @rt_hardcode-attribute_guid_regroup
            INTO TABLE @DATA(lt_strfd_code_source).
  IF sy-subrc EQ 0.
    &quot; Au moins un Code Source
    &quot;&quot;  --&gt; RÃ©cupÃ©ration du Code Source
    LOOP AT lt_strfd_code_source ASSIGNING FIELD-SYMBOL(&lt;lfs_s_strfd_code_source&gt;).

      TRY.
          &quot; Initialisation du Texte de l&apos;Attribut
          rt_hardcode[
            attribute_guid_regroup = &lt;lfs_s_strfd_code_source&gt;-srtfd
            attribute_guid         = &lt;lfs_s_strfd_code_source&gt;-srtfd
          ]-t_code_source = zcl_hardcode_cluster=&gt;code_source_get( &lt;lfs_s_strfd_code_source&gt;-srtfd ).

        CATCH cx_sy_itab_line_not_found cx_root.
      ENDTRY.

    ENDLOOP.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="_VALIDITY_CHECK" VERSION="1" LANGU="F" DESCRIPT="Usage Interne : ContrÃ´le validitÃ© Instance" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="_VALIDITY_CHECK" SCONAME="RV_VALID" VERSION="1" LANGU="F" DESCRIPT="Instance Valide ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <source>METHOD _validity_check.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : _VALIDITY_CHECK                                   *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : ContrÃ´le ValiditÃ©                                 *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le ValiditÃ©
  &quot; -----------------------------------------------------------

  IF NOT me-&gt;mo_hardcode_shm IS BOUND.
    &quot; Hardcode non chargÃ© depuis la SHM
    &quot;&quot;  --&gt; Hardcode Valide
    rv_valid = abap_true.
    RETURN.

  ENDIF.

  &quot; ContrÃ´le ValiditÃ© de l&apos;instance SHM
  rv_valid = me-&gt;mo_hardcode_shm-&gt;hardcode_validity_check( ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" VERSION="1" LANGU="F" DESCRIPT="LÃ¨ve une exception" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IO_EXCEPTION" VERSION="1" LANGU="F" DESCRIPT="Abstract Superclass for All Global Exceptions" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CX_ROOT" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGID" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : classe de messages" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-MSGID" PARVALUE="ZCL_HARDCODE=&gt;MC_MY_MSGID"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGNO" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : numÃ©ro du message" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-MSGNO" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV1" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV2" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV3" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV4" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE" CMPNAME="__RAISE_EXCEPTION" SCONAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD __raise_exception.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : __RAISE_EXCEPTION                                 *
*&amp; Classe          : ZCL_HARDCODE                                      *
*&amp; Description     : Usage Interne : LÃ¨ve une Exception                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_text_id TYPE scx_t100key.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; GÃ©nÃ©ration de l&apos;Exception
  &quot; -----------------------------------------------------------

  IF io_exception IS BOUND.
    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode
      EXPORTING
        previous = io_exception.

  ELSE.
    &quot; Initialisation structure
    ls_text_id-msgid = iv_msgid.
    ls_text_id-msgno = iv_msgno.
    ls_text_id-attr1 = iv_msgv1.
    ls_text_id-attr2 = iv_msgv2.
    ls_text_id-attr3 = iv_msgv3.
    ls_text_id-attr4 = iv_msgv4.

    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode
      EXPORTING
        textid = ls_text_id.

  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - GestionSHM" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="TS_INSTANCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="7 " SRCCOLUMN2="23 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_instance,
      repid    TYPE sy-repid,
      instance TYPE REF TO zcl_hardcode_shm,
    END OF   ts_instance
"/>
  <types CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="TT_INSTANCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="10 " SRCCOLUMN2="53 " TYPESRC_LENG="0 " TYPESRC="tt_instance TYPE SORTED TABLE OF ts_instance
          WITH UNIQUE KEY primary_key COMPONENTS repid
"/>
  <types CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="TS_PERSISTENT_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="12 " SRCCOLUMN1="4 " SRCROW2="15 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_persistent_data,
      t_instance TYPE zcl_hardcode_shm=&gt;tt_instance,
      t_server_list TYPE msxxlist_t,
    END OF   ts_persistent_data
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_HARDCODE_SHM" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <typeClasDef CLSNAME="ZCL_HARDCODE_SHM" TYPEGROUP="ZCL_HARDCODE" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="MO_ATTACH_READ" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_AREA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="MS_PERSISTENT_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TS_PERSISTENT_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="MV_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD class_constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CLASS_CONSTRUCTOR                                 *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Constructeur Statique                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF zcl_hardcode_shm=&gt;ms_persistent_data-t_server_list[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration Liste des Serveurs
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration de la Liste des Serveurs
    CALL FUNCTION &apos;TH_SERVER_LIST&apos;
      TABLES
        list           = zcl_hardcode_shm=&gt;ms_persistent_data-t_server_list
      EXCEPTIONS
        no_server_list = 1
        OTHERS         = 2.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="CONSTRUCTOR" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="CONSTRUCTOR" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="2" EDITORDER="1 "/>
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Constructeur                                      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_exception  TYPE REF TO cx_root,
    lo_attach_write  TYPE REF TO zcl_hardcode_shm_area,
    lo_hardcode_root TYPE REF TO zcl_hardcode_shm_root.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_retry_count TYPE i.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; RÃ©cupÃ©ration version courante
      &quot; -----------------------------------------------------------

      &quot; Initialisation Attribut
      me-&gt;mv_key = |{ sy-mandt }{ iv_repid }|.

      &quot; Lecture de la version courante
      me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( CONV shm_inst_name( me-&gt;mv_key ) ).

    CATCH cx_shm_no_active_version INTO lo_cx_exception.
      &quot; Aucune version existante
      TRY.
          &quot;&quot;  --&gt; CrÃ©ation instance d&apos;Ã©criture
          lo_attach_write = zcl_hardcode_shm_area=&gt;attach_for_write( CONV shm_inst_name( me-&gt;mv_key  ) ).

          &quot;&quot;  --&gt; CrÃ©ation d&apos;une nouvelle version
          CREATE OBJECT lo_hardcode_root AREA HANDLE lo_attach_write
            EXPORTING
              iv_repid = iv_repid.

          &quot;&quot;  --&gt; Initialisation de la version
          lo_attach_write-&gt;set_root( lo_hardcode_root ).

          &quot;&quot;  --&gt; Sauvegarde la version
          lo_attach_write-&gt;detach_commit( ).

          &quot;&quot;  --&gt; RÃ©cupÃ¨re l&apos;instance de lecture
          me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( CONV shm_inst_name( me-&gt;mv_key ) ).

        CATCH cx_root INTO lo_cx_exception.
          &quot; Une erreur est survenue
          &quot;&quot;  --&gt; LÃ¨ve l&apos;exception
          me-&gt;__raise_exception( lo_cx_exception ).

      ENDTRY.

    CATCH cx_shm_inconsistent INTO lo_cx_exception.
      &quot; Mauvaise gestion version
      TRY.
          &quot;&quot;  --&gt; RÃ©initialisation Instance lecture
          CLEAR : me-&gt;mo_attach_read.

          &quot;&quot;  --&gt; Invalide l&apos;instance
          zcl_hardcode_shm_area=&gt;invalidate_instance( CONV shm_inst_name( me-&gt;mv_key ) ).

          &quot;&quot;  --&gt; Suppression de l&apos;Instance
          zcl_hardcode_shm_area=&gt;free_instance( CONV shm_inst_name( me-&gt;mv_key ) ).

        CATCH cx_shm_parameter_error.

      ENDTRY.

      IF lv_retry_count GT 1.
        &quot; Le traitement a dÃ©jÃ  Ã©tÃ© relancÃ©
        &quot;&quot;  --&gt; LÃ¨ve une Exception
        me-&gt;__raise_exception( lo_cx_exception ).

      ENDIF.

      &quot;&quot;  --&gt; Relance traitement
      ADD 1 TO lv_retry_count.
      RETRY.

    CATCH cx_root INTO lo_cx_exception.
      &quot; Erreur lors de la rÃ©cupÃ©ration du Token de Lecture
      &quot;&quot;  --&gt; LÃ¨ve l&apos;exception
      me-&gt;__raise_exception( lo_cx_exception ).

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - RÃ©cupÃ©ration Instance" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="GET_INSTANCE" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="GET_INSTANCE" SCONAME="RO_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - GestionSHM" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="GET_INSTANCE" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD get_instance.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : GET_INSTANCE                                      *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : RÃ©cupÃ©ration Instance                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.

      &quot; -----------------------------------------------------------
      &quot; Retourne l&apos;Instance
      &quot; -----------------------------------------------------------

      ro_instance = zcl_hardcode_shm=&gt;ms_persistent_data-t_instance[ repid = iv_repid ]-instance.
      IF NOT ro_instance-&gt;mo_attach_read IS BOUND
      OR ro_instance-&gt;hardcode_validity_check( ) EQ abap_false.
        &quot; Instance ne pointant pas sur la derniÃ¨re version
        ro_instance-&gt;_reload( ).

      ENDIF.

    CATCH cx_sy_itab_line_not_found.
      &quot; Aucune correspondance
      TRY.
          &quot; -----------------------------------------------------------
          &quot; CrÃ©ation d&apos;une nouvelle entrÃ©e
          &quot; -----------------------------------------------------------

          &quot;&quot;  --&gt; GÃ©nÃ©ration de l&apos;Instance
          CREATE OBJECT ro_instance
            EXPORTING
              iv_repid = iv_repid.

          &quot;&quot;  --&gt; CrÃ©ation de l&apos;entrÃ©e
          INSERT VALUE #(
            repid    = iv_repid
            instance = ro_instance
          ) INTO TABLE zcl_hardcode_shm=&gt;ms_persistent_data-t_instance.

        CATCH zcx_hardcode_shm INTO lo_cx_exception.
          &quot; Une erreur est survenue
          &quot;&quot;  --&gt; LÃ¨ve l&apos;Exception
          zcl_hardcode_shm=&gt;__raise_exception( lo_cx_exception ).

      ENDTRY.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_FINISH" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - LibÃ©ration Token" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_FINISH" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD hardcode_finish.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_FINISH                                   *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : LibÃ©ration des Tokens                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***
*
  TRY.
      &quot; -----------------------------------------------------------
      &quot; LibÃ©ration des Tokens sur l&apos;Instance
      &quot; -----------------------------------------------------------

      me-&gt;mo_attach_read-&gt;detach( ).

    CATCH cx_shm_already_detached.
      &quot; Token lecture dÃ©jÃ  libÃ©rÃ©

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_GET" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - RÃ©cupÃ©ration" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_GET" SCONAME="IV_VERSION_PRIMARY_ONLY" VERSION="1" LANGU="F" DESCRIPT="Uniquement version primaire ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_GET" SCONAME="RT_HARDCODE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCL_HARDCODE=&gt;TT_HARDCODE"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_GET" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD hardcode_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : RÃ©cupÃ©ration Hardcode depuis la SHM               *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      IF me-&gt;hardcode_validity_check( ) EQ abap_false.
        &quot; Token de Lecture invalide
        &quot;&quot;  --&gt; LibÃ¨re Token de Lecture
        me-&gt;hardcode_finish( ).

        &quot;&quot;  --&gt; RÃ©cupÃ©ration nouvelle version
        me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( CONV shm_inst_name( me-&gt;mv_key ) ).

      ENDIF.

      &quot; Retourne les Hardcodes
      rt_hardcode = me-&gt;mo_attach_read-&gt;root-&gt;hardcode_get( iv_version_primary_only ).

    CATCH cx_root INTO lo_cx_exception.
      &quot; Une erreur est survenue
      me-&gt;__raise_exception( lo_cx_exception ).

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_IS_LOAD" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - PrÃ©sent en SHM ?" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_IS_LOAD" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_IS_LOAD" SCONAME="RV_IN_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode prÃ©sent en SHM" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <source>METHOD hardcode_is_load.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_IS_LOAD                                  *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Hardcode chargÃ© en SHM ?                          *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le prÃ©sence des Hardcodes en SHM
  &quot; -----------------------------------------------------------

  &quot; Retourne Indicateur Vrai si les Informations d&apos;Instance sont non vides
  rv_in_shm = xsdbool( NOT zcl_hardcode_shm_area=&gt;get_instance_infos(
      |{ sy-mandt }{ iv_repid }| ) IS INITIAL ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_RELOAD" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - Recharge" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_RELOAD" SCONAME="IV_ONLY_THIS_AS" VERSION="1" LANGU="F" DESCRIPT="Uniquement cet AS ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PARVALUE="ABAP_FALSE"/>
   <source>METHOD hardcode_reload.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_RELOAD                                   *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Recharge Hardcode dans la SHM                     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF iv_only_this_as EQ abap_true
  OR lines( zcl_hardcode_shm=&gt;ms_persistent_data-t_server_list ) LE 1.
    &quot; Uniquement sur cet AS ou 1 seul As
    &quot;&quot;  --&gt; Recharge les Hardcodes sur cet AS
    me-&gt;_hardcode_reload( ).

  ELSE.
    &quot; Tous les AS
    &quot;&quot;  --&gt; Recharge les Hardcodes sur tous les AS
    LOOP AT zcl_hardcode_shm=&gt;ms_persistent_data-t_server_list ASSIGNING FIELD-SYMBOL(&lt;lfs_s_server_list&gt;).

      TRY.
          &quot; Recharge les Hardcodes sur l&apos;AS spÃ©cifiÃ©
          CALL FUNCTION &apos;Z_HC_SHM_RELOAD&apos;
            DESTINATION &lt;lfs_s_server_list&gt;-name
            EXPORTING
              iv_repid = CONV repid( me-&gt;mv_key+3 ). &quot;On se positionne aprÃ¨s le mandant

        CATCH cx_root.

      ENDTRY.

    ENDLOOP.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_UNLOAD" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - LibÃ©ration Instance" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_UNLOAD" SCONAME="IV_REPID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_UNLOAD" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD hardcode_unload.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_UNLOAD                                   *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Suppression Hardcode de la SHM                    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; LibÃ©ration de l&apos;Instance
      &quot; -----------------------------------------------------------

      zcl_hardcode_shm_area=&gt;invalidate_instance(
          inst_name         = CONV shm_inst_name( |{ sy-mandt }{ iv_repid }| )
          terminate_changer = abap_true
      ).

    CATCH cx_root INTO DATA(lo_cx_exception).
      &quot; Erreur suppression de l&apos;Instance
      zcl_hardcode_shm=&gt;__raise_exception( lo_cx_exception ).

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_VALIDITY_CHECK" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - ContrÃ´le validitÃ©" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="HARDCODE_VALIDITY_CHECK" SCONAME="RV_VALID" VERSION="1" LANGU="F" DESCRIPT="Instance Valide ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <source>METHOD hardcode_validity_check.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : HARDCODE_VALIDITY_CHECK                           *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Hardcode Valide ?                                 *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le validitÃ© de l&apos;instance SHM
  &quot; -----------------------------------------------------------

  IF NOT me-&gt;mo_attach_read IS BOUND
  OR me-&gt;mo_attach_read-&gt;is_valid( ) EQ abap_false
  OR me-&gt;mo_attach_read-&gt;is_active_version( ) EQ abap_false.
    &quot; Instance SHM non valide
    rv_valid = abap_false.

  ELSE.
    &quot; Instance SHM valide
    rv_valid = abap_true.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="_HARDCODE_RELOAD" VERSION="1" LANGU="F" DESCRIPT="Internal Use : Hardcode - SHM - Recharge" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD _hardcode_reload.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : _HARDCODE_RELOAD                                  *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Usage Interne : Recharge Hardcode dans la SHM     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_exception  TYPE REF TO cx_root,
    lo_attach_write  TYPE REF TO zcl_hardcode_shm_area,
    lo_hardcode_root TYPE REF TO zcl_hardcode_shm_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF me-&gt;mo_attach_read IS BOUND.
    TRY.
        &quot; -----------------------------------------------------------
        &quot; LibÃ¨re le Token de Lecture courant
        &quot; -----------------------------------------------------------

        &quot; LibÃ©ration Token de Lecture
        me-&gt;hardcode_finish( ).

      CATCH zcx_hardcode_shm.
        &quot; Erreur survenue

    ENDTRY.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification des Hardcodes dans la SHM
  &quot; -----------------------------------------------------------

  &quot; CrÃ©ation instance d&apos;Ã©criture
  lo_attach_write = zcl_hardcode_shm_area=&gt;attach_for_write( CONV shm_inst_name( me-&gt;mv_key ) ).

  &quot; CrÃ©ation d&apos;une nouvelle version
  CREATE OBJECT lo_hardcode_root AREA HANDLE lo_attach_write
    EXPORTING
      iv_repid = me-&gt;mv_key+3. &quot;On se positionne aprÃ¨s le mandant

  &quot; Initialisation de la version
  lo_attach_write-&gt;set_root( lo_hardcode_root ).

  &quot; Sauvegarde la version
  lo_attach_write-&gt;detach_commit( ).

  &quot; RÃ©cupÃ¨re l&apos;instance de lecture
  me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( CONV shm_inst_name( me-&gt;mv_key ) ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="_RELOAD" VERSION="1" LANGU="F" DESCRIPT="Internal Use : Recharge Instance SHM" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="_RELOAD" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD _reload.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : _RELOAD                                           *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Recharge Token Instance SHM                       *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *
***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_create TYPE xsdboolean.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.

      IF NOT me-&gt;mo_attach_read IS BOUND
      OR me-&gt;hardcode_validity_check( ) EQ abap_false.

        IF NOT me-&gt;mo_attach_read IS BOUND.
          &quot; Aucune Instance de Lecture
          TRY.
              &quot;&quot;  --&gt; RÃ©cupÃ©ration Token de Lecture
              me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( ).
              lv_create = xsdbool( NOT me-&gt;mo_attach_read-&gt;get_root( ) IS BOUND ).

            CATCH cx_root.                               &quot;#EC CATCH_ALL
              &quot; Erreur rÃ©cupÃ©ration Token Lecture ou pas d&apos;entitÃ© Root dÃ©fini
              &quot;&quot;  --&gt; Initialisation indicateur crÃ©ation
              lv_create = abap_true.

          ENDTRY.

        ELSEIF me-&gt;mo_attach_read-&gt;is_valid( )          EQ abap_false
            OR me-&gt;mo_attach_read-&gt;is_active_version( ) EQ abap_false.
          &quot; Instance existante mais sans canal de lecture ou pas dans la version active
          TRY.
              &quot;&quot;  --&gt; LibÃ¨re les Tokens existant sur cette version
              me-&gt;mo_attach_read-&gt;detach( ).

            CATCH cx_root.                &quot;#EC CATCH_ALL #EC NO_HANDLER
              &quot; Erreur libÃ©ration Token Lecture

          ENDTRY.

          TRY.
              &quot;&quot;  --&gt; RÃ©cupÃ©ration Token de Lecture Valide
              me-&gt;mo_attach_read = zcl_hardcode_shm_area=&gt;attach_for_read( ).
              lv_create = xsdbool( NOT me-&gt;mo_attach_read-&gt;get_root( ) IS BOUND ).

            CATCH cx_root.                               &quot;#EC CATCH_ALL
              &quot; Erreur libÃ©ration Token Lecture
              &quot;&quot;  --&gt; Initialisation indicateur crÃ©ation
              lv_create = abap_true.

          ENDTRY.

        ENDIF.

        IF lv_create EQ abap_true.
          &quot;&quot;  --&gt; LibÃ©ration de l&apos;instance
*          FREE : zcl_hardcode_shm=&gt;mo_instance.

          &quot;&quot;  --&gt; CrÃ©ation nouvelle instance
*          CREATE OBJECT zcl_hardcode_shm=&gt;mo_instance.

        ENDIF.

      ENDIF.

    CATCH zcx_hardcode_shm INTO lo_cx_exception.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; LÃ¨ve l&apos;Exception
      zcl_hardcode_shm=&gt;__raise_exception( lo_cx_exception ).

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" VERSION="1" LANGU="F" DESCRIPT="Internal Use : LÃ¨ve une Exception" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IO_PREVIOUS" VERSION="1" LANGU="F" DESCRIPT="Abstract Superclass for All Global Exceptions" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CX_ROOT" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGID" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : classe de messages" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGNO" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : numÃ©ro du message" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGNO" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV1" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV2" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV3" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV4" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM" CMPNAME="__RAISE_EXCEPTION" SCONAME="ZCX_HARDCODE_SHM" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Exception - Gestion SHM" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD __raise_exception.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : __RAISE_EXCEPTION                                 *
*&amp; Classe          : ZCL_HARDCODE_SHM                                  *
*&amp; Description     : Usage Interne : LÃ¨ve une Exception                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_text_id TYPE scx_t100key.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; GÃ©nÃ©ration de l&apos;Exception
  &quot; -----------------------------------------------------------

  IF io_previous IS BOUND.
    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode_shm
      EXPORTING
        previous = io_previous.

  ELSE.
    &quot; Initialisation structure
    ls_text_id-msgid = iv_msgid.
    ls_text_id-msgno = iv_msgno.
    ls_text_id-attr1 = iv_msgv1.
    ls_text_id-attr2 = iv_msgv2.
    ls_text_id-attr3 = iv_msgv3.
    ls_text_id-attr4 = iv_msgv4.

    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode_shm
      EXPORTING
        textid = ls_text_id.

  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_HARDCODE" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" CATEGORY="40" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CX_DYNAMIC_CHECK">
  <friends CLSNAME="ZCX_HARDCODE" REFCLSNAME="ZCL_HARDCODE" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <implementing CLSNAME="ZCX_HARDCODE" REFCLSNAME="IF_T100_MESSAGE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="0 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <inheritance CLSNAME="ZCX_HARDCODE" REFCLSNAME="CX_DYNAMIC_CHECK" VERSION="1" STATE="1"/>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE_SHM_AREA" VERSION="1" LANGU="F" DESCRIPT="Hardcode - MÃ©moire partagÃ©e" CATEGORY="45" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" RSTAT="S" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="CL_SHM_AREA">
  <friends CLSNAME="ZCL_HARDCODE_SHM_AREA" REFCLSNAME="CL_SHM_AREA" FRIENDTYPE="0" VERSION="1" STATE="1"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros></localMacros>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="AREA_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of an Area Class" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;ZCL_HARDCODE_SHM_AREA&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SHM_AREA_NAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ROOT" VERSION="1" LANGU="F" DESCRIPT="SHM: Model of a Data Class" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_ROOT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_CLIENT_DEPENDENT" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="ABAP_FALSE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_LIFE_CONTEXT" VERSION="1" LANGU="F" DESCRIPT="Lifetime of an Area (Constants in CL_SHM_AREA)" EXPOSURE="0" STATE="1" EDITORDER="6 " ATTDECLTYP="2" ATTVALUE="CL_SHM_AREA=&gt;LIFE_CONTEXT_APPSERVER" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SHM_LIFE_CONTEXT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_TRACE_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="(Internal) Flag: Trace Active?" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="1" ATTVALUE="ABAP_FALSE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_TRACE_SERVICE" VERSION="1" LANGU="F" DESCRIPT="(Internal) Reference to Trace Class" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="IF_SHM_TRACE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_TRANSACTIONAL" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="ABAP_FALSE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="_VERSION_" VERSION="1" LANGU="F" DESCRIPT="(internal)" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="22" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_HARDCODE_SHM_AREA" REFCLSNAME="CL_SHM_AREA" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZCL_HARDCODE_SHM_AREA" REFCLSNAME="CL_SHM_AREA" VERSION="1" MTDNAME="GET_ROOT" EXPOSURE="0"/>
  </inheritance>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" VERSION="1" LANGU="F" DESCRIPT="Request a Read Lock" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="HANDLE" VERSION="1" LANGU="F" DESCRIPT="SHM: Model of an Area Class" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_AREA"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_INCONSISTENT" VERSION="1" LANGU="F" DESCRIPT="Different Definitions Between Program and Area" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_NO_ACTIVE_VERSION" VERSION="1" LANGU="F" DESCRIPT="No active version exists for an attach" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_READ_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="Request for a Second Read Lock" MTDTYPE="0" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_EXCLUSIVE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="Instance Already Locked" MTDTYPE="0" EDITORDER="4 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Incorrect parameter transferred" MTDTYPE="0" EDITORDER="5 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_READ" SCONAME="CX_SHM_CHANGE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="A Change Lock Is Already Active" MTDTYPE="0" EDITORDER="6 "/>
   <source>method ATTACH_FOR_READ.

  DATA:
    l_attributes       TYPE shma_attributes,
    l_root             TYPE REF TO object,
    l_cx               TYPE REF TO cx_root,
    l_client           TYPE shm_client,
    l_client_supplied  TYPE abap_bool. &quot;#EC NEEDED

* check if tracing should be activated/de-activated
  IF  ( NOT _trace_service IS INITIAL ).
    TRY.
        _trace_active =
          cl_shm_service=&gt;trace_is_variant_active(
            _trace_service-&gt;variant-def_name
          ).
      CATCH cx_root. &quot;#EC NO_HANDLER
                     &quot;#EC CATCH_ALL
    ENDTRY.
  ENDIF.


  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-attach_for_read = abap_false.

*   &gt;

    CREATE OBJECT handle.

    handle-&gt;client    = l_client.
    handle-&gt;inst_name = inst_name.

*   try sneak mode first
    handle-&gt;_attach_read71( EXPORTING area_name    = area_name
                                      sneak_mode   = abap_true
                                      life_context = _life_context
                            IMPORTING root         = l_root ).

    IF l_root IS INITIAL.
*     no root object returned, sneak mode was not successful.
*     -&gt; read area properties from database and try again.
      cl_shm_service=&gt;initialize(
        EXPORTING area_name       = handle-&gt;area_name
                  client          = l_client
        IMPORTING attributes      = l_attributes
      ).

      handle-&gt;properties = l_attributes-properties.
      handle-&gt;_attach_read71( EXPORTING area_name    = area_name
                                        sneak_mode   = abap_false
                                        life_context = _life_context
                              IMPORTING root         = l_root ).

    ENDIF.

    handle-&gt;root ?= l_root.
*   &lt;

  ELSE.

    TRY.

*       &gt;

        CREATE OBJECT handle.

        handle-&gt;client    = l_client.
        handle-&gt;inst_name = inst_name.

        handle-&gt;_attach_read71( EXPORTING area_name    = area_name
                                          sneak_mode   = abap_true
                                          life_context = _life_context
                                IMPORTING root         = l_root ).

        IF l_root IS INITIAL.
*         no root object returned, sneak mode was not successful.
*         -&gt; read area properties from database and try again.
          cl_shm_service=&gt;initialize(
            EXPORTING area_name       = handle-&gt;area_name
                      client          = l_client
            IMPORTING attributes      = l_attributes
          ).

          handle-&gt;properties = l_attributes-properties.
          handle-&gt;_attach_read71( EXPORTING area_name    = area_name
                                            sneak_mode   = abap_false
                                            life_context = _life_context
                                  IMPORTING root         = l_root ).

        ENDIF.
        handle-&gt;root ?= l_root.

*       &lt;
        _trace_service-&gt;trin_attach_for_read(
          area_name = area_name
          inst_name = inst_name
          client    = l_client ).

      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_attach_for_read(
          area_name = area_name
          inst_name = inst_name
          client    = l_client
          cx        = l_cx
        ).
    ENDTRY.

  ENDIF.

  handle-&gt;inst_trace_service = _trace_service.
  handle-&gt;inst_trace_active  = _trace_active.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" VERSION="1" LANGU="F" DESCRIPT="Request a Change Lock" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="ATTACH_MODE" VERSION="1" LANGU="F" DESCRIPT="Mode of ATTACH (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_ATTACH_MODE" PARVALUE="CL_SHM_AREA=&gt;ATTACH_MODE_DEFAULT"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="WAIT_TIME" VERSION="1" LANGU="F" DESCRIPT="Maximum Wait Time (in Milliseconds)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PARVALUE="0"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="HANDLE" VERSION="1" LANGU="F" DESCRIPT="SHM: Model of an Area Class" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_AREA"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_INCONSISTENT" VERSION="1" LANGU="F" DESCRIPT="Different Definitions Between Program and Area" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_NO_ACTIVE_VERSION" VERSION="1" LANGU="F" DESCRIPT="No active version exists for an attach" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_EXCLUSIVE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="Instance Already Locked" MTDTYPE="0" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_VERSION_LIMIT_EXCEEDED" VERSION="1" LANGU="F" DESCRIPT="No Additional Versions Available" MTDTYPE="0" EDITORDER="4 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_CHANGE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="A write lock is already active" MTDTYPE="0" EDITORDER="5 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Passed Parameter Has Incorrect Value" MTDTYPE="0" EDITORDER="6 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_UPDATE" SCONAME="CX_SHM_PENDING_LOCK_REMOVED" VERSION="1" LANGU="F" DESCRIPT="Shared Objects: Waiting Lock Was Deleted" MTDTYPE="0" EDITORDER="7 "/>
   <source>method ATTACH_FOR_UPDATE.

  DATA:
    l_attributes             TYPE shma_attributes,
    l_root                   TYPE REF TO object,
    l_cx                     TYPE REF TO cx_root,
    l_client                 TYPE shm_client,
    l_client_supplied        TYPE abap_bool, &quot;#EC NEEDED
    l_wait_time              TYPE i,
    l_wait_time_per_loop     TYPE i,
    l_wait_time_per_loop_sec TYPE f.

  l_wait_time = wait_time.

* check if tracing should be activated/de-activated
  IF  ( NOT _trace_service IS INITIAL ).
    TRY.
        _trace_active =
          cl_shm_service=&gt;trace_is_variant_active(
            _trace_service-&gt;variant-def_name
          ).
      CATCH cx_root. &quot;#EC NO_HANDLER
                     &quot;#EC CATCH_ALL
    ENDTRY.
  ENDIF.


  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-attach_for_upd = abap_false.

*   &gt;

    CREATE OBJECT handle.

    handle-&gt;client    = l_client.
    handle-&gt;inst_name = inst_name.

    cl_shm_service=&gt;initialize(
      EXPORTING area_name    = handle-&gt;area_name
                client       = l_client
      IMPORTING attributes   = l_attributes
    ).

    handle-&gt;properties = l_attributes-properties.

    handle-&gt;_attach_update70(
      EXPORTING area_name = handle-&gt;area_name
                mode      = attach_mode
      IMPORTING root      = l_root
      CHANGING  wait_time = l_wait_time ).

    IF abap_true = l_attributes-properties-has_versions AND
       handle-&gt;_lock IS NOT INITIAL.
* we may need a second try in case of class constructors
      handle-&gt;_attach_update70(
        EXPORTING area_name = handle-&gt;area_name
                  mode      = attach_mode
        IMPORTING root      = l_root
        CHANGING  wait_time = l_wait_time ).
    ENDIF.

    IF attach_mode = cl_shm_area=&gt;attach_mode_wait AND
       handle-&gt;_lock IS INITIAL.

      l_wait_time_per_loop = l_wait_time / 10.
* wait_time_per_loop should be at least 2 * SHMATTACHWRITE_MAXACTIVEWAIT
      IF l_wait_time_per_loop &lt; 2000.
        l_wait_time_per_loop = 2000.
      ELSEIF l_wait_time_per_loop &gt; 300000.
        l_wait_time_per_loop = 300000.
      ENDIF.

      l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.

      WHILE handle-&gt;_lock IS INITIAL.

        IF l_wait_time_per_loop &gt; l_wait_time.
          l_wait_time_per_loop = l_wait_time.
          l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.
        ENDIF.

        WAIT UP TO l_wait_time_per_loop_sec SECONDS.
        l_wait_time = l_wait_time - l_wait_time_per_loop.

        handle-&gt;_attach_update70(
          EXPORTING area_name = handle-&gt;area_name
                    mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
          IMPORTING root      = l_root
          CHANGING  wait_time = l_wait_time ).

        IF abap_true = l_attributes-properties-has_versions AND
           handle-&gt;_lock IS NOT INITIAL.
* we may need a second try in case of class constructors
          handle-&gt;_attach_update70(
            EXPORTING area_name = handle-&gt;area_name
                      mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
            IMPORTING root      = l_root
            CHANGING  wait_time = l_wait_time ).
        ENDIF.

      ENDWHILE.

    ENDIF.

    handle-&gt;root ?= l_root.

*   &lt;

  ELSE.

    TRY.

*       &gt;

        CREATE OBJECT handle.

        handle-&gt;client    = l_client.
        handle-&gt;inst_name = inst_name.

        cl_shm_service=&gt;initialize(
          EXPORTING area_name    = handle-&gt;area_name
                    client       = l_client
          IMPORTING attributes   = l_attributes
        ).

        handle-&gt;properties = l_attributes-properties.

        handle-&gt;_attach_update70(
          EXPORTING area_name = handle-&gt;area_name
                    mode      = attach_mode
          IMPORTING root      = l_root
          CHANGING  wait_time = l_wait_time ).

        IF abap_true = l_attributes-properties-has_versions AND
           handle-&gt;_lock IS NOT INITIAL.
* we may need a second try in case of class constructors
          handle-&gt;_attach_update70(
            EXPORTING area_name = handle-&gt;area_name
                      mode      = attach_mode
            IMPORTING root      = l_root
            CHANGING  wait_time = l_wait_time ).
        ENDIF.

        IF attach_mode = cl_shm_area=&gt;attach_mode_wait AND
           handle-&gt;_lock IS INITIAL.

          l_wait_time_per_loop = l_wait_time / 10.
* wait_time_per_loop should be at least 2 * SHMATTACHWRITE_MAXACTIVEWAIT
          IF l_wait_time_per_loop &lt; 2000.
            l_wait_time_per_loop = 2000.
          ELSEIF l_wait_time_per_loop &gt; 300000.
            l_wait_time_per_loop = 300000.
          ENDIF.

          l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.

          WHILE handle-&gt;_lock IS INITIAL.

            IF l_wait_time_per_loop &gt; l_wait_time.
              l_wait_time_per_loop = l_wait_time.
              l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.
            ENDIF.

            WAIT UP TO l_wait_time_per_loop_sec SECONDS.
            l_wait_time = l_wait_time - l_wait_time_per_loop.

            handle-&gt;_attach_update70(
              EXPORTING
                area_name = handle-&gt;area_name
                mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
              IMPORTING
                root      = l_root
              CHANGING
                wait_time = l_wait_time ).

            IF abap_true = l_attributes-properties-has_versions AND
               handle-&gt;_lock IS NOT INITIAL.
* we may need a second try in case of class constructors
              handle-&gt;_attach_update70(
                EXPORTING
                  area_name = handle-&gt;area_name
                  mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
                IMPORTING
                  root      = l_root
                CHANGING
                  wait_time = l_wait_time ).
            ENDIF.

          ENDWHILE.

        ENDIF.

        handle-&gt;root ?= l_root.

*       &lt;
        _trace_service-&gt;trin_attach_for_update(
          area_name = area_name
          inst_name = inst_name
          client    = l_client
          mode      = attach_mode
          wait_time = wait_time
        ).

      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_attach_for_update(
          area_name = area_name
          inst_name = inst_name
          client    = l_client
          mode      = attach_mode
          wait_time = wait_time
          cx        = l_cx
        ).
    ENDTRY.

  ENDIF.

  handle-&gt;inst_trace_service = _trace_service.
  handle-&gt;inst_trace_active  = _trace_active.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" VERSION="1" LANGU="F" DESCRIPT="Request a Write Lock" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="ATTACH_MODE" VERSION="1" LANGU="F" DESCRIPT="Mode of ATTACH (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_ATTACH_MODE" PARVALUE="CL_SHM_AREA=&gt;ATTACH_MODE_DEFAULT"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="WAIT_TIME" VERSION="1" LANGU="F" DESCRIPT="Maximum Wait Time (in Milliseconds)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PARVALUE="0"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="HANDLE" VERSION="1" LANGU="F" DESCRIPT="SHM: Model of an Area Class" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_AREA"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="CX_SHM_EXCLUSIVE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="Instance Already Locked" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="CX_SHM_VERSION_LIMIT_EXCEEDED" VERSION="1" LANGU="F" DESCRIPT="No Additional Versions Available" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="CX_SHM_CHANGE_LOCK_ACTIVE" VERSION="1" LANGU="F" DESCRIPT="A write lock is already active" MTDTYPE="0" EDITORDER="3 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Passed Parameter Has Incorrect Value" MTDTYPE="0" EDITORDER="4 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="ATTACH_FOR_WRITE" SCONAME="CX_SHM_PENDING_LOCK_REMOVED" VERSION="1" LANGU="F" DESCRIPT="Shared Objects: Waiting Lock Was Deleted" MTDTYPE="0" EDITORDER="5 "/>
   <source>method ATTACH_FOR_WRITE.

  DATA:
    l_attributes             TYPE shma_attributes,
    l_cx                     TYPE REF TO cx_root,
    l_client                 TYPE shm_client,
    l_client_supplied        TYPE abap_bool, &quot;#EC NEEDED
    l_wait_time              TYPE i,
    l_wait_time_per_loop     TYPE i,
    l_wait_time_per_loop_sec TYPE f.

  l_wait_time = wait_time.

* check if tracing should be activated/de-activated
  IF  ( NOT _trace_service IS INITIAL ).
    TRY.
        _trace_active =
          cl_shm_service=&gt;trace_is_variant_active(
            _trace_service-&gt;variant-def_name
          ).
      CATCH cx_root. &quot;#EC NO_HANDLER
                     &quot;#EC CATCH_ALL
    ENDTRY.
  ENDIF.


  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-attach_for_write = abap_false.

*   &gt;

    CREATE OBJECT handle.

    handle-&gt;client    = l_client.
    handle-&gt;inst_name = inst_name.

    cl_shm_service=&gt;initialize(
      EXPORTING area_name    = handle-&gt;area_name
                client       = l_client
      IMPORTING attributes   = l_attributes
    ).

    handle-&gt;properties = l_attributes-properties.

    handle-&gt;_attach_write70(
      EXPORTING
        area_name = handle-&gt;area_name
        mode      = attach_mode
      CHANGING
        wait_time = l_wait_time ).

    IF attach_mode = cl_shm_area=&gt;attach_mode_wait AND
       handle-&gt;_lock IS INITIAL.

      l_wait_time_per_loop = l_wait_time / 10.
* wait_time_per_loop should be at least 2 * SHMATTACHWRITE_MAXACTIVEWAIT
      IF l_wait_time_per_loop &lt; 2000.
        l_wait_time_per_loop = 2000.
      ELSEIF l_wait_time_per_loop &gt; 300000.
        l_wait_time_per_loop = 300000.
      ENDIF.

      l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.

      WHILE handle-&gt;_lock IS INITIAL.

        IF l_wait_time_per_loop &gt; l_wait_time.
          l_wait_time_per_loop = l_wait_time.
          l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.
        ENDIF.

        WAIT UP TO l_wait_time_per_loop_sec SECONDS.
        l_wait_time = l_wait_time - l_wait_time_per_loop.

        handle-&gt;_attach_write70(
          EXPORTING
            area_name = handle-&gt;area_name
            mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
          CHANGING
            wait_time = l_wait_time ).

      ENDWHILE.

    ENDIF.

*   &lt;

  ELSE.

    TRY.

*     &gt;

        CREATE OBJECT handle.

        handle-&gt;client    = l_client.
        handle-&gt;inst_name = inst_name.

        cl_shm_service=&gt;initialize(
          EXPORTING area_name    = handle-&gt;area_name
                    client       = l_client
          IMPORTING attributes   = l_attributes
        ).

        handle-&gt;properties = l_attributes-properties.

        handle-&gt;_attach_write70(
          EXPORTING
            area_name = handle-&gt;area_name
            mode      = attach_mode
          CHANGING
            wait_time = l_wait_time ).

        IF attach_mode = cl_shm_area=&gt;attach_mode_wait AND
           handle-&gt;_lock IS INITIAL.

          l_wait_time_per_loop = l_wait_time / 10.
* wait_time_per_loop should be at least 2 * SHMATTACHWRITE_MAXACTIVEWAIT
          IF l_wait_time_per_loop &lt; 2000.
            l_wait_time_per_loop = 2000.
          ELSEIF l_wait_time_per_loop &gt; 300000.
            l_wait_time_per_loop = 300000.
          ENDIF.

          l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.

          WHILE handle-&gt;_lock IS INITIAL.

            IF l_wait_time_per_loop &gt; l_wait_time.
              l_wait_time_per_loop = l_wait_time.
              l_wait_time_per_loop_sec = l_wait_time_per_loop / 1000.
            ENDIF.

            WAIT UP TO l_wait_time_per_loop_sec SECONDS.
            l_wait_time = l_wait_time - l_wait_time_per_loop.

            handle-&gt;_attach_write70(
              EXPORTING
                area_name = handle-&gt;area_name
                mode      = cl_shm_area=&gt;attach_mode_wait_2nd_try
              CHANGING
                wait_time = l_wait_time ).

          ENDWHILE.

        ENDIF.

*     &lt;

        _trace_service-&gt;trin_attach_for_write(
          area_name = area_name
          inst_name = inst_name
          client    = l_client
          mode      = attach_mode
          wait_time = wait_time
        ).
      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_attach_for_write(
          area_name = area_name
          inst_name = inst_name
          client    = l_client
          mode      = attach_mode
          wait_time = wait_time
          cx        = l_cx
        ).
    ENDTRY.

  ENDIF.

  handle-&gt;inst_trace_service = _trace_service.
  handle-&gt;inst_trace_active  = _trace_active.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="BUILD" VERSION="1" LANGU="F" DESCRIPT="Direct Call of Area Constructor" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="BUILD" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="BUILD" SCONAME="CX_SHMA_NOT_CONFIGURED" VERSION="1" LANGU="F" DESCRIPT="SHM Administration: Area Property Is Not Configured" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="BUILD" SCONAME="CX_SHMA_INCONSISTENT" VERSION="1" LANGU="F" DESCRIPT="SHM Administration: Inconsistent Attribute Combination" MTDTYPE="0" EDITORDER="2 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="BUILD" SCONAME="CX_SHM_BUILD_FAILED" VERSION="1" LANGU="F" DESCRIPT="Constructor Run Failed" MTDTYPE="0" EDITORDER="3 "/>
   <source>method BUILD.

  DATA:
    l_cls_name TYPE shm_auto_build_class_name,
    l_cx TYPE REF TO cx_root.

  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-build = abap_false.

*   &gt;
    l_cls_name =
      cl_shm_service=&gt;get_auto_build_class_name( area_name ).

    CALL METHOD (l_cls_name)=&gt;if_shm_build_instance~build
      EXPORTING
        inst_name = inst_name.
*   &lt;

  ELSE.

    TRY.

*       &gt;
        l_cls_name =
          cl_shm_service=&gt;get_auto_build_class_name( area_name ).

        CALL METHOD (l_cls_name)=&gt;if_shm_build_instance~build
          EXPORTING
            inst_name = inst_name.
*       &lt;
        _trace_service-&gt;trin_build(
          area_name         = area_name
          inst_name         = inst_name
        ).

      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_build(
          area_name         = area_name
          inst_name         = inst_name
          cx                = l_cx
        ).
    ENDTRY.

  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CLASS_CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>method CLASS_CONSTRUCTOR.

* TRACE { DO NOT REMOVE THIS LINE !
  _trace_active = abap_false.
  TRY.
      _trace_service =
        cl_shm_service=&gt;trace_get_service( area_name ).
      IF NOT _trace_service IS INITIAL.
        _trace_active =
          cl_shm_service=&gt;trace_is_variant_active(
            _trace_service-&gt;variant-def_name
          ).
      ENDIF.
    CATCH cx_root. &quot;#EC NO_HANDLER
                   &quot;#EC CATCH_ALL
  ENDTRY.
* TRACE } DO NOT REMOVE THIS LINE !

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="DETACH_AREA" VERSION="1" LANGU="F" DESCRIPT="Release all locks on all instances" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="DETACH_AREA" SCONAME="RC" VERSION="1" LANGU="F" DESCRIPT="Detach Return Value (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_RC"/>
   <source>method DETACH_AREA.

  DATA:
    l_client TYPE shm_client,
    l_client_supplied TYPE abap_bool VALUE abap_false.


* &gt;
  rc = _detach_area71( area_name        = area_name
                       client           = l_client
                       client_supplied  = l_client_supplied
                       client_dependent = _client_dependent
                       life_context     = _life_context
       ).
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-detach_area = abap_true.
      _trace_service-&gt;trin_detach_area(
        area_name = area_name
        client    = l_client
        rc        = rc
      ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_AREA" VERSION="1" LANGU="F" DESCRIPT="Delete all instances" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_AREA" SCONAME="TERMINATE_CHANGER" VERSION="1" LANGU="F" DESCRIPT="Writing processes will be ended" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_AREA" SCONAME="RC" VERSION="1" LANGU="F" DESCRIPT="Return Value (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_RC"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_AREA" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Incorrect parameter transferred" MTDTYPE="0" EDITORDER="1 "/>
   <source>method FREE_AREA.

  DATA:
    l_client TYPE shm_client,
    l_client_supplied TYPE abap_bool VALUE abap_false.

  CONSTANTS: affect_server TYPE shm_affect_server
             VALUE cl_shm_area=&gt;affect_local_server.


* &gt;
  rc = _free_area71( area_name         = area_name
                     client            = l_client
                     client_supplied   = l_client_supplied
                     client_dependent  = _client_dependent
                     transactional     = _transactional
                     terminate_changer = terminate_changer
                     affect_server     = affect_server
                     life_context      = _life_context ).
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-free_area = abap_true.
      _trace_service-&gt;trin_free_area(
      area_name         = area_name
      client            = l_client
      terminate_changer = terminate_changer
      affect_server     = affect_server
      rc                = rc
    ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Deletion of an Instance" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_INSTANCE" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_INSTANCE" SCONAME="TERMINATE_CHANGER" VERSION="1" LANGU="F" DESCRIPT="Writing processes will be ended" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_INSTANCE" SCONAME="RC" VERSION="1" LANGU="F" DESCRIPT="Return Value (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_RC"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="FREE_INSTANCE" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Incorrect parameter transferred" MTDTYPE="0" EDITORDER="1 "/>
   <source>method FREE_INSTANCE.

  DATA:
    l_client TYPE shm_client,
    l_client_supplied TYPE abap_bool VALUE abap_false.

  CONSTANTS: affect_server TYPE shm_affect_server
             VALUE cl_shm_area=&gt;affect_local_server.


* &gt;
  rc = _free_instance71( area_name         = area_name
                         inst_name         = inst_name
                         client            = l_client
                         client_supplied   = l_client_supplied
                         client_dependent  = _client_dependent
                         transactional     = _transactional
                         terminate_changer = terminate_changer
                         affect_server     = affect_server
                         life_context      = _life_context ).
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-free_instance = abap_true.
      _trace_service-&gt;trin_free_instance(
        area_name         = area_name
        inst_name         = inst_name
        client            = l_client
        terminate_changer = terminate_changer
        affect_server     = affect_server
        rc                = rc
      ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="GET_GENERATOR_VERSION" VERSION="1" LANGU="F" DESCRIPT="Query Generator Version" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="GET_GENERATOR_VERSION" SCONAME="GENERATOR_VERSION" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="I"/>
   <source>method GET_GENERATOR_VERSION.
  generator_version = _version_.
  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="GET_INSTANCE_INFOS" VERSION="1" LANGU="F" DESCRIPT="Returns the names of all instances" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="GET_INSTANCE_INFOS" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance in an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="GET_INSTANCE_INFOS" SCONAME="INFOS" VERSION="1" LANGU="F" DESCRIPT="Overview of all Instances of an SHM Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_INST_INFOS"/>
   <source>method GET_INSTANCE_INFOS.

  DATA:
    l_client             TYPE shm_client,
    l_client_supplied    TYPE abap_bool VALUE abap_false,
    l_inst_name_supplied TYPE abap_bool VALUE abap_false.


  IF inst_name IS SUPPLIED.
    l_inst_name_supplied = abap_true.
  ENDIF.

* &gt;
  TRY.
      CALL METHOD (&apos;_GET_INSTANCE_INFOS804&apos;)
        EXPORTING
          area_name          = area_name
          client             = l_client
          client_supplied    = l_client_supplied
          client_dependent   = _client_dependent
          life_context       = _life_context
          inst_name          = inst_name
          inst_name_supplied = l_inst_name_supplied
        RECEIVING
          infos              = infos.
    CATCH cx_sy_dyn_call_illegal_method.
*     New kernel and/or new basis SP missing -&gt; use slow fallback
      infos = _get_instance_infos71(
                area_name        = area_name
                client           = l_client
                client_supplied  = l_client_supplied
                client_dependent = _client_dependent
                life_context     = _life_context
              ).
      IF abap_true = l_inst_name_supplied.
        DELETE infos WHERE name &lt;&gt; inst_name.
      ENDIF.
  ENDTRY.
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-get_instance_inf = abap_true.
      _trace_service-&gt;trin_get_instance_infos(
        area_name         = area_name
        client            = l_client
        infos             = infos
      ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="CL_SHM_AREA" CMPNAME="GET_ROOT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method GET_ROOT.

  DATA:
    l_cx        TYPE REF TO cx_root,
    l_area_name TYPE string,
    l_inst_name TYPE string,
    l_client    TYPE string.

  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-get_root = abap_false.

*   &gt;
    IF is_valid( ) = abap_false.
      l_area_name = me-&gt;area_name.
      l_inst_name = me-&gt;inst_name.
      l_client    = me-&gt;client.
      RAISE EXCEPTION TYPE cx_shm_already_detached
        EXPORTING
          area_name = l_area_name
          inst_name = l_inst_name
          client    = l_client.
    ENDIF.
    root = me-&gt;root.
*   &lt;

  ELSE.

    TRY.

*       &gt;
        IF is_valid( ) = abap_false.
          l_area_name = me-&gt;area_name.
          l_inst_name = me-&gt;inst_name.
          l_client    = me-&gt;client.
          RAISE EXCEPTION TYPE cx_shm_already_detached
            EXPORTING
              area_name = l_area_name
              inst_name = l_inst_name
              client    = l_client.
        ENDIF.
        root = me-&gt;root.
*       &lt;

        _trace_service-&gt;trin_get_root(
          area_name = area_name
        ).

      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_get_root(
          area_name = area_name
          cx        = l_cx
        ).
    ENDTRY.

  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_AREA" VERSION="1" LANGU="F" DESCRIPT="Active versions of all instances will be set to obsolete" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_AREA" SCONAME="TERMINATE_CHANGER" VERSION="1" LANGU="F" DESCRIPT="Active writing processes will be ended" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_AREA" SCONAME="RC" VERSION="1" LANGU="F" DESCRIPT="Detach Return Value (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_RC"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_AREA" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Incorrect parameter transferred" MTDTYPE="0" EDITORDER="1 "/>
   <source>method INVALIDATE_AREA.

  DATA:
    l_client TYPE shm_client,
    l_client_supplied TYPE abap_bool VALUE abap_false.

  CONSTANTS: affect_server TYPE shm_affect_server
             VALUE cl_shm_area=&gt;affect_local_server.


* &gt;
  rc = _invalidate_area71( area_name         = area_name
                           client            = l_client
                           client_supplied   = l_client_supplied
                           client_dependent  = _client_dependent
                           transactional     = _transactional
                           terminate_changer = terminate_changer
                           affect_server     = affect_server
                           life_context      = _life_context ).
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-invalidate_area = abap_true.
      _trace_service-&gt;trin_invalidate_area(
        area_name         = area_name
        client            = l_client
        terminate_changer = terminate_changer
        affect_server     = affect_server
        rc                = rc
      ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_INSTANCE" VERSION="1" LANGU="F" DESCRIPT="Active version of one instance will be set to obsolete" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_INSTANCE" SCONAME="INST_NAME" VERSION="1" LANGU="F" DESCRIPT="Name of a Shared Object Instance of an Area" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SHM_INST_NAME" PARVALUE="CL_SHM_AREA=&gt;DEFAULT_INSTANCE" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_INSTANCE" SCONAME="TERMINATE_CHANGER" VERSION="1" LANGU="F" DESCRIPT="Active writing processes will be ended" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_INSTANCE" SCONAME="RC" VERSION="1" LANGU="F" DESCRIPT="Detach Return Value (Constants in CL_SHM_AREA)" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SHM_RC"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="INVALIDATE_INSTANCE" SCONAME="CX_SHM_PARAMETER_ERROR" VERSION="1" LANGU="F" DESCRIPT="Incorrect parameter transferred" MTDTYPE="0" EDITORDER="1 "/>
   <source>method INVALIDATE_INSTANCE.

  DATA:
    l_client TYPE shm_client,
    l_client_supplied TYPE abap_bool value abap_false.

  CONSTANTS: affect_server TYPE shm_affect_server
             VALUE cl_shm_area=&gt;affect_local_server.


* &gt;
  rc = _invalidate_instance71(
    area_name         = area_name
    inst_name         = inst_name
    client            = l_client
    client_supplied   = l_client_supplied
    client_dependent  = _client_dependent
    transactional     = _transactional
    terminate_changer = terminate_changer
    affect_server     = affect_server
    life_context      = _life_context
  ).
* &lt;

  IF _trace_active = abap_true.
    IF _trace_service-&gt;variant-invalidate_inst = abap_true.
      _trace_service-&gt;trin_invalidate_instance(
        area_name         = area_name
        inst_name         = inst_name
        client            = l_client
        terminate_changer = terminate_changer
        affect_server     = affect_server
        rc                = rc
      ).
    ENDIF.
  ENDIF.

  endmethod.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="SET_ROOT" VERSION="1" LANGU="F" DESCRIPT="Sets Root Objects" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="SET_ROOT" SCONAME="ROOT" VERSION="1" LANGU="F" DESCRIPT="Root object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="ZCL_HARDCODE_SHM_ROOT"/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="SET_ROOT" SCONAME="CX_SHM_INITIAL_REFERENCE" VERSION="1" LANGU="F" DESCRIPT="Initial Reference Passed" MTDTYPE="0" EDITORDER="1 "/>
   <exception CLSNAME="ZCL_HARDCODE_SHM_AREA" CMPNAME="SET_ROOT" SCONAME="CX_SHM_WRONG_HANDLE" VERSION="1" LANGU="F" DESCRIPT="Incorrect Handle" MTDTYPE="0" EDITORDER="2 "/>
   <source>method SET_ROOT.

  DATA:
    l_cx TYPE REF TO cx_root.

  IF _trace_active = abap_false OR
  _trace_service-&gt;variant-set_root = abap_false.

*   &gt;
    _set_root( root ).
    me-&gt;root = root.
*   &lt;

  ELSE.

    TRY.

*       &gt;
        _set_root( root ).
        me-&gt;root = root.
*       &lt;
        _trace_service-&gt;trin_set_root(
          area_name         = area_name
          inst_name         = inst_name
          root              = root
        ).

      CLEANUP INTO l_cx.
        _trace_service-&gt;trcx_set_root(
          area_name         = area_name
          inst_name         = inst_name
          root              = root
          cx                = l_cx
        ).
    ENDTRY.

  ENDIF.

  endmethod.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_HARDCODE_VERSION" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="31 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hardcode_version.
          INCLUDE TYPE ztec_t_hc_vers.
  TYPES :
    volatile TYPE flag,
    updated  TYPE flag,
    END OF   ty_hardcode_version
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_HARDCODE_VERSION" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="12 " SRCCOLUMN2="121 " TYPESRC_LENG="0 " TYPESRC="ty_t_hardcode_version TYPE SORTED TABLE OF ty_hardcode_version WITH UNIQUE KEY primary_key COMPONENTS version_guid
                                                            WITH UNIQUE SORTED KEY second_key  COMPONENTS repid version_id
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_HARDCODE_PARAMETER" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="14 " SRCCOLUMN1="4 " SRCROW2="19 " SRCCOLUMN2="33 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hardcode_parameter.
          INCLUDE TYPE ztec_t_hc_param.
  TYPES :
    volatile TYPE flag,
    updated  TYPE flag,
    END OF   ty_hardcode_parameter
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_HARDCODE_PARAMETER" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="21 " SRCCOLUMN1="4 " SRCROW2="22 " SRCCOLUMN2="136 " TYPESRC_LENG="0 " TYPESRC="ty_t_hardcode_parameter TYPE SORTED TABLE OF ty_hardcode_parameter WITH UNIQUE KEY primary_key COMPONENTS parameter_guid
                                                                WITH UNIQUE SORTED KEY second_key  COMPONENTS version_guid parameter_name
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_HARDCODE_ATTRIBUTE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="5 " TYPTYPE="4" SRCROW1="24 " SRCCOLUMN1="4 " SRCROW2="29 " SRCCOLUMN2="33 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hardcode_attribute.
          INCLUDE TYPE ztec_t_hc_attr.
  TYPES :
    volatile TYPE flag,
    updated  TYPE flag,
    END OF   ty_hardcode_attribute
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_HARDCODE_ATTRIBUTE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="6 " TYPTYPE="4" SRCROW1="31 " SRCCOLUMN1="4 " SRCROW2="32 " SRCCOLUMN2="198 " TYPESRC_LENG="0 " TYPESRC="ty_t_hardcode_attribute TYPE SORTED TABLE OF ty_hardcode_attribute WITH UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup attribute_guid
                                                            WITH NON-UNIQUE SORTED KEY second_key  COMPONENTS parameter_guid attribute_name attribute_key1 attribute_key2 attribute_key3 attribute_key4
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="7 " TYPTYPE="4" SRCROW1="34 " SRCCOLUMN1="4 " SRCROW2="37 " SRCCOLUMN2="28 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_key,
      attribute_guid_regroup TYPE ztec_t_hc_attr-attribute_guid_regroup,
      attribute_guid         TYPE ztec_t_hc_attr-attribute_guid,
    END OF   ty_attribute_key
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_ATTRIBUTE_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="8 " TYPTYPE="4" SRCROW1="39 " SRCCOLUMN1="4 " SRCROW2="40 " SRCCOLUMN2="110 " TYPESRC_LENG="0 " TYPESRC="ty_t_attribute_key TYPE STANDARD TABLE OF ty_attribute_key
                               WITH NON-UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup attribute_guid
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TS_ATTRIBUTE_CODE_SOURCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="9 " TYPTYPE="4" SRCROW1="43 " SRCCOLUMN1="4 " SRCROW2="48 " SRCCOLUMN2="36 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ts_attribute_code_source,
      attribute_guid_regroup TYPE ztec_t_hc_attr-attribute_guid_regroup,
      t_code_source          TYPE stringtab,
      volatile               TYPE flag,
      updated                TYPE flag,
    END OF   ts_attribute_code_source
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TT_ATTRIBUTE_CODE_SOURCE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="10 " TYPTYPE="4" SRCROW1="50 " SRCCOLUMN1="10 " SRCROW2="51 " SRCCOLUMN2="70 " TYPESRC_LENG="0 " TYPESRC="tt_attribute_code_source TYPE SORTED TABLE OF ts_attribute_code_source
          WITH UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_WORK_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="11 " TYPTYPE="4" SRCROW1="53 " SRCCOLUMN1="4 " SRCROW2="58 " SRCCOLUMN2="24 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_work_data,
      t_hardcode_version         TYPE ty_t_hardcode_version,
      t_hardcode_parameter       TYPE ty_t_hardcode_parameter,
      t_hardcode_attribute       TYPE ty_t_hardcode_attribute,
      t_hc_attribute_code_source TYPE tt_attribute_code_source,
    END OF   ty_work_data
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_DELETED_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="12 " TYPTYPE="4" SRCROW1="60 " SRCCOLUMN1="4 " SRCROW2="65 " SRCCOLUMN2="27 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_deleted_data,
      t_version_guid             TYPE nwecm_t_ids,
      t_parameter_guid           TYPE nwecm_t_ids,
      t_attribute_guid           TYPE ty_t_attribute_key,
      t_code_source_guid TYPE epic_t_guid,
    END OF   ty_deleted_data
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_RANGE_VALUE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="14 " SRCCOLUMN2="38 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_range_value,
        attribute_sign TYPE ztec_t_hc_attr-attribute_sign,
        attribute_opti TYPE ztec_t_hc_attr-attribute_opti,
        attribute_low	 TYPE ztec_t_hc_attr-attribute_low,
        attribute_high TYPE ztec_t_hc_attr-attribute_high,
      END OF   ty_attribute_range_value
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_ATTRIBUTE_RANGE_VALUE" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="16 " SRCCOLUMN1="4 " SRCROW2="17 " SRCCOLUMN2="120 " TYPESRC_LENG="0 " TYPESRC="ty_t_attribute_range_value TYPE STANDARD TABLE OF ty_attribute_range_value
                    WITH NON-UNIQUE KEY primary_key COMPONENTS attribute_sign attribute_opti attribute_low attribute_high
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_RANGE_VALUE_DET" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="19 " SRCCOLUMN1="4 " SRCROW2="23 " SRCCOLUMN2="42 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_range_value_det,
        attribute_guid TYPE ztec_t_hc_attr-attribute_guid.
        INCLUDE TYPE ty_attribute_range_value.
        TYPES :
      END OF   ty_attribute_range_value_det
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_ATTRIBUTE_RANGE_VALUE_DET" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="25 " SRCCOLUMN1="4 " SRCROW2="26 " SRCCOLUMN2="96 " TYPESRC_LENG="0 " TYPESRC="ty_t_attribute_range_value_det TYPE SORTED TABLE OF ty_attribute_range_value_det
                                        WITH NON-UNIQUE KEY primary_key COMPONENTS attribute_guid
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="5 " TYPTYPE="4" SRCROW1="28 " SRCCOLUMN1="4 " SRCROW2="31 " SRCCOLUMN2="37 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_range_data,
        attribute_guid_regroup TYPE ztec_t_hc_attr-attribute_guid_regroup,
        t_attribute_range_value TYPE ty_t_attribute_range_value_det,
      END OF   ty_attribute_range_data
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="6 " TYPTYPE="4" SRCROW1="33 " SRCCOLUMN1="4 " SRCROW2="34 " SRCCOLUMN2="82 " TYPESRC_LENG="0 " TYPESRC="ty_t_attribute_range_data TYPE SORTED TABLE OF ty_attribute_range_data
                  WITH NON-UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_LOGICAL_KEY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="7 " TYPTYPE="4" SRCROW1="36 " SRCCOLUMN1="4 " SRCROW2="42 " SRCCOLUMN2="38 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_logical_key,
        attribute_name TYPE ztec_t_hc_attr-attribute_name,
        attribute_key1 TYPE ztec_t_hc_attr-attribute_key1,
        attribute_key2 TYPE ztec_t_hc_attr-attribute_key2,
        attribute_key3 TYPE ztec_t_hc_attr-attribute_key3,
        attribute_key4 TYPE ztec_t_hc_attr-attribute_key4,
      END OF   ty_attribute_logical_key
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_ATTRIBUTE_LOGICAL_KEY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="8 " TYPTYPE="4" SRCROW1="44 " SRCCOLUMN1="4 " SRCROW2="45 " SRCCOLUMN2="142 " TYPESRC_LENG="0 " TYPESRC="ty_t_attribute_logical_key TYPE SORTED TABLE OF ty_attribute_logical_key
                                             WITH UNIQUE KEY primary_key COMPONENTS attribute_name attribute_key1 attribute_key3 attribute_key4
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_ATTRIBUTE_LOGICAL_KEYX" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="9 " TYPTYPE="4" SRCROW1="47 " SRCCOLUMN1="4 " SRCROW2="53 " SRCCOLUMN2="39 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_attribute_logical_keyx,
        attribute_name TYPE flag,
        attribute_key1 TYPE flag,
        attribute_key2 TYPE flag,
        attribute_key3 TYPE flag,
        attribute_key4 TYPE flag,
      END OF   ty_attribute_logical_keyx
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_HARDCODE_ATTRIBUTE_DATA" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="10 " TYPTYPE="4" SRCROW1="55 " SRCCOLUMN1="4 " SRCROW2="60 " SRCCOLUMN2="40 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hardcode_attribute_data.
            INCLUDE TYPE ty_attribute_logical_key.
            INCLUDE TYPE ty_attribute_range_value.
    TYPES :
      attribute_as_range TYPE ztec_t_hc_attr-attribute_as_range,
      END OF   ty_hardcode_attribute_data
"/>
  <types CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="TY_T_HARDCODE_ATTRIBUTE_DATA" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="11 " TYPTYPE="4" SRCROW1="62 " SRCCOLUMN1="4 " SRCROW2="63 " SRCCOLUMN2="145 " TYPESRC_LENG="0 " TYPESRC="ty_t_hardcode_attribute_data TYPE SORTED TABLE OF ty_hardcode_attribute_data
                                                WITH UNIQUE KEY primary_key COMPONENTS attribute_name attribute_key1 attribute_key3 attribute_key4
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_HARDCODE_MAINTAIN" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <typeClasDef CLSNAME="ZCL_HARDCODE_MAINTAIN" TYPEGROUP="ZCL_HARDCODE" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <typeClasDef CLSNAME="ZCL_HARDCODE_MAINTAIN" TYPEGROUP="ZCL_HARDCODE_MAINTAIN" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <attribute CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="MC_MY_MSGID" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : classe de messages" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;ZHARDCODE&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="MS_DELETED_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_DELETED_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="MS_WORK_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_WORK_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="MV_REPID" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" VERSION="1" LANGU="F" DESCRIPT="Attribut - CrÃ©ation" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="IS_ATTRIBUTE_LOGICAL_KEY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_ATTRIBUTE_LOGICAL_KEY"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="IR_RANGES_VALUE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="IT_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Code Source" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="ES_ATTRIBUTE_DATA" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Table Attributs" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="ES_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_HARDCODE_MAINTAIN=&gt;TY_ATTRIBUTE_RANGE_DATA"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="RV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_ADD" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_add.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_ADD                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - CrÃ©ation                               *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_attribute       TYPE zcl_hardcode_maintain=&gt;ty_hardcode_attribute,
    ls_attribute_range_value    TYPE zcl_hardcode_maintain=&gt;ty_attribute_range_value_det,
    ls_hc_attribute_code_source TYPE zcl_hardcode_maintain=&gt;ts_attribute_code_source.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_attribute_range_data, es_attribute_data.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF me-&gt;attribute_exist(
      iv_parameter_guid        = iv_parameter_guid
      is_attribute_logical_key = is_attribute_logical_key
  ) EQ abap_true.
    &quot; L&apos;entrÃ©e existe dÃ©jÃ 
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 302
        iv_msgv1 = is_attribute_logical_key-attribute_name
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Ajout du nouveau ParamÃ¨tre
  &quot; -----------------------------------------------------------

  &quot; Initialisation des donnÃ©es
  ls_hardcode_attribute-mandt          = sy-mandt.
  ls_hardcode_attribute-volatile       = abap_true.
  ls_hardcode_attribute-parameter_guid = iv_parameter_guid.
  ls_hardcode_attribute-attribute_name = is_attribute_logical_key-attribute_name.
  ls_hardcode_attribute-attribute_key1 = is_attribute_logical_key-attribute_key1.
  ls_hardcode_attribute-attribute_key2 = is_attribute_logical_key-attribute_key2.
  ls_hardcode_attribute-attribute_key3 = is_attribute_logical_key-attribute_key3.
  ls_hardcode_attribute-attribute_key4 = is_attribute_logical_key-attribute_key4.

  &quot; Initialisation donnÃ©s tracabilitÃ©
  ls_hardcode_attribute-created_by     = sy-uname.
  GET TIME STAMP FIELD ls_hardcode_attribute-created_at.

  TRY.
      &quot; CrÃ©ation ID Unique
      ls_hardcode_attribute-attribute_guid_regroup = cl_system_uuid=&gt;create_uuid_c32_static( ).

    CATCH cx_uuid_error.
      &quot; Erreur lors de la crÃ©ation du GUID
      &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
      ls_hardcode_attribute-attribute_guid_regroup = cl_abap_random=&gt;seed( ).

  ENDTRY.

  &quot; Initialisation ligne de rÃ©fÃ©rence (GUID Unique = GUID Regroupement)
  rv_attribute_guid_regroup = ls_hardcode_attribute-attribute_guid = ls_hardcode_attribute-attribute_guid_regroup.

  &quot; Initialisation TÃ©moin Range &amp; Code Source
  ls_hardcode_attribute-attribute_as_code_source = boolc( NOT it_code_source[] IS INITIAL ).
  ls_hardcode_attribute-attribute_as_range = boolc( NOT ir_ranges_value[] IS INITIAL ).

  &quot; Ajout dans la table Interne
  INSERT ls_hardcode_attribute INTO TABLE me-&gt;ms_work_data-t_hardcode_attribute.

  &quot; -----------------------------------------------------------
  &quot; Gestion Code Source
  &quot; -----------------------------------------------------------

  IF NOT it_code_source[] IS INITIAL.
    &quot; Ajout du Code Source
    READ TABLE me-&gt;ms_work_data-t_hc_attribute_code_source
      WITH TABLE KEY attribute_guid_regroup = ls_hardcode_attribute-attribute_guid_regroup
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_attr_code_source&gt;).
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; CrÃ©ation nouvelle entrÃ©e
      ls_hc_attribute_code_source-volatile               = abap_true.
      ls_hc_attribute_code_source-attribute_guid_regroup = ls_hardcode_attribute-attribute_guid_regroup.
      INSERT ls_hc_attribute_code_source INTO TABLE me-&gt;ms_work_data-t_hc_attribute_code_source
                                          ASSIGNING &lt;lfs_s_hc_attr_code_source&gt;.

    ELSE.
      &quot; Existe dÃ©jÃ 
      &quot;&quot;  --&gt; Initialisation TÃ©moin de MÃ J
      &lt;lfs_s_hc_attr_code_source&gt;-updated = abap_true.

    ENDIF.

    &quot; Initialisation Code Source
    &lt;lfs_s_hc_attr_code_source&gt;-t_code_source[] = it_code_source[].

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Gestion Valeurs Multiple
  &quot; -----------------------------------------------------------

  IF NOT ir_ranges_value[] IS INITIAL.
    &quot; Ajout des Valeurs de Range
    me-&gt;attribute_set(
        iv_parameter_guid         = iv_parameter_guid
        iv_attribute_guid_regroup = ls_hardcode_attribute-attribute_guid_regroup
        ir_new_ranges_value       = ir_ranges_value
    ).

    IF es_attribute_range_data IS SUPPLIED.
      &quot; Alimentation table de valeurs des Attributs
      READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY attribute_guid_regroup = ls_hardcode_attribute-attribute_guid_regroup
                                                   TRANSPORTING NO FIELDS BINARY SEARCH.
      IF sy-subrc EQ 0.
        &quot; Au moins une correspondance
        &quot;&quot;  --&gt; CrÃ©ation nouvelle entrÃ©e dans la table de sortie
        es_attribute_range_data-attribute_guid_regroup = ls_hardcode_attribute-attribute_guid_regroup.

        &quot;&quot;  --&gt; Parcours l&apos;ensemble des Attributs
        LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_attribute&gt;)
                                                           FROM sy-tabix.

          CLEAR : ls_attribute_range_value.

          IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup NE ls_hardcode_attribute-attribute_guid_regroup.
            &quot; On ne traite plus le mÃªme Attribut
            &quot;&quot;  --&gt; ArrÃªt de la boucle
            EXIT.

          ENDIF.

          IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
            &quot; Il s&apos;agit de l&apos;Attribut lui-mÃªme
            &quot;&quot;  --&gt; Ne pas tenir compte
            CONTINUE.

          ENDIF.

          &quot; Initialisation donnÃ©es
          MOVE-CORRESPONDING &lt;lfs_s_hardcode_attribute&gt; TO ls_attribute_range_value.
          ls_attribute_range_value-attribute_guid = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.

          &quot; Ajout de la valeur dans la table de retour
          INSERT ls_attribute_range_value INTO TABLE es_attribute_range_data-t_attribute_range_value.

        ENDLOOP.    &quot;Fin parcours des valeurs de l&apos;Attribut

      ENDIF.        &quot;Fin de test prÃ©sence d&apos;au moins une correspondance

    ENDIF.          &quot;Fin de test rÃ©stitution des valeurs d&apos;Attributs ?

  ENDIF.            &quot;Fin valeurs d&apos;Attributs prÃ©sentes ?

  &quot; -----------------------------------------------------------
  &quot; Initialisation paramÃ¨tres de retour
  &quot; -----------------------------------------------------------

  IF es_attribute_data IS SUPPLIED.
    &quot; Retourne les donnÃ©es
    MOVE-CORRESPONDING ls_hardcode_attribute TO es_attribute_data.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" VERSION="1" LANGU="F" DESCRIPT="Attribut - Copie" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="IV_PARAMETER_GUID_COPY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID Ã  copier" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="IV_PARAMETER_GUID_NEW" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="IV_ATTRIBUTE_GUID_REGROUP_COPY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="IV_ATTRIBUTE_NAME_NEW" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR-ATTRIBUTE_NAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="ES_ATTRIBUTE_DATA" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Table des Attributs" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="ET_ATTRIBUTE_DATA" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_ATTR" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="ET_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_HARDCODE_MAINTAIN=&gt;TY_T_ATTRIBUTE_RANGE_DATA"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="RV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_COPY" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_copy.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_COPY                                    *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - Copie                                  *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lr_ranges_value TYPE me-&gt;ty_t_attribute_range_value.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    lsr_ranges_value         TYPE me-&gt;ty_attribute_range_value,
    ls_attribute_data        TYPE ztec_t_hc_attr,
    ls_attribute_range_data  TYPE zcl_hardcode_maintain=&gt;ty_attribute_range_data,
    ls_attribute_logical_key TYPE me-&gt;ty_attribute_logical_key.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR   : es_attribute_data.
  REFRESH : et_attribute_data.

  IF  NOT iv_parameter_guid_copy IS INITIAL
  AND NOT iv_parameter_guid_new IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Copie des Attributs du ParamÃ¨tre
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des Attributs du ParamÃ¨tre
    READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY second_key
                                                   COMPONENTS parameter_guid = iv_parameter_guid_copy
                                                TRANSPORTING NO FIELDS.
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; Parcours l&apos;ensemble des Attributs du ParamÃ¨tre
    LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_attribute&gt;)
                                                  USING KEY second_key
                                                       FROM sy-tabix.

      CLEAR : ls_attribute_data.

      IF &lt;lfs_s_hardcode_attribute&gt;-parameter_guid NE iv_parameter_guid_copy.
        &quot; On ne traite plus le mÃªme ParamÃ¨tre
        &quot;&quot;  --&gt; ArrÃªt du traitement
        EXIT.

      ENDIF.

      AT NEW attribute_guid_regroup.
        &quot; A chaque changement de GUID de Regrupement
        &quot;&quot;  --&gt; RÃ©initialisation donnÃ©es
        CLEAR : ls_attribute_logical_key, lr_ranges_value[].

      ENDAT.

      IF NOT &lt;lfs_s_hardcode_attribute&gt;-attribute_sign IS INITIAL.
        &quot; Range valorisÃ©
        &quot;&quot;  --&gt; Ajout des valeurs
        CLEAR : lsr_ranges_value.
        lsr_ranges_value-attribute_low  = &lt;lfs_s_hardcode_attribute&gt;-attribute_low.
        lsr_ranges_value-attribute_sign = &lt;lfs_s_hardcode_attribute&gt;-attribute_sign.
        lsr_ranges_value-attribute_high = &lt;lfs_s_hardcode_attribute&gt;-attribute_high.
        lsr_ranges_value-attribute_opti = &lt;lfs_s_hardcode_attribute&gt;-attribute_opti.
        APPEND lsr_ranges_value TO lr_ranges_value.

      ENDIF.

      AT END OF attribute_guid_regroup.
        &quot; Lors du traitement du dernier GUID de Regroupement
        &quot;&quot;  --&gt; Initialisation Clef Logique
        ls_attribute_logical_key-attribute_name = &lt;lfs_s_hardcode_attribute&gt;-attribute_name.
        ls_attribute_logical_key-attribute_key1 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key1.
        ls_attribute_logical_key-attribute_key2 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key2.
        ls_attribute_logical_key-attribute_key3 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key3.
        ls_attribute_logical_key-attribute_key4 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key4.

        TRY.
            &quot;&quot;  --&gt; CrÃ©ation du nouvel Attribut
            me-&gt;attribute_add(
              EXPORTING
                iv_parameter_guid        = iv_parameter_guid_new       &quot;Sur le nouvel Attribut
                is_attribute_logical_key = ls_attribute_logical_key
                ir_ranges_value          = lr_ranges_value
              IMPORTING
                es_attribute_data        = ls_attribute_data
                es_attribute_range_data  = ls_attribute_range_data
            ).

            IF et_attribute_data IS SUPPLIED.
              &quot; Alimentation table donnÃ©es
              APPEND ls_attribute_data TO et_attribute_data.

            ENDIF.

            IF  et_attribute_range_data     IS SUPPLIED
            AND NOT ls_attribute_range_data IS INITIAL.
              &quot; Ajout valeur range
              INSERT ls_attribute_range_data INTO TABLE et_attribute_range_data.

            ENDIF.

          CATCH zcx_hardcode_maintain.
            &quot; Erreur lors de la crÃ©ation de l&apos;Attribut
            &quot;&quot;  --&gt; Tant pis ...

        ENDTRY.

      ENDAT.

    ENDLOOP.

  ELSEIF NOT iv_attribute_guid_regroup_copy IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Copie de l&apos;Attribut du ParamÃ¨tre
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des Attributs du Regroupement
    READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY attribute_guid_regroup = iv_attribute_guid_regroup_copy
                                              TRANSPORTING NO FIELDS
                                                       BINARY SEARCH.
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; Parcours l&apos;ensemble des Attributs du Regroupement
    LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING &lt;lfs_s_hardcode_attribute&gt;
                                                       FROM sy-tabix.

      IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup NE iv_attribute_guid_regroup_copy.
        &quot; On ne traite plus le mÃªme Regroupement d&apos;Attribut
        &quot;&quot;  --&gt; ArrÃªt du traitement
        EXIT.

      ENDIF.

      IF NOT &lt;lfs_s_hardcode_attribute&gt;-attribute_sign IS INITIAL.
        &quot; Range valorisÃ©
        &quot;&quot;  --&gt; Ajout des valeurs
        CLEAR : lsr_ranges_value.
        lsr_ranges_value-attribute_low  = &lt;lfs_s_hardcode_attribute&gt;-attribute_low.
        lsr_ranges_value-attribute_sign = &lt;lfs_s_hardcode_attribute&gt;-attribute_sign.
        lsr_ranges_value-attribute_high = &lt;lfs_s_hardcode_attribute&gt;-attribute_high.
        lsr_ranges_value-attribute_opti = &lt;lfs_s_hardcode_attribute&gt;-attribute_opti.
        APPEND lsr_ranges_value TO lr_ranges_value.

      ENDIF.

      AT END OF attribute_guid_regroup.
        &quot; Lors du traitement du dernier GUID de Regroupement
        &quot;&quot;  --&gt; Initialisation Clef Logique
        IF iv_attribute_name_new IS INITIAL.
          ls_attribute_logical_key-attribute_name = |{ &lt;lfs_s_hardcode_attribute&gt;-attribute_name }_COPY|. &quot;#EC NOTEXT

        ELSE.
          ls_attribute_logical_key-attribute_name = iv_attribute_name_new.

        ENDIF.

        &quot; Initialisation Clefs variantes
        ls_attribute_logical_key-attribute_key1 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key1.
        ls_attribute_logical_key-attribute_key2 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key2.
        ls_attribute_logical_key-attribute_key3 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key3.
        ls_attribute_logical_key-attribute_key4 = &lt;lfs_s_hardcode_attribute&gt;-attribute_key4.

        TRY.
            &quot;&quot;  --&gt; CrÃ©ation du nouvel Attribut
            me-&gt;attribute_add(
              EXPORTING
                iv_parameter_guid         = &lt;lfs_s_hardcode_attribute&gt;-parameter_guid
                is_attribute_logical_key  = ls_attribute_logical_key
                ir_ranges_value           = lr_ranges_value
              IMPORTING
                es_attribute_data         = es_attribute_data
                es_attribute_range_data   = ls_attribute_range_data
            ).

            IF  NOT ls_attribute_range_data IS INITIAL
            AND NOT et_attribute_range_data IS SUPPLIED.
              &quot; Ajout valeur range
              INSERT ls_attribute_range_data INTO TABLE et_attribute_range_data.

            ENDIF.

          CATCH zcx_hardcode_maintain INTO lo_cx_exception.
            &quot; Erreur lors de la crÃ©ation de l&apos;Attribut
            &quot;&quot;  --&gt; LÃ¨ve l&apos;Exception
            me-&gt;__raise_exception( io_exception = lo_cx_exception ).

        ENDTRY.

      ENDAT.

    ENDLOOP.

  ELSE.
    &quot; -----------------------------------------------------------
    &quot; Pas assez de paramÃ¨tre
    &quot; -----------------------------------------------------------

    me-&gt;__raise_exception( iv_msgno = 501 ).                &quot;#EC NOTEXT

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_DEL" VERSION="1" LANGU="F" DESCRIPT="Attribut - Suppression" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_DEL" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_DEL" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_DEL" SCONAME="IV_ATTRIBUTE_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_DEL" SCONAME="IV_EXCEPT_HIMSELF" VERSION="1" LANGU="F" DESCRIPT="Sauf elle-mÃªme ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PAROPTIONL="X"/>
   <source>METHOD attribute_del.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_DEL                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - Suppression                            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_attribute_key TYPE ty_attribute_key.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_s_hardcode_attribute&gt; TYPE ty_hardcode_attribute.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Suppression des donnÃ©es de l&apos;Attribut
  &quot; -----------------------------------------------------------

  IF NOT iv_parameter_guid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des Attributs du ParamÃ¨tre
    &quot; -----------------------------------------------------------

    &quot; Suppression par ParamÃ¨tre
    IF me-&gt;parameter_exist( iv_parameter_guid ) EQ abap_false.
      &quot; Le ParamÃ¨tre n&apos;exise pas
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des Attributs
    READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY second_key
                                                   COMPONENTS parameter_guid = iv_parameter_guid
                                                 TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      &quot; Parcours l&apos;ensemble des Attributs du ParamÃ¨tre
      LOOP AT me-&gt;ms_work_data-t_hardcode_attribute USING KEY second_key
                                                    ASSIGNING &lt;lfs_s_hardcode_attribute&gt;
                                                         FROM sy-tabix.

        IF &lt;lfs_s_hardcode_attribute&gt;-parameter_guid NE iv_parameter_guid.
          &quot; On ne traite plus le mÃªme ParamÃ¨tre
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        IF  iv_except_himself EQ abap_true
        AND &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
          &quot; Pas de suppression d&apos;elle-mÃªme demandÃ©e
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
          CONTINUE.

        ENDIF.

        IF &lt;lfs_s_hardcode_attribute&gt;-volatile EQ abap_false.
          &quot; Ajout du GUID de l&apos;Attribut pour suppression en DB
          ls_attribute_key-attribute_guid         = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
          ls_attribute_key-attribute_guid_regroup = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.
          APPEND ls_attribute_key TO me-&gt;ms_deleted_data-t_attribute_guid.

        ENDIF.

        IF iv_except_himself EQ abap_false.
          &quot; Suppression de l&apos;Attribut lui-mÃªme
          &quot;&quot;  --&gt; Ajout dans table pour suppression Code Source
          APPEND iv_attribute_guid_regroup TO me-&gt;ms_deleted_data-t_code_source_guid.

          &quot;&quot;  --&gt; Suppression du Code Source de l&apos;Attribut
          DELETE me-&gt;ms_work_data-t_hc_attribute_code_source WHERE attribute_guid_regroup EQ iv_attribute_guid_regroup.

        ENDIF.

        &quot; Suppression du ParamÃ¨tre
        DELETE me-&gt;ms_work_data-t_hardcode_attribute USING KEY loop_key.

      ENDLOOP.

    ENDIF.

  ELSEIF NOT iv_attribute_guid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression de l&apos;Attribut
    &quot; -----------------------------------------------------------

    &quot; Suppression d&apos;une entrÃ©e unique de l&apos;Attribut
    IF me-&gt;attribute_exist(
          iv_attribute_guid_regroup = iv_attribute_guid_regroup
          iv_attribute_guid         = iv_attribute_guid
       ) EQ abap_false.
      &quot; L&apos;Attribut n&apos;existe pas
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    IF me-&gt;ms_work_data-t_hardcode_attribute[
         attribute_guid_regroup = iv_attribute_guid_regroup
         attribute_guid         = iv_attribute_guid
       ]-volatile EQ abap_false.
      &quot; Ajout du GUID de l&apos;Attribut pour suppression
      ls_attribute_key-attribute_guid         = iv_attribute_guid.
      ls_attribute_key-attribute_guid_regroup = iv_attribute_guid_regroup.
      APPEND ls_attribute_key TO me-&gt;ms_deleted_data-t_attribute_guid.

    ENDIF.

    &quot; Suppression de l&apos;Attribut
    DELETE me-&gt;ms_work_data-t_hardcode_attribute WHERE attribute_guid_regroup EQ iv_attribute_guid_regroup
                                                   AND attribute_guid         EQ iv_attribute_guid.

  ELSEIF NOT iv_attribute_guid_regroup IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des l&apos;Attributs
    &quot; -----------------------------------------------------------

    &quot; Suppression de toutes les entrÃ©es de l&apos;Attribut
    IF me-&gt;attribute_exist( iv_attribute_guid_regroup ) EQ abap_false.
      &quot; L&apos;Attribut n&apos;existe pas
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence
    READ TABLE me-&gt;ms_work_data-t_hardcode_attribute
      WITH KEY attribute_guid_regroup = iv_attribute_guid_regroup
      TRANSPORTING NO FIELDS BINARY SEARCH.
    IF sy-subrc EQ 0.
      &quot; Parcours l&apos;ensemble des donnÃ©es de cette Attribut
      LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING &lt;lfs_s_hardcode_attribute&gt;
                                                         FROM sy-tabix.

        IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup NE iv_attribute_guid_regroup.
          &quot; On ne traite plus le mÃªme Attribut
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        IF  iv_except_himself EQ abap_true
        AND &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
          &quot; Pas de suppression d&apos;elle-mÃªme demandÃ©e
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
          CONTINUE.

        ENDIF.

        IF &lt;lfs_s_hardcode_attribute&gt;-volatile EQ abap_false.
          &quot; Ajout de l&apos;entrÃ©e dans la table de Suppression
          ls_attribute_key-attribute_guid         = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
          ls_attribute_key-attribute_guid_regroup = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.
          APPEND ls_attribute_key TO me-&gt;ms_deleted_data-t_attribute_guid.

        ENDIF.

      ENDLOOP.

      IF iv_except_himself EQ abap_true.
        &quot; Suppression des Attributs sauf lui-mÃªme
        DELETE me-&gt;ms_work_data-t_hardcode_attribute
         WHERE attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup
           AND attribute_guid         NE &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.

      ELSE.
        &quot; Suppression des Attributs
        &quot;&quot;  --&gt; Ajout dans table pour suppression Code Source
        APPEND iv_attribute_guid_regroup TO me-&gt;ms_deleted_data-t_code_source_guid.

        &quot;&quot;  --&gt; Suppression du Code Source de l&apos;Attribut
        DELETE me-&gt;ms_work_data-t_hc_attribute_code_source WHERE attribute_guid_regroup EQ iv_attribute_guid_regroup.

        &quot;&quot;  --&gt; Suppression de tous les Attributs
        DELETE me-&gt;ms_work_data-t_hardcode_attribute
         WHERE attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.

      ENDIF.

    ENDIF.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" VERSION="1" LANGU="F" DESCRIPT="Attribut - ContrÃ´le existence" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="IV_ATTRIBUTE_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR-ATTRIBUTE_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="IS_ATTRIBUTE_LOGICAL_KEY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_ATTRIBUTE_LOGICAL_KEY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="RV_EXIST" VERSION="1" LANGU="F" DESCRIPT="L&apos;Attribut existe ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_EXIST" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_exist.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_EXIST                                   *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - ContrÃ´le existence                     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Recherche prÃ©sence de l&apos;Attribut
  &quot; -----------------------------------------------------------

  IF NOT iv_attribute_guid_regroup IS INITIAL.
    &quot; Recherche existence Attribut par son GUID
    IF NOT iv_attribute_guid IS INITIAL.
      &quot; Ligne particuliÃ¨re
      READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH TABLE KEY attribute_guid_regroup = iv_attribute_guid_regroup
                                                                      attribute_guid         = iv_attribute_guid
                                                         TRANSPORTING NO FIELDS.
    ELSE.
      &quot; Attribut
      READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY attribute_guid_regroup = iv_attribute_guid_regroup
                                                   TRANSPORTING NO FIELDS BINARY SEARCH.

    ENDIF.

  ELSE.
    &quot; Recherche Attribut par l&apos;ID
    &quot;&quot;  --&gt; Recherche existence du ParamÃ¨tre
    IF me-&gt;parameter_exist( iv_parameter_guid ) NE abap_true.
      &quot; Le ParamÃ¨tre n&apos;existe pas
      &quot;&quot;  --&gt; LÃ¨ve une exception
      me-&gt;__raise_exception(
          iv_msgno = 201
          iv_msgv1 = iv_parameter_guid
      ).

    ENDIF.

    &quot;&quot;  --&gt; Recherche existence Attribut par son Nom
    READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH TABLE KEY second_key
                                                         COMPONENTS parameter_guid = iv_parameter_guid
                                                                    attribute_name = is_attribute_logical_key-attribute_name
                                                                    attribute_key1 = is_attribute_logical_key-attribute_key1
                                                                    attribute_key2 = is_attribute_logical_key-attribute_key2
                                                                    attribute_key3 = is_attribute_logical_key-attribute_key3
                                                                    attribute_key4 = is_attribute_logical_key-attribute_key4
                                                       TRANSPORTING NO FIELDS.

  ENDIF.

  &quot; Retourne le boolÃ©en
  rv_exist = boolc( sy-subrc EQ 0 ). &quot;Vrai si la Version existe

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" VERSION="1" LANGU="F" DESCRIPT="Attribut - RÃ©cupÃ©ration donnÃ©es" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR-ATTRIBUTE_GUID_REGROUP"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" SCONAME="IV_ATTRIBUTE_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR-ATTRIBUTE_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" SCONAME="ES_HARDCODE_ATTRIBUTE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_HARDCODE_ATTRIBUTE"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" SCONAME="RO_HARDCODE_ATTRIBUTE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="TY_HARDCODE_ATTRIBUTE"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_GET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_GET                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - RÃ©cupÃ©ration donnÃ©es                   *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_attribute_guid TYPE ty_hardcode_attribute-attribute_guid.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_hardcode_attribute.

  &quot; -----------------------------------------------------------
  &quot; Initialisation variable locale
  &quot; -----------------------------------------------------------

  IF NOT iv_attribute_guid IS INITIAL.
    &quot; Recherche ligne particuliÃ¨re
    lv_attribute_guid = iv_attribute_guid.

  ELSE.
    &quot; RÃ©cupÃ©ration ligne de rÃ©fÃ©rence
    lv_attribute_guid = iv_attribute_guid_regroup.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration de l&apos;entrÃ©e correspond Ã  l&apos;Attribut
  &quot; -----------------------------------------------------------

  &quot; Retourne les donnÃ©es de l&apos;Attribut
  READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH TABLE KEY attribute_guid_regroup = iv_attribute_guid_regroup
                                                                  attribute_guid         = lv_attribute_guid
                                                  REFERENCE INTO ro_hardcode_attribute.
  IF sy-subrc NE 0.
    &quot; La version n&apos;existe pas
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 301
        iv_msgv1 = iv_attribute_guid_regroup
    ).

  ENDIF.

  IF es_hardcode_attribute IS SUPPLIED.
    &quot; Retourne les donnÃ©es (statiques)
    es_hardcode_attribute = ro_hardcode_attribute-&gt;*.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" VERSION="1" LANGU="F" DESCRIPT="Attribut - Modification" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR-ATTRIBUTE_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IS_NEW_ATTRIBUTE_LOGICAL_KEY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_ATTRIBUTE_LOGICAL_KEY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IS_NEW_ATTRIBUTE_LOGICAL_KEYX" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_ATTRIBUTE_LOGICAL_KEYX" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IR_NEW_RANGES_VALUE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STANDARD TABLE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_REPLACE_RANGES_VALUE" VERSION="1" LANGU="F" DESCRIPT="Remplacement les valeurs du Range ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_NEW_ATTRIBUTE_AS_RANGE" VERSION="1" LANGU="F" DESCRIPT="TÃ©moin gÃ©nÃ©ral" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IT_NEW_CODE_SOURCE_VALUE" VERSION="1" LANGU="F" DESCRIPT="Code Source" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_NEW_ATTRIBUTE_AS_CODE_SOURC" VERSION="1" LANGU="F" DESCRIPT="Code Source prÃ©sent ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="IV_REPLACE_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Remplacement Code Source ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="ATTRIBUTE_SET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD attribute_set.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ATTRIBUTE_SET                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Attribut - Modification donneÃ©s                   *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hc_code_source            TYPE zcl_hardcode_maintain=&gt;ts_attribute_code_source,
    ls_attribute_key             TYPE zcl_hardcode_maintain=&gt;ty_attribute_key,
    ls_hardcode_attribute        TYPE zcl_hardcode_maintain=&gt;ty_hardcode_attribute,
    lo_hardcode_attribute        TYPE REF TO zcl_hardcode_maintain=&gt;ty_hardcode_attribute,
    ls_new_attribute_logical_key TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_delta TYPE flag,
    lv_subrc TYPE sy-subrc.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_low&gt;                  TYPE any,
    &lt;lfs_high&gt;                 TYPE any,
    &lt;lfs_sign&gt;                 TYPE ddsign,
    &lt;lfs_option&gt;               TYPE ddoption,
    &lt;lfs_valuex&gt;               TYPE flag,
    &lt;lfs_value_source&gt;         TYPE any,
    &lt;lfs_value_target&gt;         TYPE any,
    &lt;lfs_s_hardcode_attribute&gt; TYPE ty_hardcode_attribute.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des donnÃ©es
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration des donnÃ©es de l&apos;Attribut
  lo_hardcode_attribute = me-&gt;attribute_get( iv_attribute_guid_regroup ).

  &quot; Initialisation donnÃ©es Clefs logique
  MOVE-CORRESPONDING lo_hardcode_attribute-&gt;* TO ls_new_attribute_logical_key.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  &quot; ContrÃ´le nÃ©cessitÃ© de MÃ J
  IF is_new_attribute_logical_keyx IS INITIAL
  AND ( ir_new_ranges_value[] IS INITIAL AND iv_replace_ranges_value EQ abap_false ).
    &quot; Aucune donnÃ©es Ã  modifier
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Traitement des modifications Ã  apporter
  &quot; -----------------------------------------------------------

  IF NOT is_new_attribute_logical_keyx IS INITIAL.
    &quot; ContrÃ´le les donnÃ©es Ã  mettre Ã  jour
    &quot;&quot;  --&gt; ContrÃ´le si prÃ©sence delta entre les donnÃ©es
    WHILE lv_subrc IS INITIAL.

      UNASSIGN : &lt;lfs_value_target&gt;, &lt;lfs_value_source&gt;, &lt;lfs_valuex&gt;.

      &quot; RÃ©cupÃ©ration valeur champ indicateur de modification
      ASSIGN COMPONENT sy-index OF STRUCTURE is_new_attribute_logical_keyx
                                          TO &lt;lfs_valuex&gt;.
      IF sy-subrc NE 0.
        &quot; Pointeur nulle
        &quot;&quot;  --&gt; ArrÃªt de la boucle
        lv_subrc = 4.
        EXIT.

      ELSEIF &lt;lfs_valuex&gt; NE abap_true.
        &quot; Pas de modification
        &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
        CONTINUE.

      ENDIF.

      &quot; RÃ©cupÃ©ration pointeur sur le champ Source
      ASSIGN COMPONENT sy-index OF STRUCTURE is_new_attribute_logical_key
                                          TO &lt;lfs_value_source&gt;.
      IF sy-subrc NE 0.
        &quot; Pointeur nulle
        &quot;&quot;  --&gt; ArrÃªt de la boucle
        lv_subrc = 4.
        EXIT.

      ENDIF.

      &quot; RÃ©cupÃ©ration pointeur sur le champ Cible
      ASSIGN COMPONENT sy-index OF STRUCTURE ls_new_attribute_logical_key
                                          TO &lt;lfs_value_target&gt;.

      &quot; Comparaison des valeurs
      IF &lt;lfs_value_target&gt; EQ &lt;lfs_value_source&gt;.
        &quot; Aucune modification
        &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
        CONTINUE.

      ELSE.
        &quot; Modification
        &quot;&quot;  --&gt; Initialisation Indicateur modification des donnÃ©es
        lv_delta = abap_true.

        &quot;&quot;  --&gt; Initialisation de la nouvelle valeur
        &lt;lfs_value_target&gt; = &lt;lfs_value_source&gt;.

      ENDIF.

    ENDWHILE.

    IF  is_new_attribute_logical_keyx-attribute_name EQ abap_true
    AND lo_hardcode_attribute-&gt;attribute_name NE ls_new_attribute_logical_key-attribute_name.
      &quot; ModificatÃ®on du Nom
      &quot;&quot;  --&gt; ContrÃ´le si pas de doublon
      IF me-&gt;attribute_exist(
            iv_parameter_guid        = iv_parameter_guid
            is_attribute_logical_key = ls_new_attribute_logical_key
        ) EQ abap_true.
        &quot; Un ParamÃ¨tre avec ce nom existe dÃ©jÃ 
        &quot;&quot;  --&gt; LÃ¨ve une Exception
        me-&gt;__raise_exception(
            iv_msgno = 302
            iv_msgv1 = ls_new_attribute_logical_key-attribute_name
        ).

      ENDIF.

    ENDIF.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le nÃ©cessitÃ© de poursuivre le traitement
  &quot; -----------------------------------------------------------

  IF  ir_new_ranges_value[]      IS INITIAL
  AND it_new_code_source_value[] IS INITIAL
  AND lv_delta                   EQ abap_false
  AND iv_replace_code_source     EQ abap_false
  AND iv_replace_ranges_value    EQ abap_false.
    &quot; Aucune modification Ã  apporter
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification des donnÃ©es
  &quot; -----------------------------------------------------------

  &quot; Modification des donnÃ©es gÃ©nÃ©rales
  lo_hardcode_attribute-&gt;updated        = abap_true.
  IF NOT is_new_attribute_logical_keyx IS INITIAL.
    lo_hardcode_attribute-&gt;attribute_name = ls_new_attribute_logical_key-attribute_name.
    lo_hardcode_attribute-&gt;attribute_key1 = ls_new_attribute_logical_key-attribute_key1.
    lo_hardcode_attribute-&gt;attribute_key2 = ls_new_attribute_logical_key-attribute_key2.
    lo_hardcode_attribute-&gt;attribute_key3 = ls_new_attribute_logical_key-attribute_key3.
    lo_hardcode_attribute-&gt;attribute_key4 = ls_new_attribute_logical_key-attribute_key4.

  ENDIF.

  IF iv_new_attribute_as_range IS SUPPLIED.
    &quot; Modification indicateur Range
    lo_hardcode_attribute-&gt;attribute_as_range = iv_new_attribute_as_range.

  ENDIF.

  IF iv_new_attribute_as_code_sourc IS SUPPLIED.
    &quot; Modification indicateur Code Source
    lo_hardcode_attribute-&gt;attribute_as_code_source = iv_new_attribute_as_code_sourc.

  ENDIF.

  &quot; Initialisation traÃ§abilitÃ©
  lo_hardcode_attribute-&gt;changed_by = sy-uname.
  GET TIME STAMP FIELD lo_hardcode_attribute-&gt;changed_at.

  &quot; -----------------------------------------------------------
  &quot; Modification du Code Source
  &quot; -----------------------------------------------------------

  IF  it_new_code_source_value[] IS INITIAL
  AND iv_replace_code_source EQ abap_true.
    &quot; Code Source Ã  supprimer
    &quot;&quot;  --&gt; Ajout de l&apos;entrÃ©e
    INSERT iv_attribute_guid_regroup INTO TABLE me-&gt;ms_deleted_data-t_code_source_guid.

    &quot;&quot;  --&gt; Suppression table de travail
    DELETE me-&gt;ms_work_data-t_hc_attribute_code_source WHERE attribute_guid_regroup EQ iv_attribute_guid_regroup.

    &quot;&quot;  --&gt; RÃ©initialisation Indicateur Code Source
    CLEAR : lo_hardcode_attribute-&gt;attribute_as_code_source.

  ELSEIF NOT it_new_code_source_value[] IS INITIAL.
    &quot; Code Source Ã  modifier
    &quot;&quot;  --&gt; Modification Code Source table de travail
    READ TABLE me-&gt;ms_work_data-t_hc_attribute_code_source
    WITH TABLE KEY attribute_guid_regroup = iv_attribute_guid_regroup
         ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_code_source&gt;).
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; CrÃ©ation nouvelle entrÃ©e
      ls_hc_code_source-volatile               = abap_true.
      ls_hc_code_source-attribute_guid_regroup = iv_attribute_guid_regroup.
      INSERT ls_hc_code_source INTO TABLE me-&gt;ms_work_data-t_hc_attribute_code_source ASSIGNING &lt;lfs_s_hc_code_source&gt;.

    ELSE.
      &quot; Existe
      &quot;&quot;  --&gt; Initialisation tÃ©moin de Modification
      &lt;lfs_s_hc_code_source&gt;-updated = abap_true.

    ENDIF.

    &quot;&quot;  --&gt; Modification du Code Source
    &lt;lfs_s_hc_code_source&gt;-t_code_source[] = it_new_code_source_value[].

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification des valeurs de Range
  &quot; -----------------------------------------------------------

  IF ir_new_ranges_value[] IS INITIAL.
    &quot; Valeur Ã  Supprimer
    IF iv_replace_ranges_value EQ abap_true.
      &quot; Remplace les valeurs existantes
      &quot;&quot;  --&gt; Suppression des Valeurs sauf elle-mÃªme
      me-&gt;attribute_del(
        iv_except_himself         = abap_true
        iv_attribute_guid_regroup = iv_attribute_guid_regroup
      ).

      &quot;&quot;  --&gt; RÃ©initialisation Valeur de Range de la ligne de rÃ©fÃ©rence
      CLEAR : lo_hardcode_attribute-&gt;attribute_sign,     lo_hardcode_attribute-&gt;attribute_low,
              lo_hardcode_attribute-&gt;attribute_opti,     lo_hardcode_attribute-&gt;attribute_high,
              lo_hardcode_attribute-&gt;attribute_as_range.

    ELSE.
      &quot; Pas de Remplacement et table vide
      &quot;&quot;  --&gt; Rien Ã  faire

    ENDIF.

  ELSE.
    &quot; Valeur Ã  Ajouter / Modifier
    IF iv_replace_ranges_value EQ abap_true.
      &quot; Remplace les valeurs existantes
      &quot;&quot;  --&gt; Suppression des Valeurs existantes sauf elle-mÃªme
      me-&gt;attribute_del(
        iv_except_himself         = abap_true
        iv_attribute_guid_regroup = iv_attribute_guid_regroup
      ).

      &quot;&quot;  --&gt; RÃ©initialisation Valeur de Range de la ligne de rÃ©fÃ©rence
      CLEAR : lo_hardcode_attribute-&gt;attribute_sign, lo_hardcode_attribute-&gt;attribute_low,
              lo_hardcode_attribute-&gt;attribute_opti, lo_hardcode_attribute-&gt;attribute_high.

      &quot;&quot;  --&gt; Initialisation Indicateur donnÃ©es Range
      lo_hardcode_attribute-&gt;attribute_as_range = abap_true.

    ELSEIF lv_delta                EQ abap_true
       AND iv_replace_ranges_value EQ abap_false.
      &quot; Pas de remplacement des anciennes mais Modification clefs logiques
      &quot;&quot;  --&gt; Modification des existantes
      READ TABLE me-&gt;ms_work_data-t_hardcode_attribute
        WITH KEY attribute_guid_regroup = iv_attribute_guid_regroup
        TRANSPORTING NO FIELDS BINARY SEARCH.
      IF sy-subrc EQ 0.
        &quot; Parcours l&apos;ensemble des donnÃ©es de cette Attribut
        LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING &lt;lfs_s_hardcode_attribute&gt;
                                                           FROM sy-tabix.

          IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup NE iv_attribute_guid_regroup.
            &quot; On ne traite plus le mÃªme Attribut
            &quot;&quot;  --&gt; ArrÃªt de la boucle
            EXIT.

          ENDIF.

          IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid EQ lo_hardcode_attribute-&gt;attribute_guid.
            &quot; Ligne de rÃ©fÃ©rence dÃ©jÃ  modifiÃ©e
            &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
            CONTINUE.

          ENDIF.

          &quot; Modification indicateur de donnÃ©es non sauvegardÃ©es
          &lt;lfs_s_hardcode_attribute&gt;-updated        = abap_true.
          &lt;lfs_s_hardcode_attribute&gt;-changed_at     = lo_hardcode_attribute-&gt;changed_at.
          &lt;lfs_s_hardcode_attribute&gt;-changed_by     = lo_hardcode_attribute-&gt;changed_by.
          &lt;lfs_s_hardcode_attribute&gt;-attribute_name = lo_hardcode_attribute-&gt;attribute_name.
          &lt;lfs_s_hardcode_attribute&gt;-attribute_key1 = lo_hardcode_attribute-&gt;attribute_key1.
          &lt;lfs_s_hardcode_attribute&gt;-attribute_key2 = lo_hardcode_attribute-&gt;attribute_key2.
          &lt;lfs_s_hardcode_attribute&gt;-attribute_key3 = lo_hardcode_attribute-&gt;attribute_key3.
          &lt;lfs_s_hardcode_attribute&gt;-attribute_key4 = lo_hardcode_attribute-&gt;attribute_key4.

        ENDLOOP.

      ENDIF.

    ENDIF.

    &quot; Ajout des nouvelles valeurs
    LOOP AT ir_new_ranges_value ASSIGNING FIELD-SYMBOL(&lt;lfs_s_ranges_value&gt;).

      CLEAR    : ls_hardcode_attribute.
      UNASSIGN : &lt;lfs_option&gt;, &lt;lfs_sign&gt;, &lt;lfs_high&gt;, &lt;lfs_low&gt;.

      &quot; Initialisation pointeur sur Signe
      ASSIGN COMPONENT &apos;SIGN&apos; OF STRUCTURE &lt;lfs_s_ranges_value&gt; &quot;#EC NOTEXT
                                        TO &lt;lfs_sign&gt;.
      IF sy-subrc NE 0.
        &quot; Non trouvÃ©
        &quot;&quot;  --&gt; RÃ©cupÃ©ration 1er composant
        ASSIGN COMPONENT 1 OF STRUCTURE &lt;lfs_s_ranges_value&gt;
                                     TO &lt;lfs_sign&gt;.

      ENDIF.

      &quot; Initialisation pointeur sur l&apos;opÃ©rateur
      ASSIGN COMPONENT &apos;OPTION&apos; OF STRUCTURE &lt;lfs_s_ranges_value&gt; &quot;#EC NOTEXT
                                          TO &lt;lfs_option&gt;.
      IF sy-subrc NE 0.
        &quot; Non trouvÃ©
        &quot;&quot;  --&gt; RÃ©cupÃ©ration Zeme composant
        ASSIGN COMPONENT 2 OF STRUCTURE &lt;lfs_s_ranges_value&gt;
                                     TO &lt;lfs_option&gt;.

      ENDIF.

      &quot; Initialisation pointeur sur la valeur basse
      ASSIGN COMPONENT 3 OF STRUCTURE &lt;lfs_s_ranges_value&gt;  &quot;#EC NOTEXT
                                   TO &lt;lfs_low&gt;.
      IF sy-subrc NE 0.
        &quot; Non trouvÃ©
        &quot;&quot;  --&gt; RÃ©cupÃ©ration 3eme composant
        ASSIGN COMPONENT 3 OF STRUCTURE &lt;lfs_s_ranges_value&gt;
                                     TO &lt;lfs_low&gt;.

      ENDIF.

      &quot; Initialisation pointeur sur la valeur Haute
      ASSIGN COMPONENT &apos;HIGH&apos; OF STRUCTURE &lt;lfs_s_ranges_value&gt; &quot;#EC NOTEXT
                                        TO &lt;lfs_high&gt;.
      IF sy-subrc NE 0.
        &quot; Non trouvÃ©
        &quot;&quot;  --&gt; RÃ©cupÃ©ration 4eme composant
        ASSIGN COMPONENT 4 OF STRUCTURE &lt;lfs_s_ranges_value&gt;
                                     TO &lt;lfs_high&gt;.

      ENDIF.

      &quot; Initialisation valeur Range
      ls_hardcode_attribute-attribute_low  = &lt;lfs_low&gt;.
      ls_hardcode_attribute-attribute_sign = &lt;lfs_sign&gt;.
      ls_hardcode_attribute-attribute_high = &lt;lfs_high&gt;.
      ls_hardcode_attribute-attribute_opti = &lt;lfs_option&gt;.

      &quot;&quot; Note : Aucun contrÃ´le sur les assignations des FS
      &quot;&quot; afin de provoquer un DUMP en cas de mauvaise utilisation par le dÃ©veloppeur !

      &quot; Initialisation des donnÃ©es
      ls_hardcode_attribute-mandt                  = lo_hardcode_attribute-&gt;mandt.
      ls_hardcode_attribute-volatile               = abap_true.
      ls_hardcode_attribute-changed_at             = lo_hardcode_attribute-&gt;changed_at.
      ls_hardcode_attribute-changed_by             = lo_hardcode_attribute-&gt;changed_by.
      ls_hardcode_attribute-attribute_name         = lo_hardcode_attribute-&gt;attribute_name.
      ls_hardcode_attribute-attribute_key1         = lo_hardcode_attribute-&gt;attribute_key1.
      ls_hardcode_attribute-attribute_key2         = lo_hardcode_attribute-&gt;attribute_key2.
      ls_hardcode_attribute-attribute_key3         = lo_hardcode_attribute-&gt;attribute_key3.
      ls_hardcode_attribute-attribute_key4         = lo_hardcode_attribute-&gt;attribute_key4.
      ls_hardcode_attribute-parameter_guid         = lo_hardcode_attribute-&gt;parameter_guid.
      ls_hardcode_attribute-attribute_as_range     = abap_true.
      ls_hardcode_attribute-attribute_guid_regroup = lo_hardcode_attribute-&gt;attribute_guid_regroup.

      &quot; Initialisation donnÃ©es traÃ§abilitÃ©
      ls_hardcode_attribute-created_by = sy-uname.
      GET TIME STAMP FIELD ls_hardcode_attribute-created_at.

      TRY.
          &quot; CrÃ©ation ID Unique
          ls_hardcode_attribute-attribute_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

        CATCH cx_uuid_error.
          &quot; Erreur lors de la crÃ©ation du GUID
          &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
          ls_hardcode_attribute-attribute_guid = cl_abap_random=&gt;seed( ).

      ENDTRY.

      &quot; Ajout de l&apos;entrÃ©e
      INSERT ls_hardcode_attribute INTO TABLE me-&gt;ms_work_data-t_hardcode_attribute.

    ENDLOOP.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="CONSTRUCTOR" SCONAME="IV_REPID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID"/>
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Constructeur Instance                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***
  &quot; -----------------------------------------------------------
  &quot; Initialisation Attribut
  &quot; -----------------------------------------------------------

  me-&gt;mv_repid = iv_repid.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des donnÃ©es
  &quot; -----------------------------------------------------------

  me-&gt;data_load( ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_GET" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es - RÃ©cupÃ©ration" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_GET" SCONAME="ET_VERSION" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_VERS" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_GET" SCONAME="ET_PARAMETER" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_PARAM" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_GET" SCONAME="ET_ATTRIBUTE" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_ATTR" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_GET" SCONAME="ET_JOIN" VERSION="1" LANGU="F" DESCRIPT="Type de table ZVTEC_T_HC" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZVTEC_T_HC_TT"/>
   <source>METHOD data_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : DATA_GET                                          *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : DonnÃ©es - RÃ©cupÃ©ration                            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_join TYPE zvtec_t_hc.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***


  IF et_join    IS SUPPLIED
  OR et_version IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation des Versions
    &quot; -----------------------------------------------------------
    et_version[] = CORRESPONDING #( me-&gt;ms_work_data-t_hardcode_version[] ).

  ENDIF.

  IF et_join      IS SUPPLIED
  OR et_parameter IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation des ParamÃ¨tres
    &quot; -----------------------------------------------------------
    et_parameter[] = CORRESPONDING #( me-&gt;ms_work_data-t_hardcode_parameter[] ).

  ENDIF.

  IF et_join      IS SUPPLIED
  OR et_attribute IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es
    et_attribute[] = CORRESPONDING #( me-&gt;ms_work_data-t_hardcode_attribute[] ).

  ENDIF.

  IF et_join IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation aggrÃ©gations
    &quot; -----------------------------------------------------------

    SORT et_parameter BY version_guid.
    SORT et_attribute BY parameter_guid.

    LOOP AT et_version ASSIGNING FIELD-SYMBOL(&lt;lfs_s_version&gt;).

      CLEAR : ls_join.

      &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des ParamÃ¨tres de la Version
      READ TABLE et_parameter WITH KEY version_guid = &lt;lfs_s_version&gt;-version_guid
                          TRANSPORTING NO FIELDS BINARY SEARCH.
      IF sy-subrc EQ 0.
        &quot; Au moins un ParamÃ¨tre trouvÃ©
        &quot;&quot;  --&gt; Parcours l&apos;ensemble des ParamÃ¨tres associÃ©s Ã  la Version
        LOOP AT et_parameter ASSIGNING FIELD-SYMBOL(&lt;lfs_s_parameter&gt;)
                                  FROM sy-tabix.

          CLEAR : ls_join.

          IF &lt;lfs_s_parameter&gt;-version_guid NE &lt;lfs_s_version&gt;-version_guid.
            &quot; On ne traite plus la mÃªme Version
            &quot;&quot;  --&gt; ArrÃªt de la boucle
            EXIT.

          ENDIF.

          &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des Attributs du ParamÃ¨tre
          READ TABLE et_attribute WITH KEY parameter_guid = &lt;lfs_s_parameter&gt;-parameter_guid
                              TRANSPORTING NO FIELDS BINARY SEARCH.
          IF sy-subrc EQ 0.
            &quot; Au moins un Attribut trouvÃ©
            &quot;&quot;  --&gt; Parcours l&apos;ensemble des Attribut associÃ©s au ParamÃ¨tre
            LOOP AT et_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute&gt;)
                                      FROM sy-tabix.

              CLEAR : ls_join.

              IF &lt;lfs_s_attribute&gt;-parameter_guid NE &lt;lfs_s_parameter&gt;-parameter_guid.
                &quot; On ne traite plus le mÃªme Attribut
                EXIT.

              ENDIF.

              &quot; Initialisation donnÃ©es Version
              MOVE-CORRESPONDING &lt;lfs_s_version&gt; TO ls_join.

              &quot; Initialisation des donnÃ©es de ParamÃ¨tres
              MOVE-CORRESPONDING &lt;lfs_s_parameter&gt; TO ls_join.

              &quot; Initialisation des donnÃ©es d&apos;Attribut
              MOVE-CORRESPONDING &lt;lfs_s_attribute&gt; TO ls_join.

              &quot; Ajout de l&apos;entrÃ©e
              APPEND ls_join TO et_join.

            ENDLOOP.

          ELSE.
            &quot; Aucun Attribut
            &quot;&quot;  --&gt; Initialisation donnÃ©es Version
            MOVE-CORRESPONDING &lt;lfs_s_version&gt; TO ls_join.

            &quot;&quot;  --&gt; Initialisation des donnÃ©es de ParamÃ¨tres
            MOVE-CORRESPONDING &lt;lfs_s_parameter&gt; TO ls_join.

            &quot;&quot; --&gt; Ajout de l&apos;entrÃ©e
            APPEND ls_join TO et_join.

          ENDIF.            &quot; Fin de test prÃ©sence d&apos;Attribut

        ENDLOOP.            &quot;Fin parcours des ParamÃ¨tres

      ELSE.
        &quot; Aucun ParamÃ¨tre
        &quot;&quot;  --&gt; Initialisation donnÃ©es Version
        MOVE-CORRESPONDING &lt;lfs_s_version&gt; TO ls_join.

        &quot;&quot; --&gt; Ajout de l&apos;entrÃ©e
        APPEND ls_join TO et_join.

      ENDIF.                &quot;Fin de test prÃ©sence de ParamÃ¨tres

    ENDLOOP.                &quot;Fin parcours des Versions

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="DATA_LOAD" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es - Lecture en DB" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD data_load.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : DATA_LOAD                                         *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : DonnÃ©es - Chargement depuis DB                    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Chargement des Versions
  &quot; -----------------------------------------------------------

  SELECT * FROM ztec_t_hc_vers
     INTO TABLE me-&gt;ms_work_data-t_hardcode_version
          WHERE repid EQ me-&gt;mv_repid.
  IF sy-subrc EQ 0.
    &quot; -----------------------------------------------------------
    &quot; Chargement des ParamÃ¨tres
    &quot; -----------------------------------------------------------

    SELECT * FROM ztec_t_hc_param
       INTO TABLE me-&gt;ms_work_data-t_hardcode_parameter
          FOR ALL ENTRIES IN me-&gt;ms_work_data-t_hardcode_version
            WHERE version_guid EQ me-&gt;ms_work_data-t_hardcode_version-version_guid.

  ENDIF.

  IF NOT me-&gt;ms_work_data-t_hardcode_parameter[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Chargement des Attributs
    &quot; -----------------------------------------------------------

    SELECT * FROM ztec_t_hc_attr
       INTO TABLE me-&gt;ms_work_data-t_hardcode_attribute
          FOR ALL ENTRIES IN me-&gt;ms_work_data-t_hardcode_parameter
                       WHERE parameter_guid EQ me-&gt;ms_work_data-t_hardcode_parameter-parameter_guid.

  ENDIF.

  IF NOT me-&gt;ms_work_data-t_hardcode_attribute[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Chargement des Textes des Attributs
    &quot; -----------------------------------------------------------

    LOOP AT me-&gt;ms_work_data-t_hardcode_attribute
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_attribute&gt;)
       GROUP BY &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.

      INSERT VALUE #(
        attribute_guid_regroup = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup
        t_code_source          = zcl_hardcode_cluster=&gt;code_source_get( &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup )
      ) INTO TABLE me-&gt;ms_work_data-t_hc_attribute_code_source.

    ENDLOOP.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="INTEGRITY_CHECK" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es - ContrÃ´le IntÃ©gritÃ©" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD integrity_check.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : INTEGRITY_CHECK                                   *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ContrÃ´le d&apos;IntÃ©gritÃ©                              *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Suppression des ParamÃ¨tres isolÃ©s
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration de tous les ParamÃ¨tres dont l&apos;Identifiant de Version n&apos;existe pas
  SELECT * FROM ztec_t_hc_param
          WHERE version_guid NOT IN ( SELECT version_guid FROM ztec_t_hc_vers )
     INTO TABLE @DATA(lt_ztec_t_hc_param).

  IF NOT lt_ztec_t_hc_param[] IS INITIAL.
    &quot; Suppression des ParamÃ¨tres
    DELETE ztec_t_hc_param FROM TABLE lt_ztec_t_hc_param.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Suppression des Attributs isolÃ©s
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration de tous les Attributs dont l&apos;Identifiant de ParamÃ¨tre n&apos;existe pas
  SELECT * FROM ztec_t_hc_attr
          WHERE parameter_guid NOT IN ( SELECT parameter_guid FROM ztec_t_hc_param )
     INTO TABLE @DATA(lt_ztec_t_hc_attr).

  IF NOT lt_ztec_t_hc_attr[] IS INITIAL.
    &quot; Suppression des Attributs
    DELETE ztec_t_hc_attr FROM TABLE lt_ztec_t_hc_attr.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="IS_CHANGED" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es - ModifiÃ©es ?" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="IS_CHANGED" SCONAME="RV_CHANGED" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es modifiÃ©es" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <source>METHOD is_changed.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : IS_CHANGED                                        *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ContrÃ´le Modification sur HC                      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Recherche Ã©lÃ¨ments supprimÃ©es
  &quot; -----------------------------------------------------------

  IF NOT me-&gt;ms_deleted_data IS INITIAL.
    &quot; DonnÃ©es persistentes supprimÃ©es
    &quot;&quot;  --&gt; Retourne indicateur donnÃ©es modifiÃ©es
    rv_changed = abap_true.
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Recherche attributs modifiÃ©es
  &quot; -----------------------------------------------------------

  TRY.
      &quot; PrÃ©sence donnÃ©es Attributs modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_attribute[ volatile = abap_true ]-volatile.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

  TRY.
      &quot; PrÃ©sence donnÃ©es Attributs modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_attribute[ updated = abap_true ]-updated.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

  &quot; -----------------------------------------------------------
  &quot; Recherche ParamÃ¨tres modifiÃ©es
  &quot; -----------------------------------------------------------

  TRY.
      &quot; PrÃ©sence donnÃ©es ParamÃ¨tres modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_parameter[ volatile = abap_true ]-volatile.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

  TRY.
      &quot; PrÃ©sence donnÃ©es ParamÃ¨tres modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_parameter[ updated = abap_true ]-updated.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

  &quot; -----------------------------------------------------------
  &quot; Recherche Version modifiÃ©es
  &quot; -----------------------------------------------------------

  TRY.
      &quot; PrÃ©sence donnÃ©es Version modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_version[ volatile = abap_true ]-volatile.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

  TRY.
      &quot; PrÃ©sence donnÃ©es Version modifiÃ©e ?
      rv_changed = me-&gt;ms_work_data-t_hardcode_version[ updated = abap_true ]-updated.
      RETURN.

    CATCH cx_sy_itab_line_not_found.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - CrÃ©ation" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" SCONAME="IV_PARAMETER_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_NAME"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" SCONAME="ES_PARAMETER_DATA" VERSION="1" LANGU="F" DESCRIPT="HC - Poste table de Customizing" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" SCONAME="RV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_ADD" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parameter_add.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_ADD                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - CrÃ©ation                              *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_parameter TYPE ty_hardcode_parameter.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_parameter_data.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF me-&gt;parameter_exist(
      iv_version_guid   = iv_version_guid
      iv_parameter_name = iv_parameter_name
  ) EQ abap_true.
    &quot; L&apos;entrÃ©e existe dÃ©jÃ 
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 202
        iv_msgv1 = iv_parameter_name
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Ajout du nouveau ParamÃ¨tre
  &quot; -----------------------------------------------------------

  &quot; Initialisation des donnÃ©es
  ls_hardcode_parameter-mandt          = sy-mandt.
  ls_hardcode_parameter-volatile       = abap_true.
  ls_hardcode_parameter-version_guid   = iv_version_guid.
  ls_hardcode_parameter-parameter_name = iv_parameter_name.

  &quot; Initialisation donnÃ©s tracabilitÃ©
  ls_hardcode_parameter-created_by      = sy-uname.
  GET TIME STAMP FIELD ls_hardcode_parameter-created_at.

  TRY.
      &quot; CrÃ©ation ID Unique
      ls_hardcode_parameter-parameter_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

    CATCH cx_uuid_error.
      &quot; Erreur lors de la crÃ©ation du GUID
      &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
      ls_hardcode_parameter-version_guid = cl_abap_random=&gt;seed( ).

  ENDTRY.

  &quot; Ajout dans la table interne
  rv_parameter_guid = ls_hardcode_parameter-parameter_guid.
  INSERT ls_hardcode_parameter INTO TABLE me-&gt;ms_work_data-t_hardcode_parameter.

  IF es_parameter_data IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation donnÃ©es
    &quot; -----------------------------------------------------------

    &quot; Retourne les donnÃ©es
    MOVE-CORRESPONDING ls_hardcode_parameter TO es_parameter_data.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - Copie" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="IV_VERSION_GUID_COPY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="IV_VERSION_GUID_NEW" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="IV_PARAMETER_GUID_COPY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="IV_PARAMETER_NAME_NEW" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_NAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="IV_COPY_CHILDREN" VERSION="1" LANGU="F" DESCRIPT="Copie des Enfants ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="ES_PARAMETER_DATA" VERSION="1" LANGU="F" DESCRIPT="HC - Table des ParamÃ¨tres" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="ET_PARAMETER_DATA" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_PARAM" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="ET_ATTRIBUTE_DATA" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_ATTR" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="ET_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_HARDCODE_MAINTAIN=&gt;TY_T_ATTRIBUTE_RANGE_DATA"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="RV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_COPY" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parameter_copy.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_COPY                                    *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - Copie                                 *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_attribute_data       TYPE ztec_t_hc_attr_tt,
    lt_attribute_range_data TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_data.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_parameter_data     TYPE ztec_t_hc_param,
    ls_hardcode_parameter TYPE ty_hardcode_parameter.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_parameter_name_new TYPE ztec_t_hc_param-parameter_name.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR   : es_parameter_data.
  REFRESH : et_parameter_data.

  IF NOT iv_parameter_guid_copy IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Copie d&apos;un ParamÃ¨tre
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration EntrÃ©e correspondante
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH TABLE KEY parameter_guid = iv_parameter_guid_copy
                                                          ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_parameter&gt;).
    IF sy-subrc NE 0.
      &quot; Aucune correspondance
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 201
          iv_msgv1 = iv_parameter_guid_copy
      ).

    ENDIF.

    &quot; Copie du ParamÃ¨tre
    IF NOT iv_parameter_name_new IS INITIAL.
      &quot; Utilisation Nom transmis
      lv_parameter_name_new = iv_parameter_name_new.

    ELSE.
      TRY.
          &quot; Copie du Nom
          lv_parameter_name_new = |{ &lt;lfs_s_hardcode_parameter&gt;-parameter_name }_COPY|. &quot;#EC NOTEXT

        CATCH cx_sy_itab_line_not_found.
          &quot; EntrÃ©e non trouvÃ©e
          &quot;&quot;  --&gt; Initialisation Nom alÃ©toire
          lv_parameter_name_new = |{ cl_abap_random=&gt;seed( ) }_COPY|. &quot;#EC NOTEXT

      ENDTRY.

    ENDIF.

    &quot;&quot;  --&gt; ContrÃ´le la non existence du Nouveau ParamÃ¨tre
    IF me-&gt;parameter_exist(
        iv_version_guid   = &lt;lfs_s_hardcode_parameter&gt;-version_guid
        iv_parameter_name = lv_parameter_name_new
    ) EQ abap_true.
      &quot; L&apos;entrÃ©e existe dÃ©jÃ 
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 202
          iv_msgv1 = lv_parameter_name_new
      ).

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; CrÃ©ation du ParamÃ¨tre
        &quot; -----------------------------------------------------------

        &quot; CrÃ©ation d&apos;un nouveau ParamÃ¨tre
        rv_parameter_guid = me-&gt;parameter_add(
          EXPORTING
            iv_version_guid   = &lt;lfs_s_hardcode_parameter&gt;-version_guid
            iv_parameter_name = lv_parameter_name_new
          IMPORTING
            es_parameter_data = es_parameter_data
        ).

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Erreur lors de la crÃ©ation du ParamÃ¨tre
        &quot;&quot;  --&gt; LÃ¨ve l&apos;exception
        me-&gt;__raise_exception( io_exception = lo_cx_hardcode_maintain ).

    ENDTRY.

    IF iv_copy_children EQ abap_true.
      &quot; -----------------------------------------------------------
      &quot; Copie des Enfants
      &quot; -----------------------------------------------------------

      TRY.
          IF et_attribute_data       IS SUPPLIED
          OR et_attribute_range_data IS SUPPLIED.
            &quot; Copie des Attributs
            me-&gt;attribute_copy(
              EXPORTING
                iv_parameter_guid_copy  = iv_parameter_guid_copy
                iv_parameter_guid_new   = es_parameter_data-parameter_guid
              IMPORTING
                et_attribute_data       = et_attribute_data
                et_attribute_range_data = et_attribute_range_data
            ).

          ELSE.
            &quot; Copie des Attributs
            me-&gt;attribute_copy(
                iv_parameter_guid_copy = iv_parameter_guid_copy
                iv_parameter_guid_new  = es_parameter_data-parameter_guid
            ).

          ENDIF.

        CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
          &quot; Erreur lors de la copie des Attributs
          &quot;&quot;  --&gt; Tant pis ...

      ENDTRY.

    ENDIF.

  ELSEIF NOT iv_version_guid_copy IS INITIAL
     AND NOT iv_version_guid_new  IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Copie de l&apos;ensemble des ParamÃ¨tres de la Version
    &quot; -----------------------------------------------------------

    &quot; Copie des ParamÃ¨tres de la Version
    &quot;&quot;  --&gt; ContrÃ´le l&apos;existence de la Version Ã  copier
    IF me-&gt;version_exist( iv_version_guid_copy ) NE abap_true.
      &quot; La Version n&apos;existe pas
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 102
          iv_msgv1 = iv_version_guid_copy
          iv_msgv2 = me-&gt;mv_repid
      ).

    ENDIF.

    &quot;&quot;  --&gt; ContrÃ´le l&apos;existence de la Version cible
    IF me-&gt;version_exist( iv_version_guid_new ) NE abap_true.
      &quot; La Version n&apos;existe pas
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 102
          iv_msgv1 = iv_version_guid_new
          iv_msgv2 = me-&gt;mv_repid
      ).

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Copies des ParamÃ¨tres
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des ParamÃ¨tres de la Version
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH KEY second_key
                                                   COMPONENTS version_guid = iv_version_guid_copy
                                                 TRANSPORTING NO FIELDS.
    IF sy-subrc NE 0.
      &quot; Aucune occurence
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; Parcours l&apos;ensemble des ParamÃ¨tres de la Version
    LOOP AT me-&gt;ms_work_data-t_hardcode_parameter ASSIGNING &lt;lfs_s_hardcode_parameter&gt;
                                                  USING KEY second_key
                                                       FROM sy-tabix.

      CLEAR : ls_parameter_data.

      IF &lt;lfs_s_hardcode_parameter&gt;-version_guid NE iv_version_guid_copy.
        &quot; On ne traite plus la mÃªme Version
        &quot;&quot;  --&gt; ArrÃªt du traitement
        EXIT.

      ENDIF.

      TRY.
          &quot; -----------------------------------------------------------
          &quot; CrÃ©ation du ParamÃ¨tre
          &quot; -----------------------------------------------------------

          &quot; CrÃ©ation d&apos;un nouveau ParamÃ¨tre
          rv_parameter_guid = me-&gt;parameter_add(
            EXPORTING
              iv_version_guid   = iv_version_guid_new
              iv_parameter_name = &lt;lfs_s_hardcode_parameter&gt;-parameter_name
            IMPORTING
              es_parameter_data = ls_parameter_data
          ).
          IF et_parameter_data IS SUPPLIED.
            &quot; Alimentation table des ParamÃ¨tres
            APPEND ls_parameter_data TO et_parameter_data.

          ENDIF.

          IF iv_copy_children EQ abap_true.
            &quot; -----------------------------------------------------------
            &quot; Copie des Enfants
            &quot; -----------------------------------------------------------

            TRY.
                IF et_attribute_data       IS SUPPLIED
                OR et_attribute_range_data IS SUPPLIED.
                  &quot; Copie des Attributs + RÃ©cupÃ©ration table des Attributs
                  me-&gt;attribute_copy(
                    EXPORTING
                      iv_parameter_guid_copy  = &lt;lfs_s_hardcode_parameter&gt;-parameter_guid
                      iv_parameter_guid_new   = rv_parameter_guid
                    IMPORTING
                      et_attribute_data       = lt_attribute_data
                      et_attribute_range_data = lt_attribute_range_data
                  ).

                  &quot; Alimentation table des Attributs
                  APPEND LINES OF lt_attribute_data TO et_attribute_data.
                  INSERT LINES OF lt_attribute_range_data INTO TABLE et_attribute_range_data.

                ELSE.
                  &quot; Copie des Attributs
                  me-&gt;attribute_copy(
                      iv_parameter_guid_copy = &lt;lfs_s_hardcode_parameter&gt;-parameter_guid
                      iv_parameter_guid_new  = rv_parameter_guid
                  ).

                ENDIF.

              CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
                &quot; Erreur lors de la crÃ©ation du ParamÃ¨tre
                &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante // Erreur non bloquante
                CONTINUE.

            ENDTRY.

          ENDIF.

        CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
          &quot; Erreur lors de la crÃ©ation du ParamÃ¨tre
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante // Erreur non bloquante
          CONTINUE.

      ENDTRY.

    ENDLOOP.

  ELSE.
    &quot; -----------------------------------------------------------
    &quot; Pas assez de paramÃ¨tre
    &quot; -----------------------------------------------------------

    me-&gt;__raise_exception( iv_msgno = 501 ).                           &quot;#EC NOTEXT

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_DEL" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - Suppression" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_DEL" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_DEL" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID" PAROPTIONL="X" PARPREFERD="X"/>
   <source>METHOD parameter_del.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_DEL                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - Suppression                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF NOT iv_version_guid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression par Version
    &quot; -----------------------------------------------------------

    IF me-&gt;version_exist( iv_version_guid ) EQ abap_false.
      &quot; La Version n&apos;exise pas
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des ParamÃ¨tres
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH KEY second_key
                                                   COMPONENTS version_guid = iv_version_guid
                                                 TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      &quot; Parcours l&apos;ensemble des ParamÃ¨tres de la Version
      LOOP AT me-&gt;ms_work_data-t_hardcode_parameter USING KEY second_key
                                                    ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_parameter&gt;)
                                                         FROM sy-tabix.

        IF &lt;lfs_s_hardcode_parameter&gt;-version_guid NE iv_version_guid.
          &quot; On ne traite plus la mÃªme Version
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        &quot; Suppression des Attributs
        me-&gt;attribute_del( iv_parameter_guid = &lt;lfs_s_hardcode_parameter&gt;-parameter_guid ).

        IF &lt;lfs_s_hardcode_parameter&gt;-volatile EQ abap_false.
          &quot; Ajout du GUID du ParamÃ¨tre pour suppression en DB
          APPEND &lt;lfs_s_hardcode_parameter&gt;-parameter_guid TO me-&gt;ms_deleted_data-t_parameter_guid.

        ENDIF.

        &quot; Suppression du ParamÃ¨tre
        DELETE me-&gt;ms_work_data-t_hardcode_parameter USING KEY loop_key.

      ENDLOOP.

    ENDIF.

  ELSEIF NOT iv_parameter_guid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression par ParamÃ¨tre
    &quot; -----------------------------------------------------------

    IF me-&gt;parameter_exist( iv_parameter_guid ) EQ abap_false.
      &quot; Le ParamÃ¨tre n&apos;existe pas
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Suppression du ParamÃ¨tre
    &quot; -----------------------------------------------------------

    &quot; Suppression des Attributs
    me-&gt;attribute_del( iv_parameter_guid = iv_parameter_guid ).

    IF me-&gt;ms_work_data-t_hardcode_parameter[
        parameter_guid = iv_parameter_guid
       ]-volatile EQ abap_false.
      &quot; Ajout du GUID du ParamÃ¨tre
      APPEND iv_parameter_guid TO me-&gt;ms_deleted_data-t_parameter_guid.

    ENDIF.

    &quot; Suppression de l&apos;entrÃ©e
    DELETE me-&gt;ms_work_data-t_hardcode_parameter WHERE parameter_guid EQ iv_parameter_guid.

  ELSE.
    &quot; Aucun paramÃ¨tre
    RETURN.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - ContrÃ´le existence" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_GUID" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_GUID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" SCONAME="IV_PARAMETER_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_PARAMETER_NAME" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" SCONAME="RV_EXIST" VERSION="1" LANGU="F" DESCRIPT="Le ParamÃ¨tre existe ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_EXIST" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parameter_exist.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_EXIST                                   *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - ContrÃ´le existence                    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Recherche prÃ©sence du ParamÃ¨tre
  &quot; -----------------------------------------------------------

  IF NOT iv_parameter_guid IS INITIAL.
    &quot; Recherche prÃ©sence du ParamÃ¨tre via son GUID
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH TABLE KEY parameter_guid = iv_parameter_guid
                                                       TRANSPORTING NO FIELDS.

  ELSE.
    &quot; Recherche prÃ©sence du ParamÃ¨tre via son ID / Version
    &quot;&quot;  --&gt; ContrÃ´le existence de la version
    IF me-&gt;version_exist( iv_version_guid ) NE abap_true.
      &quot; La Version n&apos;existe pas
      &quot;&quot;  --&gt; LÃ¨ve une exception
      me-&gt;__raise_exception(
          iv_msgno = 102
          iv_msgv1 = me-&gt;mv_repid
          iv_msgv2 = iv_version_guid
      ).

    ENDIF.

    &quot;&quot;  --&gt; Recherche existence du ParamÃ¨tre via son Nom
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH TABLE KEY second_key
                                                         COMPONENTS version_guid   = iv_version_guid
                                                                    parameter_name = iv_parameter_name
                                                       TRANSPORTING NO FIELDS.

  ENDIF.

  &quot; Retourne le boolÃ©en
  rv_exist = boolc( sy-subrc EQ 0 ). &quot;Vrai si la Version existe

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_GET" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - RÃ©cupÃ©ration donnÃ©es" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_GET" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_GET" SCONAME="ES_HARDCODE_PARAMETER" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_HARDCODE_PARAMETER"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_GET" SCONAME="RO_HARDCODE_PARAMETER" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="TY_HARDCODE_PARAMETER"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_GET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parameter_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_GET                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - RÃ©cupÃ©ration                          *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_hardcode_parameter.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration de l&apos;entrÃ©e correspond au ParamÃ¨tre
  &quot; -----------------------------------------------------------

  &quot; Retourne les donnÃ©es du ParamÃ¨tre
  READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH TABLE KEY parameter_guid = iv_parameter_guid
                                                  REFERENCE INTO ro_hardcode_parameter.
  IF sy-subrc NE 0.
    &quot; La version n&apos;existe pas
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 201
        iv_msgv1 = iv_parameter_guid
        iv_msgv2 = me-&gt;mv_repid
    ).

  ENDIF.

  IF es_hardcode_parameter IS SUPPLIED.
    &quot; Retourne les donnÃ©es (statiques)
    es_hardcode_parameter = ro_hardcode_parameter-&gt;*.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_SET" VERSION="1" LANGU="F" DESCRIPT="ParamÃ¨tre - Modification" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_SET" SCONAME="IV_PARAMETER_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_SET" SCONAME="IV_NEW_PARAMETER_NAME" VERSION="1" LANGU="F" DESCRIPT="Hardcode - ParamÃ¨tre - Nom" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM-PARAMETER_NAME" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="PARAMETER_SET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parameter_set.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : PARAMETER_SET                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : ParamÃ¨tre - Modification donnÃ©es                  *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    lo_hardcode_parameter TYPE REF TO ty_hardcode_parameter.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des donnÃ©es
  &quot; -----------------------------------------------------------

  lo_hardcode_parameter = me-&gt;parameter_get( iv_parameter_guid ).

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  &quot; ContrÃ´le nÃ©cessitÃ© de MÃ J
  IF iv_new_parameter_name IS INITIAL.
    &quot; Aucune donnÃ©es Ã  modifier
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ELSEIF lo_hardcode_parameter-&gt;parameter_name EQ iv_new_parameter_name.
    &quot; Aucune modification
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  IF iv_new_parameter_name IS SUPPLIED.
    &quot; ContrÃ´le que le Nom n&apos;existe pas dÃ©jÃ 
    IF me-&gt;parameter_exist(
         iv_version_guid       = lo_hardcode_parameter-&gt;version_guid
         iv_parameter_name     = iv_new_parameter_name
     ) EQ abap_true.
      &quot; Un ParamÃ¨tre avec ce nom existe dÃ©jÃ 
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 202
          iv_msgv1 = iv_new_parameter_name
      ).

    ENDIF.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification des donnÃ©es
  &quot; -----------------------------------------------------------

  &quot; Initialisation Indicateur donnÃ©es non sauvegardÃ©e
  lo_hardcode_parameter-&gt;updated = abap_true.

  &quot; Initialisation traÃ§abilitÃ©
  lo_hardcode_parameter-&gt;changed_by = sy-uname.
  GET TIME STAMP FIELD lo_hardcode_parameter-&gt;changed_at.

  IF iv_new_parameter_name IS SUPPLIED.
    &quot; Modification du Nom du ParamÃ¨tre
    lo_hardcode_parameter-&gt;parameter_name = iv_new_parameter_name.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="REPID_COPY" VERSION="1" LANGU="F" DESCRIPT="Programme - Copie" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="REPID_COPY" SCONAME="IV_REPID_NEW" VERSION="1" LANGU="F" DESCRIPT="Nom du programme ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-REPID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="REPID_COPY" SCONAME="RO_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_HARDCODE_MAINTAIN"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="REPID_COPY" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD repid_copy.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : REPID_COPY                                        *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Programme - Copie                                 *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***
  TYPES :
    BEGIN OF lty_attribute_guid_regroup,
      source TYPE ztec_t_hc_attr-attribute_guid_regroup,
      target TYPE ztec_t_hc_attr-attribute_guid_regroup,
    END OF   lty_attribute_guid_regroup.

  TYPES : lty_t_attribute_guid_regroup TYPE HASHED TABLE OF lty_attribute_guid_regroup
                                            WITH UNIQUE KEY primary_key COMPONENTS source.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_attribute_guid_regroup TYPE lty_t_attribute_guid_regroup.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_version       TYPE ty_hardcode_version,
    ls_hardcode_parameter     TYPE ty_hardcode_parameter,
    ls_hardcode_attribute     TYPE ty_hardcode_attribute,
    ls_attribute_guid_regroup TYPE lty_attribute_guid_regroup.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_repid_new TYPE ztec_t_hc_vers-repid.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; DÃ©termination Nom du Programme
  &quot; -----------------------------------------------------------

  IF NOT iv_repid_new IS INITIAL.
    &quot; ID spÃ©cifiÃ©
    &quot;&quot;  --&gt; Utilisation de cet ID
    lv_repid_new = iv_repid_new.

  ELSE.
    &quot; Pas d&apos;ID spÃ©cifiÃ©
    &quot;&quot;  --&gt; Reprise du Nom de l&apos;ID Ã  copier
    lv_repid_new = |{ me-&gt;mv_repid }_COPY|.                 &quot;#EC NOTEXT

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  &quot;&quot;  --&gt; ContrÃ´le existence Programme Ã  copier
  SELECT SINGLE mandt FROM ztec_t_hc_vers
                      INTO ls_hardcode_version-mandt
                     WHERE repid EQ me-&gt;mv_repid.
  IF sy-subrc NE 0.
    &quot;  Le Programme n&apos;existe pas
    &quot;&quot;  --&gt; LÃ¨ve une erreur
    me-&gt;__raise_exception(
      iv_msgno = 001
      iv_msgv1 = me-&gt;mv_repid
    ).

  ENDIF.

  &quot;&quot;  --&gt; ContrÃ´le inexistence Programme
  SELECT SINGLE mandt FROM ztec_t_hc_vers
                      INTO ls_hardcode_version-mandt
                     WHERE repid EQ lv_repid_new.
  IF sy-subrc EQ 0.
    &quot;  Le Programme existe dÃ©jÃ 
    &quot;&quot;  --&gt; LÃ¨ve une erreur
    me-&gt;__raise_exception(
      iv_msgno = 005
      iv_msgv1 = lv_repid_new
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Copie de l&apos;ensemble des donnÃ©es du Programme
  &quot; -----------------------------------------------------------

  &quot;&quot;  --&gt; CrÃ©ation instance MÃ J
  CREATE OBJECT ro_hardcode_maintain
    EXPORTING
      iv_repid = lv_repid_new.

  &quot;&quot;  --&gt; Modification des GUIDs
  LOOP AT me-&gt;ms_work_data-t_hardcode_version ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_version&gt;).

    CLEAR : ls_hardcode_version.

    IF &lt;lfs_s_hardcode_version&gt;-volatile EQ abap_true.
      &quot; Version non persistÃ©e en DB
      &quot;&quot;  --&gt; Ne pas tenir compte
      CONTINUE.

    ENDIF.

    &quot;&quot;  --&gt; Initialisation donnÃ©es Version
    ls_hardcode_version = &lt;lfs_s_hardcode_version&gt;.

    &quot;&quot;  --&gt; Modification donnÃ©es Version
    ls_hardcode_version-repid      = lv_repid_new.
    ls_hardcode_version-volatile   = abap_true.
    ls_hardcode_version-created_by = sy-uname.
    CLEAR : ls_hardcode_version-changed_at, ls_hardcode_version-changed_by.
    GET TIME STAMP FIELD ls_hardcode_version-created_at.

    TRY.
        &quot; CrÃ©ation ID Unique
        ls_hardcode_version-version_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

      CATCH cx_uuid_error.
        &quot; Erreur lors de la crÃ©ation du GUID
        &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
        ls_hardcode_version-version_guid = cl_abap_random=&gt;seed( ).

    ENDTRY.

    &quot;&quot;  --&gt; Ajout de la Version
    INSERT ls_hardcode_version INTO TABLE ro_hardcode_maintain-&gt;ms_work_data-t_hardcode_version.

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des ParamÃ¨tres de la Version
    READ TABLE me-&gt;ms_work_data-t_hardcode_parameter WITH KEY second_key
                                                   COMPONENTS version_guid = &lt;lfs_s_hardcode_version&gt;-version_guid
                                                 TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      &quot; Au moins une occurence trouvÃ©e
      &quot;&quot;  --&gt; Parcours l&apos;ensemble des ParamÃ¨tres
      LOOP AT me-&gt;ms_work_data-t_hardcode_parameter ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_parameter&gt;)
                                                    USING KEY second_key
                                                         FROM sy-tabix.

        CLEAR : ls_hardcode_parameter.

        IF &lt;lfs_s_hardcode_parameter&gt;-version_guid NE &lt;lfs_s_hardcode_version&gt;-version_guid.
          &quot; On ne traite plus la mÃªme Version
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        IF &lt;lfs_s_hardcode_parameter&gt;-volatile EQ abap_true.
          &quot; ParamÃ¨tre non persistÃ© en DB
          &quot;&quot;  --&gt; Ne pas tenir compte
          CONTINUE.

        ENDIF.

        &quot;&quot;  --&gt; Initialisation donnÃ©es ParamÃ¨tre
        ls_hardcode_parameter = &lt;lfs_s_hardcode_parameter&gt;.

        &quot;&quot;  --&gt; Modification donnÃ©es ParamÃ¨tre
        ls_hardcode_parameter-volatile     = abap_true.
        ls_hardcode_parameter-created_by   = sy-uname.
        ls_hardcode_parameter-version_guid = ls_hardcode_version-version_guid.
        CLEAR : ls_hardcode_parameter-changed_at, ls_hardcode_parameter-changed_by.
        GET TIME STAMP FIELD ls_hardcode_parameter-created_at.

        TRY.
            &quot; CrÃ©ation ID Unique
            ls_hardcode_parameter-parameter_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

          CATCH cx_uuid_error.
            &quot; Erreur lors de la crÃ©ation du GUID
            &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
            ls_hardcode_parameter-parameter_guid = cl_abap_random=&gt;seed( ).

        ENDTRY.

        &quot;&quot;  --&gt; Ajout du ParamÃ¨tre
        INSERT ls_hardcode_parameter INTO TABLE ro_hardcode_maintain-&gt;ms_work_data-t_hardcode_parameter.

        &quot; RÃ©cupÃ©ration position premiÃ¨re occurence d&apos;Attribut de la Version
        READ TABLE me-&gt;ms_work_data-t_hardcode_attribute WITH KEY second_key
                                                       COMPONENTS parameter_guid = &lt;lfs_s_hardcode_parameter&gt;-parameter_guid
                                                     TRANSPORTING NO FIELDS.
        IF sy-subrc EQ 0.
          &quot; Au moins une occurence trouvÃ©e
          &quot;&quot;  --&gt; Parcours l&apos;ensemble des Attributs
          LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_attribute&gt;)
                                                        USING KEY second_key
                                                             FROM sy-tabix.

            CLEAR : ls_hardcode_attribute.

            IF &lt;lfs_s_hardcode_attribute&gt;-parameter_guid NE &lt;lfs_s_hardcode_parameter&gt;-parameter_guid.
              &quot; On ne traite plus le mÃªme ParamÃ¨tre
              &quot;&quot;  --&gt; ArrÃªt de la boucle
              EXIT.

            ENDIF.

            IF &lt;lfs_s_hardcode_attribute&gt;-volatile EQ abap_true.
              &quot; Attribut non persistÃ© en DB
              &quot;&quot;  --&gt; Ne pas tenir compte
              CONTINUE.

            ENDIF.

            &quot;&quot;  --&gt; RÃ©cupÃ©ration du GUID de RÃ©fÃ©rence
            READ TABLE lt_attribute_guid_regroup WITH TABLE KEY source = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup
                                                      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute_guid_regroup&gt;).
            IF sy-subrc NE 0.
              &quot; Aucune occurence
              TRY.
                  &quot;&quot;  --&gt; CrÃ©ation ID Unique
                  ls_attribute_guid_regroup-target = cl_system_uuid=&gt;create_uuid_c32_static( ).

                CATCH cx_uuid_error.
                  &quot; Erreur lors de la crÃ©ation du GUID
                  &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
                  ls_attribute_guid_regroup-target = cl_abap_random=&gt;seed( ).

              ENDTRY.

              &quot;&quot;  --&gt; Ajout de l&apos;entrÃ©e
              ls_attribute_guid_regroup-source = &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup.
              INSERT ls_attribute_guid_regroup INTO TABLE lt_attribute_guid_regroup ASSIGNING &lt;lfs_s_attribute_guid_regroup&gt;.

            ENDIF.

            &quot;&quot;  --&gt; Initialisation donnÃ©es Attributs
            ls_hardcode_attribute = &lt;lfs_s_hardcode_attribute&gt;.

            &quot;&quot;  --&gt; Modification donnÃ©es Attributs
            ls_hardcode_attribute-volatile               = abap_true.
            ls_hardcode_attribute-created_by             = sy-uname.
            ls_hardcode_attribute-parameter_guid         = ls_hardcode_parameter-parameter_guid.
            ls_hardcode_attribute-attribute_guid_regroup = &lt;lfs_s_attribute_guid_regroup&gt;-target.
            CLEAR : ls_hardcode_attribute-changed_at, ls_hardcode_attribute-changed_by.
            GET TIME STAMP FIELD ls_hardcode_attribute-created_at.

            IF &lt;lfs_s_hardcode_attribute&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode_attribute&gt;-attribute_guid.
              &quot; Attribut de rÃ©fÃ©rence
              &quot;&quot;  --&gt; Initialisation Ã  la mÃªme valeur
              ls_hardcode_attribute-attribute_guid = ls_hardcode_attribute-attribute_guid_regroup.

            ELSE.
              &quot; Ligne d&apos;Attribut
              TRY.
                  &quot;&quot;  --&gt; CrÃ©ation ID Unique
                  ls_hardcode_attribute-attribute_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

                CATCH cx_uuid_error.
                  &quot; Erreur lors de la crÃ©ation du GUID
                  &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
                  ls_hardcode_attribute-attribute_guid = cl_abap_random=&gt;seed( ).

              ENDTRY.

            ENDIF.

            &quot;&quot;  --&gt; Ajout de l&apos;Attribut
            INSERT ls_hardcode_attribute INTO TABLE ro_hardcode_maintain-&gt;ms_work_data-t_hardcode_attribute.

          ENDLOOP.    &quot;Fin parcours Attributs

        ENDIF.        &quot;Fin de test prÃ©sencce Attributs

      ENDLOOP.        &quot;Fin parcours ParamÃ¨tres

    ENDIF.            &quot;Fin de test prÃ©sence ParamÃ¨tres

  ENDLOOP.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="SAVE_TO_DB" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es - Sauvegarde en DB" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="SAVE_TO_DB" SCONAME="IV_COMMIT" VERSION="1" LANGU="F" DESCRIPT="Commit des donnÃ©es ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PARVALUE="ABAP_TRUE"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="SAVE_TO_DB" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD save_to_db.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : SAVE_TO_DB                                        *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Sauvegarde HC en DB                               *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_ztec_t_hc_vers           TYPE ztec_t_hc_vers_tt,
    lt_ztec_t_hc_attr           TYPE ztec_t_hc_attr_tt,
    lt_ztec_t_hc_param          TYPE ztec_t_hc_param_tt,
    lt_hc_attribute_code_source TYPE zcl_hardcode_maintain=&gt;tt_attribute_code_source.

  DATA :
    lt_hardcode_version   TYPE ty_t_hardcode_version,
    lt_hardcode_parameter TYPE ty_t_hardcode_parameter,
    lt_hardcode_attribute TYPE ty_t_hardcode_attribute.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_ztec_t_hc_vers  TYPE ztec_t_hc_vers,
    ls_ztec_t_hc_attr  TYPE ztec_t_hc_attr,
    ls_ztec_t_hc_param TYPE ztec_t_hc_param.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_subrc TYPE sy-subrc.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF NOT me-&gt;ms_deleted_data-t_attribute_guid[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des Attributs
    &quot; -----------------------------------------------------------

    &quot; Extractions des GUIDs des Attributs
    LOOP AT me-&gt;ms_deleted_data-t_attribute_guid ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute_guid&gt;).

      CLEAR : ls_ztec_t_hc_attr.

      &quot; Initialisation des donnÃ©es
      ls_ztec_t_hc_attr-mandt                  = sy-mandt.
      ls_ztec_t_hc_attr-attribute_guid         = &lt;lfs_s_attribute_guid&gt;-attribute_guid.
      ls_ztec_t_hc_attr-attribute_guid_regroup = &lt;lfs_s_attribute_guid&gt;-attribute_guid_regroup.

      &quot; Ajout de l&apos;entrÃ©e
      APPEND ls_ztec_t_hc_attr TO lt_ztec_t_hc_attr.

    ENDLOOP.

    &quot; Suppression des Attributs
    DELETE ztec_t_hc_attr FROM TABLE lt_ztec_t_hc_attr.

  ENDIF.

  IF NOT me-&gt;ms_deleted_data-t_parameter_guid[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des ParamÃ¨tres
    &quot; -----------------------------------------------------------

    &quot; Extractions des GUIDs des ParamÃ¨tres
    LOOP AT me-&gt;ms_deleted_data-t_parameter_guid ASSIGNING FIELD-SYMBOL(&lt;lfs_s_parameter_guid&gt;).

      CLEAR : ls_ztec_t_hc_param.

      &quot; Initialisation des donnÃ©es
      ls_ztec_t_hc_param-mandt          = sy-mandt.
      ls_ztec_t_hc_param-parameter_guid = &lt;lfs_s_parameter_guid&gt;.

      &quot; Ajout de l&apos;entrÃ©e
      APPEND ls_ztec_t_hc_param TO lt_ztec_t_hc_param.

    ENDLOOP.

    &quot; Suppression des ParamÃ¨tres
    DELETE ztec_t_hc_param FROM TABLE lt_ztec_t_hc_param.

  ENDIF.

  IF NOT me-&gt;ms_deleted_data-t_version_guid[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des Versions
    &quot; -----------------------------------------------------------

    &quot; Extractions des GUIDs des Attributs
    LOOP AT me-&gt;ms_deleted_data-t_version_guid ASSIGNING FIELD-SYMBOL(&lt;lfs_s_version_guid&gt;).

      CLEAR : ls_ztec_t_hc_vers.

      &quot; Initialisation des donnÃ©es
      ls_ztec_t_hc_vers-mandt        = sy-mandt.
      ls_ztec_t_hc_vers-version_guid = &lt;lfs_s_version_guid&gt;.

      &quot; Ajout de l&apos;entrÃ©e
      APPEND ls_ztec_t_hc_vers TO lt_ztec_t_hc_vers.

    ENDLOOP.

    &quot; Suppression des Versions
    DELETE ztec_t_hc_vers FROM TABLE lt_ztec_t_hc_vers.

  ENDIF.

  IF NOT me-&gt;ms_deleted_data-t_code_source_guid[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression des Codes Sources
    &quot; -----------------------------------------------------------

    LOOP AT me-&gt;ms_deleted_data-t_code_source_guid ASSIGNING
      FIELD-SYMBOL(&lt;lfs_s_code_source_guid&gt;).

      &quot; Suppression du Code Source
      zcl_hardcode_cluster=&gt;code_source_del( &lt;lfs_s_code_source_guid&gt; ).

    ENDLOOP.

  ENDIF.

  IF iv_commit EQ abap_true.
    &quot; Supprime dÃ©finitivement les donnÃ©es
    CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;
      EXPORTING
        wait = abap_true.

  ENDIF.

  &quot; RÃ©initialisation des tables de Travail
  FREE : me-&gt;ms_deleted_data, lt_ztec_t_hc_param, lt_ztec_t_hc_attr, lt_ztec_t_hc_vers.

  IF NOT me-&gt;ms_work_data-t_hardcode_version[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Ajout des Versions
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es
    lt_hardcode_version[] = me-&gt;ms_work_data-t_hardcode_version[].

    &quot; Suppression des entrÃ©es non modifiÃ©es
    DELETE lt_hardcode_version WHERE updated  EQ abap_false
                                 AND volatile EQ abap_false.
    IF NOT lt_hardcode_version[] IS INITIAL.
      &quot; RÃ©cupÃ©ration des donnÃ©es
      lt_ztec_t_hc_vers[] = CORRESPONDING #( lt_hardcode_version[] ).

      TRY.
          &quot; Ajout des donnÃ©es
          MODIFY ztec_t_hc_vers FROM TABLE lt_ztec_t_hc_vers.

        CATCH cx_root.
          &quot; Une erreur grave est survenue
          lv_subrc = 4.

      ENDTRY.

    ENDIF.

  ENDIF.

  IF NOT me-&gt;ms_work_data-t_hardcode_parameter[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Ajout des Versions
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es
    lt_hardcode_parameter[] = me-&gt;ms_work_data-t_hardcode_parameter[].

    &quot; Suppression des entrÃ©es non modifiÃ©es
    DELETE lt_hardcode_parameter WHERE updated  EQ abap_false
                                   AND volatile EQ abap_false.
    IF NOT lt_hardcode_parameter[] IS INITIAL.
      &quot; RÃ©cupÃ©ration des donnÃ©es
      lt_ztec_t_hc_param[] = CORRESPONDING #( lt_hardcode_parameter ).

      TRY.
          &quot; Ajout des donnÃ©es
          MODIFY ztec_t_hc_param FROM TABLE lt_ztec_t_hc_param.

        CATCH cx_root.
          &quot; Une erreur grave est survenue
          lv_subrc = 5.

      ENDTRY.

    ENDIF.

  ENDIF.

  IF NOT me-&gt;ms_work_data-t_hardcode_attribute[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Modification des Attributs
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es
    lt_hardcode_attribute[] = me-&gt;ms_work_data-t_hardcode_attribute[].

    &quot; Suppression des entrÃ©es non modifiÃ©es
    DELETE lt_hardcode_attribute WHERE updated  EQ abap_false
                                   AND volatile EQ abap_false.
    IF NOT lt_hardcode_attribute[] IS INITIAL.
      &quot; RÃ©cupÃ©ration des donnÃ©es
      lt_ztec_t_hc_attr[] = CORRESPONDING #( lt_hardcode_attribute[] ).

      TRY.
          &quot; Modification des donnÃ©es
          MODIFY ztec_t_hc_attr FROM TABLE lt_ztec_t_hc_attr.

        CATCH cx_root.
          &quot; Une erreur grave est survenue
          lv_subrc = 6.

      ENDTRY.

    ENDIF.

  ENDIF.

  IF NOT me-&gt;ms_work_data-t_hc_attribute_code_source[] IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Modification des Codes Sources
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es
    lt_hc_attribute_code_source[] = me-&gt;ms_work_data-t_hc_attribute_code_source[].

    &quot; Suppression des entrÃ©es non modifiÃ©es
    DELETE lt_hc_attribute_code_source WHERE updated EQ abap_false
                                         AND volatile EQ abap_false.

    LOOP AT lt_hc_attribute_code_source
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attr_code_source&gt;).

      &quot; VÃ©rifie que l&apos;Attribut existe
      READ TABLE me-&gt;ms_work_data-t_hardcode_attribute
          WITH KEY attribute_guid_regroup = &lt;lfs_s_attr_code_source&gt;-attribute_guid_regroup
          TRANSPORTING NO FIELDS BINARY SEARCH.
      IF sy-subrc NE 0.
        &quot; Aucune correspondance
        &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
        CONTINUE.

      ENDIF.

      &quot; Ajout du Texte dans table Cluster
      zcl_hardcode_cluster=&gt;code_source_add(
        iv_attribute_guid_regroup = &lt;lfs_s_attr_code_source&gt;-attribute_guid_regroup
        it_code_source            = &lt;lfs_s_attr_code_source&gt;-t_code_source
        iv_commit                 = abap_false
      ).

    ENDLOOP.

  ENDIF.

  IF iv_commit EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; Commit des donnÃ©es
    &quot; -----------------------------------------------------------

    IF lv_subrc IS INITIAL.
      &quot; Aucune erreur grave
      &quot;&quot;  --&gt; Commit des donnÃ©es
      CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;
        EXPORTING
          wait = abap_true.

    ELSE.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Annulation des des modifications
      CALL FUNCTION &apos;BAPI_TRANSACTION_ROLLBACK&apos;.

      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
        iv_msgid = &apos;BRAIN_DEV&apos;                              &quot;#EC NOTEXT
        iv_msgno = 020
      ).

    ENDIF.

  ENDIF.

  IF lv_subrc IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; RÃ©initialisation Indicateur de MÃ J
    &quot; -----------------------------------------------------------

    &quot; Versions
    LOOP AT me-&gt;ms_work_data-t_hardcode_version ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_version&gt;).

      &quot; RÃ©initialisation tÃ©moin de MÃ J
      CLEAR : &lt;lfs_s_hardcode_version&gt;-updated, &lt;lfs_s_hardcode_version&gt;-volatile.

    ENDLOOP.

    &quot; ParamÃ¨tres
    LOOP AT me-&gt;ms_work_data-t_hardcode_parameter ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_parameter&gt;).

      &quot; RÃ©initialisation tÃ©moin de MÃ J
      CLEAR : &lt;lfs_s_hardcode_parameter&gt;-updated, &lt;lfs_s_hardcode_parameter&gt;-volatile.

    ENDLOOP.

    &quot; Attributs
    LOOP AT me-&gt;ms_work_data-t_hardcode_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_attribute&gt;).

      &quot; RÃ©initialisation tÃ©moin de MÃ J
      CLEAR : &lt;lfs_s_hardcode_attribute&gt;-updated, &lt;lfs_s_hardcode_attribute&gt;-volatile.

    ENDLOOP.

    &quot; Code Source
    LOOP AT me-&gt;ms_work_data-t_hc_attribute_code_source ASSIGNING &lt;lfs_s_attr_code_source&gt;.

      &quot; RÃ©initialisation tÃ©moin de MÃ J
      CLEAR : &lt;lfs_s_attr_code_source&gt;-updated, &lt;lfs_s_attr_code_source&gt;-volatile.

    ENDLOOP.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Traitement sur SHM
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration information sur l&apos;Instance de la SHM
  READ TABLE zcl_hardcode_shm_area=&gt;get_instance_infos( CONV shm_inst_name( me-&gt;mv_repid ) ) INDEX 1 INTO DATA(ls_instance_infos).
  IF sy-subrc EQ 0 AND
  ls_instance_infos-versions_active GT 0.
    &quot; EntrÃ©e rÃ©cupÃ©rÃ©e et au moins une Version Active
    &quot;&quot;  --&gt; Recharge l&apos;Instance
    zcl_hardcode_shm=&gt;get_instance( me-&gt;mv_repid )-&gt;hardcode_reload( ).

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" VERSION="1" LANGU="F" DESCRIPT="Version - CrÃ©ation" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" SCONAME="IV_VERSION_ID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_ID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" SCONAME="IV_IS_PRIMARY" VERSION="1" LANGU="F" DESCRIPT="Version primaire ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" SCONAME="ES_VERSION_DATA" VERSION="1" LANGU="F" DESCRIPT="HC - EntÃªte table de Customizing" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" SCONAME="RV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_ADD" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_add.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_ADD                                       *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - CrÃ©ation                                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_version TYPE ty_hardcode_version.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_version_data.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  &quot; ContrÃ´le que la version n&apos;existe pas dÃ©jÃ 
  IF me-&gt;version_exist( iv_version_id = iv_version_id ) EQ abap_true.
    &quot; La version existe dÃ©jÃ 
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 101
        iv_msgv1 = me-&gt;mv_repid
        iv_msgv2 = iv_version_id
    ).

  ENDIF.

  IF iv_is_primary EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; Modification de la Version primaire existante
    &quot; -----------------------------------------------------------

    TRY.
        &quot; Modification de l&apos;indicateur Primaire de la version
        me-&gt;ms_work_data-t_hardcode_version[ version_primary = abap_true ]-version_primary = abap_false.

      CATCH cx_sy_itab_line_not_found.
        &quot; Aucune Version Primaire

    ENDTRY.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Ajout d&apos;une nouvelle version
  &quot; -----------------------------------------------------------

  &quot; Initialisation des donnÃ©es
  ls_hardcode_version-mandt           = sy-mandt.
  ls_hardcode_version-repid           = me-&gt;mv_repid.
  ls_hardcode_version-volatile        = abap_true.
  ls_hardcode_version-version_id      = iv_version_id.
  ls_hardcode_version-version_primary = iv_is_primary.

  &quot; Initialisation donnÃ©s tracabilitÃ©
  ls_hardcode_version-created_by      = sy-uname.
  GET TIME STAMP FIELD ls_hardcode_version-created_at.

  TRY.
      &quot; CrÃ©ation ID Unique
      ls_hardcode_version-version_guid = cl_system_uuid=&gt;create_uuid_c32_static( ).

    CATCH cx_uuid_error.
      &quot; Erreur lors de la crÃ©ation du GUID
      &quot;&quot;  --&gt; GÃ©nÃ©ration Nombre alÃ©atoire
      ls_hardcode_version-version_guid = cl_abap_random=&gt;seed( ).

  ENDTRY.

  &quot; Ajout dans la table interne
  rv_version_guid = ls_hardcode_version-version_guid.
  INSERT ls_hardcode_version INTO TABLE me-&gt;ms_work_data-t_hardcode_version.

  IF es_version_data IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Initialisation donnÃ©es
    &quot; -----------------------------------------------------------

    &quot; Retourne les donnÃ©es
    MOVE-CORRESPONDING ls_hardcode_version TO es_version_data.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" VERSION="1" LANGU="F" DESCRIPT="Version - Copie" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="IV_VERSION_GUID_COPY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_GUID" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="IV_VERSION_ID_NEW" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="IV_COPY_CHILDREN" VERSION="1" LANGU="F" DESCRIPT="Copie des Enfants ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="ES_VERSION_DATA" VERSION="1" LANGU="F" DESCRIPT="HC - Table des Versions" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="ET_PARAMETER_DATA" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_PARAM" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_PARAM_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="ET_ATTRIBUTE_DATA" VERSION="1" LANGU="F" DESCRIPT="Type de table ZTEC_T_HC_ATTR" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_ATTR_TT"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="ET_ATTRIBUTE_RANGE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_HARDCODE_MAINTAIN=&gt;TY_T_ATTRIBUTE_RANGE_DATA"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="RV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_COPY" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe Exception" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_copy.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_COPY                                      *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - Copie                                   *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_version_id_new TYPE ztec_t_hc_vers-version_id.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR   : es_version_data.
  REFRESH : et_parameter_data, et_attribute_data.

  &quot; -----------------------------------------------------------
  &quot; Copie de la Versionn
  &quot; -----------------------------------------------------------

  IF NOT iv_version_id_new IS INITIAL.
    &quot; ID spÃ©cifiÃ©
    &quot;&quot;  --&gt; Utilisation de cet ID
    IF iv_version_id_new CS sy-abcde.
      &quot; ID Version invalide
      &quot;&quot;  --&gt; Reprise du Nom de l&apos;ID Ã  copier
      lv_version_id_new = |{ me-&gt;ms_work_data-t_hardcode_version[ version_guid = iv_version_guid_copy ]-version_id + cl_abap_random=&gt;seed( ) }|.

    ELSE.
      &quot; ID Version valide
      lv_version_id_new = iv_version_id_new.

    ENDIF.

  ELSE.
    &quot; Pas d&apos;ID spÃ©cifiÃ©
    TRY.
        &quot;&quot;  --&gt; Reprise du Nom de l&apos;ID Ã  copier
        lv_version_id_new = |{ me-&gt;ms_work_data-t_hardcode_version[ version_guid = iv_version_guid_copy ]-version_id + cl_abap_random=&gt;seed( ) }|.

      CATCH cx_root.
        &quot; Aucune correspondance
        &quot;&quot;  --&gt; Initialisation ID AlÃ©atoire
        lv_version_id_new = |{ cl_abap_random=&gt;seed( ) }|.  &quot;#EC NOTEXT

    ENDTRY.

  ENDIF.

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Ajout d&apos;une nouvelle version
      &quot; -----------------------------------------------------------

      rv_version_guid = me-&gt;version_add(
        EXPORTING
          iv_version_id   = iv_version_id_new
          iv_is_primary   = abap_false
        IMPORTING
          es_version_data = es_version_data
      ).

    CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; LÃ¨ve l&apos;exception
      me-&gt;__raise_exception( io_exception = lo_cx_hardcode_maintain ).

  ENDTRY.

  IF iv_copy_children EQ abap_true.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Copie des ParamÃ¨tres
        &quot; -----------------------------------------------------------

        IF et_parameter_data IS SUPPLIED.
          &quot; Copie des ParamÃ¨tres + Restitution ParamÃ¨tre crÃ©Ã©
          me-&gt;parameter_copy(
            EXPORTING
              iv_version_guid_copy    = iv_version_guid_copy
              iv_version_guid_new     = rv_version_guid
              iv_copy_children        = iv_copy_children
            IMPORTING
              et_parameter_data       = et_parameter_data
              et_attribute_data       = et_attribute_data
              et_attribute_range_data = et_attribute_range_data
          ).

        ELSE.
          &quot; Copie des ParamÃ¨tres
          me-&gt;parameter_copy(
              iv_version_guid_copy  = iv_version_guid_copy
              iv_copy_children      = iv_copy_children
          ).

        ENDIF.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue lors de la Copie
        &quot;&quot;  --&gt; Tant pis ...

    ENDTRY.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_DEL" VERSION="1" LANGU="F" DESCRIPT="Version - Suppression" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_DEL" SCONAME="IV_REPID" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-REPID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_DEL" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID" PAROPTIONL="X" PARPREFERD="X"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_DEL" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_del.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_DEL                                       *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - Suppression Version et dÃ©pendances      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_hardcode_version TYPE ty_hardcode_version.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  IF NOT iv_repid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Suppression par Programme
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration position premiÃ¨re occurence des Version
    READ TABLE me-&gt;ms_work_data-t_hardcode_version WITH KEY second_key
                                                 COMPONENTS repid = iv_repid
                                               TRANSPORTING NO FIELDS.
    IF sy-subrc EQ 0.
      &quot; Parcours l&apos;ensemble des ParamÃ¨tres de la Version
      LOOP AT me-&gt;ms_work_data-t_hardcode_version USING KEY second_key
                                                  ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_version&gt;)
                                                       FROM sy-tabix.

        IF &lt;lfs_s_hardcode_version&gt;-repid NE iv_repid.
          &quot; On ne traite plus le mÃªme Programme
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        &quot; Suppression des ParamÃ¨tres
        me-&gt;parameter_del( iv_version_guid = &lt;lfs_s_hardcode_version&gt;-version_guid ).

        IF &lt;lfs_s_hardcode_version&gt;-volatile EQ abap_false.
          &quot; Ajout du GUID du ParamÃ¨tre pour suppression en DB
          APPEND &lt;lfs_s_hardcode_version&gt;-version_guid TO me-&gt;ms_deleted_data-t_version_guid.

        ENDIF.

      ENDLOOP.

      &quot; -----------------------------------------------------------
      &quot; Traitement sur les donnÃ©es d&apos;entÃªte
      &quot; -----------------------------------------------------------

      &quot; Suppression de l&apos;entrÃ©e dans la table de Travail
      DELETE me-&gt;ms_work_data-t_hardcode_version USING KEY second_key WHERE repid = iv_repid.

    ENDIF.

  ELSEIF NOT iv_version_guid IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de Version
    &quot; -----------------------------------------------------------

    me-&gt;version_get(
      EXPORTING
        iv_version_guid     = iv_version_guid
      IMPORTING
        es_hardcode_version = ls_hardcode_version
    ).
*    CATCH zcx_hardcode_maintain.    &quot;L&apos;Exception est automatiquement levÃ© au niveau au-dessus

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le
    &quot; -----------------------------------------------------------

    IF ls_hardcode_version-version_primary EQ abap_true.
      &quot; Il s&apos;agit de la Version Primaire
      &quot;&quot;  --&gt; ContrÃ´le prÃ©sence d&apos;au moins une autre Version
      LOOP AT me-&gt;ms_work_data-t_hardcode_version ASSIGNING &lt;lfs_s_hardcode_version&gt;
                                                  USING KEY second_key
                                                      WHERE repid      EQ me-&gt;mv_repid
                                                        AND version_id NE ls_hardcode_version-version_id.
        &quot; RÃ©initialisation code retour (dans le doute)
        CLEAR : sy-subrc.

      ENDLOOP.
      IF &lt;lfs_s_hardcode_version&gt; IS ASSIGNED.
        &quot; Appose le caractÃ¨re &quot;Primaire&quot; Ã  la derniÃ¨re version lue
        &lt;lfs_s_hardcode_version&gt;-version_primary = abap_true.

      ELSE.
        &quot; Aucune autre Version
        &quot;&quot;  --&gt; LÃ¨ve une Exception
        me-&gt;__raise_exception( iv_msgno = 103 ).

      ENDIF.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Traitement sur les ParamÃ¨tres
    &quot; -----------------------------------------------------------

    me-&gt;parameter_del( iv_version_guid = ls_hardcode_version-version_guid ).

    &quot; -----------------------------------------------------------
    &quot; Traitement sur les donnÃ©es d&apos;entÃªte
    &quot; -----------------------------------------------------------

    &quot; Suppression de l&apos;entrÃ©e dans la table de Travail
    DELETE me-&gt;ms_work_data-t_hardcode_version WHERE version_guid EQ ls_hardcode_version-version_guid.

    IF ls_hardcode_version-volatile EQ abap_false.
      &quot; RÃ©cupÃ©ration des GUIDs d&apos;entÃªte Ã  supprimer
      APPEND ls_hardcode_version-version_guid TO me-&gt;ms_deleted_data-t_version_guid.

    ENDIF.

  ELSE.
    &quot; Aucun paramÃ¨tre d&apos;appel
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_EXIST" VERSION="1" LANGU="F" DESCRIPT="Version - ContrÃ´le existence" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_EXIST" SCONAME="IV_VERSION_ID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_EXIST" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_EXIST" SCONAME="RV_EXIST" VERSION="1" LANGU="F" DESCRIPT="La Version existe ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="FLAG"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_EXIST" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_exist.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_EXIST                                     *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - ContrÃ´le existence                      *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Recherche prÃ©sence de la Version
  &quot; -----------------------------------------------------------

  IF NOT iv_version_id IS INITIAL.
    &quot; Recherche par ID
    READ TABLE me-&gt;ms_work_data-t_hardcode_version WITH TABLE KEY second_key
                                                       COMPONENTS repid      = me-&gt;mv_repid
                                                                  version_id = iv_version_id
                                                     TRANSPORTING NO FIELDS.

  ELSEIF NOT iv_version_guid IS INITIAL.
    &quot; Recherche par GUID
    READ TABLE me-&gt;ms_work_data-t_hardcode_version WITH TABLE KEY version_guid = iv_version_guid
                                                     TRANSPORTING NO FIELDS.

  ELSE.
    &quot; Aucun paramÃ¨tre
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; Retourne le boolÃ©en
  rv_exist = boolc( sy-subrc EQ 0 ). &quot;Vrai si la Version existe

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_GET" VERSION="1" LANGU="F" DESCRIPT="Version - RÃ©cupÃ©ration donnÃ©es" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_GET" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_GET" SCONAME="ES_HARDCODE_VERSION" VERSION="1" LANGU="F" DESCRIPT="HC - EntÃªte table de Customizing" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_HARDCODE_VERSION"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_GET" SCONAME="RO_HARDCODE_VERSION" VERSION="1" LANGU="F" DESCRIPT="HC - EntÃªte table de Customizing" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="TY_HARDCODE_VERSION"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_GET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_GET                                       *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - RÃ©cupÃ©ration donnÃ©es                    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : es_hardcode_version.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration de l&apos;entrÃ©e correspond Ã  la Version
  &quot; -----------------------------------------------------------

  &quot; Retourne les donnÃ©es de la Version
  READ TABLE me-&gt;ms_work_data-t_hardcode_version WITH TABLE KEY version_guid = iv_version_guid
                                                 REFERENCE INTO ro_hardcode_version.
  IF sy-subrc NE 0.
    &quot; La version n&apos;existe pas
    &quot;&quot;  --&gt; LÃ¨ve une Exception
    me-&gt;__raise_exception(
        iv_msgno = 102
        iv_msgv1 = iv_version_guid
        iv_msgv2 = me-&gt;mv_repid
    ).

  ENDIF.

  IF es_hardcode_version IS SUPPLIED.
    &quot; Retourne les donnÃ©es (statiques)
    es_hardcode_version = ro_hardcode_version-&gt;*.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_PRIMARY_SET" VERSION="1" LANGU="F" DESCRIPT="Version - Initialisation PrimaritÃ©" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_PRIMARY_SET" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_VERSION_GUID"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_PRIMARY_SET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_primary_set.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_PRIMARY_SET                               *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - Modification PrimaritÃ©                  *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration de l&apos;entrÃ©e correspondant Ã  la Version
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration
  DATA(lo_hardcode_version) = me-&gt;version_get( iv_version_guid ).
*  CATCH zcx_hardcode_maintain. &quot;L&apos;exception est directement levÃ© au niveau au-dessus

  &quot; -----------------------------------------------------------
  &quot; Supprime le caractÃ¨re Primaire de l&apos;ancienne Version
  &quot; -----------------------------------------------------------

  TRY.
      &quot; Modification de l&apos;indicateur Primaire de la version
      me-&gt;ms_work_data-t_hardcode_version[ version_primary = abap_true ]-version_primary = abap_false.

    CATCH cx_sy_itab_line_not_found.
      &quot; Aucune Version Primaire

  ENDTRY.

  &quot; -----------------------------------------------------------
  &quot; Appose le caractÃ¨re Primaire sur la Version
  &quot; -----------------------------------------------------------

  lo_hardcode_version-&gt;version_primary = abap_true.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_SET" VERSION="1" LANGU="F" DESCRIPT="Version - Modification" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_SET" SCONAME="IV_VERSION_GUID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - GUID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_GUID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_SET" SCONAME="IV_NEW_VERSION_ID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version - ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_ID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_SET" SCONAME="IV_NEW_VERSION_PRIMARY" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Version primaire" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-VERSION_PRIMARY" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="VERSION_SET" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD version_set.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : VERSION_SET                                       *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : Version - Modification donnÃ©es                    *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    lo_hardcode_version TYPE REF TO ty_hardcode_version.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des donnÃ©es
  &quot; -----------------------------------------------------------

  lo_hardcode_version = me-&gt;version_get( iv_version_guid ).

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  &quot; ContrÃ´le nÃ©cessitÃ© de MÃ J
  IF  iv_new_version_id IS INITIAL
  AND NOT iv_new_version_primary IS SUPPLIED.
    &quot; Aucune donnÃ©es Ã  modifier
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ELSEIF lo_hardcode_version-&gt;version_id      EQ iv_new_version_id
     AND lo_hardcode_version-&gt;version_primary EQ iv_new_version_primary.
    &quot; Aucune modification
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  IF iv_new_version_id IS SUPPLIED.
    &quot; ContrÃ´le que le Nom n&apos;existe pas dÃ©jÃ 
    IF me-&gt;version_exist( iv_version_id = iv_new_version_id ) EQ abap_true.
      &quot; Une version avec ce nom existe dÃ©jÃ 
      &quot;&quot;  --&gt; LÃ¨ve une Exception
      me-&gt;__raise_exception(
          iv_msgno = 101
          iv_msgv1 = iv_version_guid
          iv_msgv2 = me-&gt;mv_repid
      ).

    ENDIF.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification des donnÃ©es
  &quot; -----------------------------------------------------------

  &quot; Initialisation Indicateur donnÃ©es non sauvegardÃ©e
  lo_hardcode_version-&gt;updated = abap_true.

  &quot; Initialisation traÃ§abilitÃ©
  lo_hardcode_version-&gt;changed_by = sy-uname.
  GET TIME STAMP FIELD lo_hardcode_version-&gt;changed_at.

  IF iv_new_version_id IS SUPPLIED.
    &quot; Modification de l&apos;ID de Version
    lo_hardcode_version-&gt;version_id = iv_new_version_id.

  ENDIF.

  IF iv_new_version_primary IS SUPPLIED.
    &quot; Modification de la PrimaritÃ© da la Verison
    lo_hardcode_version-&gt;version_primary = iv_new_version_primary.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" VERSION="1" LANGU="F" DESCRIPT="LÃ¨ve une exception" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IO_EXCEPTION" VERSION="1" LANGU="F" DESCRIPT="Abstract Superclass for All Global Exceptions" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CX_ROOT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGID" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : classe de messages" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-MSGID" PARVALUE="ZCL_HARDCODE_MAINTAIN=&gt;MC_MY_MSGID"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGNO" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : numÃ©ro du message" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-MSGNO" PAROPTIONL="X" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV1" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV2" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV3" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="IV_MSGV4" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <exception CLSNAME="ZCL_HARDCODE_MAINTAIN" CMPNAME="__RAISE_EXCEPTION" SCONAME="ZCX_HARDCODE_MAINTAIN" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Classe maintenance" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD __raise_exception.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : __RAISE_EXCEPTION                                 *
*&amp; Classe          : ZCL_HARDCODE_MAINTAIN                             *
*&amp; Description     : LÃ¨ve une Exception                                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 11/05/2016                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_text_id TYPE scx_t100key.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; GÃ©nÃ©ration de l&apos;Exception
  &quot; -----------------------------------------------------------

  IF io_exception IS BOUND.
    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode_maintain
      EXPORTING
        previous = io_exception.

  ELSE.
    &quot; Initialisation structure
    ls_text_id-msgid = iv_msgid.
    ls_text_id-msgno = iv_msgno.
    ls_text_id-attr1 = iv_msgv1.
    ls_text_id-attr2 = iv_msgv2.
    ls_text_id-attr3 = iv_msgv3.
    ls_text_id-attr4 = iv_msgv4.

    &quot; LÃ¨ve l&apos;exception
    RAISE EXCEPTION TYPE zcx_hardcode_maintain
      EXPORTING
        textid = ls_text_id.

  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE_SHM_ROOT" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Gestion SHM" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" MSG_ID="ZHARDCODE" CLSSHAREDMEMORY="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <implementing CLSNAME="ZCL_HARDCODE_SHM_ROOT" REFCLSNAME="IF_SHM_BUILD_INSTANCE" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="1 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_HARDCODE_SHM_ROOT" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <typeClasDef CLSNAME="ZCL_HARDCODE_SHM_ROOT" TYPEGROUP="ZCL_HARDCODE" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="MT_HARDCODE" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZCL_HARDCODE=&gt;TT_HARDCODE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="MV_REPID" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZTEC_T_HC_VERS-REPID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <interfaceMethod CLSNAME="ZCL_HARDCODE_SHM_ROOT" CPDNAME="IF_SHM_BUILD_INSTANCE~BUILD">
   <source>METHOD if_shm_build_instance~build.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : IF_SHM_BUILD_INSTANCE~BUILD                       *
*&amp; Classe          : ZCL_HARDCODE_SHM_ROOT                             *
*&amp; Description     : CrÃ©ation Instance SHM                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *


ENDMETHOD.</source>
  </interfaceMethod>
  <method CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="CONSTRUCTOR" SCONAME="IV_REPID" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Identifiant" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_HARDCODE_SHM_ROOT                             *
*&amp; Description     : CrÃ©ation Instance SHM sur Hardcode                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation Attributs
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration de tous les Hardcodes
  me-&gt;mt_hardcode = zcl_hardcode=&gt;_hardcode_get( iv_repid ).

  &quot; Initialisation Attribut
  me-&gt;mv_repid = iv_repid.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="HARDCODE_GET" VERSION="1" LANGU="F" DESCRIPT="Hardcode - SHM - RÃ©cupÃ©ration" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="HARDCODE_GET" SCONAME="IV_VERSION_PRIMARY_ONLY" VERSION="1" LANGU="F" DESCRIPT="Uniquement version primaire ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_SHM_ROOT" CMPNAME="HARDCODE_GET" SCONAME="RT_HARDCODE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZCL_HARDCODE=&gt;TT_HARDCODE"/>
   <source>METHOD hardcode_get.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : IF_SHM_BUILD_INSTANCE~BUILD                       *
*&amp; Classe          : ZCL_HARDCODE_SHM_ROOT                             *
*&amp; Description     : GÃ©nÃ©ration Version                                *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Retourne les Hardcodes
  &quot; -----------------------------------------------------------

  &quot; Retourne les Hardcodes
  rt_hardcode[] = me-&gt;mt_hardcode[].

  IF iv_version_primary_only EQ abap_true.
    &quot; Uniquement Version Primaire
    &quot;&quot;  --&gt; Suppression des Autres Versions
    DELETE rt_hardcode WHERE version_primary NE abap_true.

  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" VERSION="1" LANGU="F" DESCRIPT="Code Source Dynamique" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <method CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" CMPNAME="EXECUTE" VERSION="1" LANGU="F" DESCRIPT="Code Source - ExÃ©cution" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" CMPNAME="EXECUTE" SCONAME="IT_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Code Source" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <parameter CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" CMPNAME="EXECUTE" SCONAME="RV_MESSAGE" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD execute.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
        lt_code_source TYPE stringtab.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation variable locale
  &quot; -----------------------------------------------------------

  &quot; Modification Code Source
  lt_code_source[] = it_code_source[].

  &quot; -----------------------------------------------------------
  &quot; Ajout des Instructions obligatoires
  &quot; -----------------------------------------------------------

  zcl_dynamic_source_code=&gt;_mandatory_instruction_check( CHANGING ct_code_source = lt_code_source ).

*  ls_code_source = &apos;FORM execute CHANGING et_mara TYPE mara_tt.&apos;. INSERT ls_code_source INTO lt_code INDEX 3.
*  ls_code_source = &apos;ENDFORM.&apos;. APPEND ls_code_source TO lt_code.

  GENERATE SUBROUTINE POOL lt_code_source NAME DATA(lv_subroutine) MESSAGE rv_message.

*  ls_code = |{ if_kaizen_keywords_c=&gt;gc_include } { lv_subroutine }.|.
*  INSERT ls_code INTO lt_code INDEX 1.
**  GENERATE SUBROUTINE POOL lt_code NAME lv_subroutine MESSAGE lv_message.
  IF sy-subrc EQ 0.
    TRY.
*        PERFORM execute IN PROGRAM (lv_subroutine) CHANGING lt_mara.

*      FORM execute CHANGING et_mara TYPE mara_tt.
*      SELECT * FROM mara INTO TABLE @et_mara.

*        ENDFORM.


      CATCH cx_root.

    ENDTRY.

  ENDIF.
  IF sy-subrc EQ 0.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" CMPNAME="_MANDATORY_INSTRUCTION_CHECK" VERSION="1" LANGU="F" DESCRIPT="Code Source - Instruction Obligatoire - ContrÃ´le" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_DYNAMIC_SOURCE_CODE" CMPNAME="_MANDATORY_INSTRUCTION_CHECK" SCONAME="CT_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Code Source" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <source>METHOD _mandatory_instruction_check.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
        lt_result TYPE match_result_tab.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA:
        ls_code_source TYPE string.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
        lv_regex TYPE string.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Recherche des Instructions obligatoires
  &quot; -----------------------------------------------------------

  &quot; Recherche Instruction &quot;PROGRAM&quot;
  FIND REGEX |({ if_kaizen_keywords_c=&gt;gc_program }).*?(\\.)| IN TABLE ct_code_source &quot;#EC NOTEXT
    IGNORING CASE RESULTS lt_result.
  IF sy-subrc NE 0.
    &quot; Aucune correspondance
    &quot;&quot;  --&gt; Ajout de l&apos;Instruction
    ls_code_source = |{ if_kaizen_keywords_c=&gt;gc_program }.|. &quot;#EC NOTEXT
    INSERT ls_code_source INTO ct_code_source INDEX 1.

  ENDIF.

  &quot; Recherche prÃ©sence CLASS
*  FIND REGEX || IN TABLE ct_code_source IGNORING CASE RESULTS lt_result.
*  IF sy-subrc NE 0 OR lt_result[] IS INITIAL.
  &quot; Recherche Instruction &quot;LOAD-OF-PROGRAM.&quot;
  FIND REGEX |({ if_kaizen_keywords_c=&gt;gc_load_of_program }\\.)\\B| IN TABLE ct_code_source &quot;#EC NOTEXT
    IGNORING CASE RESULTS lt_result.
  IF sy-subrc NE 0.
    &quot; Instruction n&apos;existe pas
    &quot;&quot;  --&gt; Insertion
    ls_code_source = |{ if_kaizen_keywords_c=&gt;gc_load_of_program }.|. &quot;#EC NOTEXT
    INSERT ls_code_source INTO ct_code_source INDEX 2.

  ENDIF.

*  ENDIF.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_GUI_ALV_TREE_UTIL" VERSION="1" LANGU="F" DESCRIPT="Classe utilitaire pour ALV Tree" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_NODE_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="4 " SRCROW2="13 " SRCCOLUMN2="24 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_node_data,
      parent_node_id TYPE        sysuuid_x16,
      node_id        TYPE        sysuuid_x16,
      node_data      TYPE REF TO data,
      node_text      TYPE        lvc_value,
      node_layout    TYPE        lvc_s_layn,
      t_item_layout  TYPE        lvc_t_layi,
      node_level_key TYPE        string,
      has_child      TYPE        flag,
    END OF   ty_node_data
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_T_NODE_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="15 " SRCCOLUMN1="4 " SRCROW2="16 " SRCCOLUMN2="92 " TYPESRC_LENG="0 " TYPESRC="ty_t_node_data TYPE SORTED TABLE OF ty_node_data
                                WITH UNIQUE KEY primary_key COMPONENTS parent_node_id node_id
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="18 " SRCCOLUMN1="4 " SRCROW2="21 " SRCCOLUMN2="18 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_key,
      key     TYPE string,
      node_id TYPE sysuuid_x16,
    END OF   ty_key
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_T_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="23 " SRCCOLUMN1="4 " SRCROW2="24 " SRCCOLUMN2="67 " TYPESRC_LENG="0 " TYPESRC="ty_t_key TYPE SORTED TABLE OF ty_key
                          WITH UNIQUE KEY primary_key COMPONENTS key
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_HIERARCHY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="4 " SRCROW2="20 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_hierarchy,
        node_level               TYPE i,
        fieldname                TYPE name_komp,
        t_component_display      TYPE cgpl_field_names,
        t_component_excluded     TYPE cgpl_field_names,
        node_text                TYPE string,
        node_text_alpha_in       TYPE flag,
        node_layout              TYPE lvc_s_layn,
        node_level_key_fieldname TYPE name_komp,
        hide_if_empty            TYPE flag,
        hide_if_null             TYPE flag,
      END OF   ty_hierarchy
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_T_HIERARCHY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="22 " SRCCOLUMN1="4 " SRCROW2="24 " SRCCOLUMN2="97 " TYPESRC_LENG="0 " TYPESRC="ty_t_hierarchy TYPE SORTED TABLE OF ty_hierarchy
                                            WITH UNIQUE KEY primary_key COMPONENTS node_level
                                            WITH UNIQUE SORTED KEY second_key COMPONENTS fieldname
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_LEVEL_NODE_KEY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="26 " SRCCOLUMN1="4 " SRCROW2="32 " SRCCOLUMN2="31 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_level_node_key,
        node_text          TYPE string,
        node_key           TYPE lvc_nkey,
        node_text_complete TYPE string,
        node_level_key     TYPE string,
        parent_node_key    TYPE lvc_nkey,
      END OF   ty_level_node_key
"/>
  <types CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="TY_T_LEVEL_NODE_KEY" VERSION="1" LANGU="F" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="34 " SRCCOLUMN1="4 " SRCROW2="35 " SRCCOLUMN2="92 " TYPESRC_LENG="0 " TYPESRC="ty_t_level_node_key TYPE STANDARD TABLE OF ty_level_node_key
                                         WITH NON-UNIQUE KEY primary_key COMPONENTS node_text
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeClasDef CLSNAME="ZCL_GUI_ALV_TREE_UTIL" TYPEGROUP="ZCL_GUI_ALV_TREE_UTIL" VERSION="1" TPUTYPE="1" IMPLICIT="X"/>
  <attribute CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="MO_ALV_TREE" VERSION="1" LANGU="F" DESCRIPT="ALV Tree Control" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_GUI_ALV_TREE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="MT_KEY" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_KEY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="MT_NODE_DATA" VERSION="1" LANGU="F" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_NODE_DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ADD_TO_APPROPRIATE_NODE" VERSION="1" LANGU="F" DESCRIPT="Ajout dans le Noeud appropriÃ©" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ADD_TO_APPROPRIATE_NODE" SCONAME="IS_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es Ã  afficher" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ADD_TO_APPROPRIATE_NODE" SCONAME="IT_HIERARCHY" VERSION="1" LANGU="F" DESCRIPT="HiÃ©rarchie" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_GUI_ALV_TREE_UTIL=&gt;TY_T_HIERARCHY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ADD_TO_APPROPRIATE_NODE" SCONAME="IT_COMPONENT_KEY" VERSION="1" LANGU="F" DESCRIPT="Table avec noms de zones" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CGPL_FIELD_NAMES" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ADD_TO_APPROPRIATE_NODE" SCONAME="IS_HIERARCHY_LOWER" VERSION="1" LANGU="F" DESCRIPT="HiÃ©rarchie - Niveau le plus bas" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_GUI_ALV_TREE_UTIL=&gt;TY_HIERARCHY" PAROPTIONL="X"/>
   <source>METHOD add_to_appropriate_node.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ADD_TO_APPROPRIATE_NODE                           *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : Ajout de l&apos;entrÃ©e dans le Noeud appropriÃ©         *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_key       TYPE ty_key,
    ls_node_data TYPE ty_node_data,
    ls_hierarchy TYPE ty_hierarchy.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_data TYPE REF TO data.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_key            TYPE string,
    lv_key_value      TYPE string,
    lv_node_text      TYPE string,
    lv_node_level     TYPE int4,
    lv_last_node_id   TYPE sysuuid_x16,
    lv_node_level_key TYPE string.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_key_value&gt;      TYPE any,
    &lt;lfs_node_data&gt;      TYPE any,
    &lt;lfs_node_level_key&gt; TYPE any.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Constitution de la Clef et dÃ©termination du Noeud oÃ¹
  &quot; ajouter l&apos;entrÃ©e
  &quot; -----------------------------------------------------------

  &quot; Parcours l&apos;ensemble des Clefs
  LOOP AT it_component_key ASSIGNING FIELD-SYMBOL(&lt;lfs_s_component_key&gt;).

    &quot; IncrÃ©mentation niveau HiÃ©rarchique
    ADD 1 TO lv_node_level.

    &quot; RÃ©cupÃ©ration de la valeur de la clef
    ASSIGN COMPONENT &lt;lfs_s_component_key&gt; OF STRUCTURE is_data
                                                     TO &lt;lfs_key_value&gt;.
    IF sy-subrc NE 0.
      &quot; Pas de correspondance
      &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
      CONTINUE.

    ENDIF.

    IF lv_key IS INITIAL.
      &quot; Initialisation de la Clef
      lv_key = &lt;lfs_key_value&gt;.

    ELSE.
      &quot; ConcatÃ©ne la clef
      lv_key_value = |{ &lt;lfs_key_value&gt; }|.
      CONCATENATE lv_key lv_key_value INTO lv_key RESPECTING BLANKS.

    ENDIF.

    TRY.
        &quot; RÃ©cupÃ©ration du Noeud correspondant Ã  cette clef
        lv_last_node_id = me-&gt;mt_key[ key = lv_key ]-node_id.

      CATCH cx_sy_itab_line_not_found.
        &quot; Le Noeud correspondant Ã  cette clef n&apos;existe pas
        &quot;&quot;  --&gt; RÃ©cupÃ©ration donnÃ©es HiÃ©rarchique
        CLEAR : ls_hierarchy.
        READ TABLE it_hierarchy WITH TABLE KEY node_level = lv_node_level
                                          INTO ls_hierarchy.

        IF  &lt;lfs_key_value&gt; IS INITIAL
        AND ls_hierarchy-hide_if_empty EQ abap_true.
          &quot; Ne pas afficher si vide
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
          CONTINUE.

        ENDIF.

        &quot; Initialisation des donnÃ©es Ã  afficher
        lo_data = zcl_gui_alv_tree_util=&gt;display_data_set(
          is_data               = is_data
          it_component_display  = ls_hierarchy-t_component_display
          it_component_excluded = ls_hierarchy-t_component_excluded
        ).

        &quot; Initialisation pointeur sur les donnÃ©es
        ASSIGN lo_data-&gt;* TO &lt;lfs_node_data&gt;.

        IF ls_hierarchy-node_text IS INITIAL.
          &quot; Initialisation Texte Ã  afficher Ã  la valeur du champ relatif au Noeud
          IF ls_hierarchy-node_text_alpha_in EQ abap_true.
            &quot; Affichage Format Interne
            lv_node_text = &lt;lfs_key_value&gt;.

          ELSE.
            &quot; Affichage Format Externe
            lv_node_text = |{ &lt;lfs_key_value&gt; ALPHA = OUT }|.

          ENDIF.

        ELSE.
          &quot; Utilisation du Texte fournis
          lv_node_text = ls_hierarchy-node_text.

        ENDIF.

        IF NOT ls_hierarchy-node_level_key_fieldname IS INITIAL.
          &quot; RÃ©cupÃ©ration valeur Clef niveau de Noeud
          ASSIGN COMPONENT ls_hierarchy-node_level_key_fieldname
              OF STRUCTURE &lt;lfs_node_data&gt;
                        TO &lt;lfs_node_level_key&gt;.
          lv_node_level_key = &lt;lfs_node_level_key&gt;.

        ENDIF.

        &quot;&quot;  --&gt; CrÃ©ation du Noeud
        ls_key-node_id = me-&gt;node_data_add(
          is_data           = &lt;lfs_node_data&gt;
          iv_node_text      = lv_node_text
          iv_has_child      = abap_true
          is_node_layout    = ls_hierarchy-node_layout
          iv_node_level_key = lv_node_level_key
          iv_parent_node_id = lv_last_node_id
        ).

        &quot;&quot;  --&gt; CrÃ©ation d&apos;une nouvelle entrÃ©e
        ls_key-key = lv_key.
        INSERT ls_key INTO TABLE me-&gt;mt_key.

        &quot;&quot;  --&gt; Initialisation derniÃ¨re clef
        lv_last_node_id = ls_key-node_id.

    ENDTRY.

  ENDLOOP.

  &quot; -----------------------------------------------------------
  &quot; CrÃ©ation Noeud le plus bas
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration valeur du champ Ã  afficher
  ASSIGN COMPONENT is_hierarchy_lower-fieldname OF STRUCTURE is_data
                                                          TO &lt;lfs_key_value&gt;.

  IF  &lt;lfs_key_value&gt; IS INITIAL
  AND is_hierarchy_lower-hide_if_empty EQ abap_true.
    &quot; Ne pas afficher si vide
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  IF NOT is_hierarchy_lower-node_level_key_fieldname IS INITIAL.
    &quot; RÃ©cupÃ©ration valeur Clef niveau de Noeud
    ASSIGN COMPONENT is_hierarchy_lower-node_level_key_fieldname OF STRUCTURE is_data
                                                                           TO &lt;lfs_node_level_key&gt;.
    IF  &lt;lfs_node_level_key&gt; IS INITIAL
    AND is_hierarchy_lower-hide_if_null EQ abap_true.
      &quot; Ne pas afficher si vide
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

  ENDIF.

  IF is_hierarchy_lower-node_text IS INITIAL.
    &quot; Initialisation Texte Ã  afficher Ã  la valeur du champ relatif au Noeud
    IF &lt;lfs_key_value&gt; IS ASSIGNED.
      &quot; Utilisation de la valeur du champ
      lv_node_text = |{ &lt;lfs_key_value&gt; ALPHA = OUT }|.

    ELSE.
      &quot; Utilisation de la clef
      lv_node_text = lv_key.

    ENDIF.

  ELSE.
    &quot; Utilisation du Texte fournis
    lv_node_text = is_hierarchy_lower-node_text.

  ENDIF.

  &quot; Initialisation des donnÃ©es Ã  afficher
  lo_data = zcl_gui_alv_tree_util=&gt;display_data_set(
    is_data               = is_data
    it_component_display  = is_hierarchy_lower-t_component_display
    it_component_excluded = is_hierarchy_lower-t_component_excluded
  ).

  &quot; Initialisation pointeur sur les donnÃ©es Ã  afficher
  ASSIGN lo_data-&gt;* TO &lt;lfs_node_data&gt;.

  IF NOT ls_hierarchy-node_level_key_fieldname IS INITIAL.
    &quot; RÃ©cupÃ©ration valeur Clef niveau de Noeud
    ASSIGN COMPONENT ls_hierarchy-node_level_key_fieldname OF STRUCTURE &lt;lfs_node_data&gt;
                                                                     TO &lt;lfs_node_level_key&gt;.
    lv_node_level_key = &lt;lfs_node_level_key&gt;.

  ENDIF.

  &quot; CrÃ©ation du Noeud
  me-&gt;node_data_add(
    is_data           = &lt;lfs_node_data&gt;
    iv_node_text      = lv_node_text
    iv_has_child      = abap_false
    is_node_layout    = is_hierarchy_lower-node_layout
    iv_node_level_key = lv_node_level_key
    iv_parent_node_id = lv_last_node_id
  ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE" VERSION="1" LANGU="F" DESCRIPT="Alimentation de l&apos;ALV (Manuel)" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE" SCONAME="ET_LEVEL_NODE_KEY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_T_LEVEL_NODE_KEY"/>
   <source>METHOD alv_tree_populate.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ALV_TREE_POPULATE                                 *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : Alimentation ALV Tree Ã  partir des Noeuds chargÃ©s *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  REFRESH : et_level_node_key.

  &quot; -----------------------------------------------------------
  &quot; Alimentation de l&apos;ALV Tree
  &quot; -----------------------------------------------------------

  LOOP AT me-&gt;mt_node_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_node_data&gt;).

    &quot; Ajout et de ses enfants
    me-&gt;node_add_recursive(
      EXPORTING
        is_node_data           = &lt;lfs_s_node_data&gt;
        iv_fill_level_node_key = boolc( et_level_node_key IS SUPPLIED )
      CHANGING
        ct_level_node_key      = et_level_node_key
    ).

    &quot; AllÃ¨ge la table au fur et Ã  mesure
    DELETE me-&gt;mt_node_data USING KEY loop_key.

  ENDLOOP.

  &quot; ----------------------------------------------------------
  &quot; Mise Ã  jour des donnÃ©es Ã  afficher
  &quot; -----------------------------------------------------------

  me-&gt;mo_alv_tree-&gt;update_calculations( ).

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE_AUTO" VERSION="1" LANGU="F" DESCRIPT="Alimentation de l&apos;ALV (Automatique)" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE_AUTO" SCONAME="IT_ALV_TREE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="INDEX TABLE"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE_AUTO" SCONAME="IT_HIERARCHY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZCL_GUI_ALV_TREE_UTIL=&gt;TY_T_HIERARCHY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE_AUTO" SCONAME="ET_LEVEL_NODE_KEY" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_T_LEVEL_NODE_KEY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="ALV_TREE_POPULATE_AUTO" SCONAME="CO_ALV_TREE" VERSION="1" LANGU="F" DESCRIPT="ALV Tree Control" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_ALV_TREE"/>
   <source>METHOD alv_tree_populate_auto.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : ALV_TREE_POPULATE_AUTO                            *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : Alimentation automatique de l&apos;ALV Tree            *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_sort_table    TYPE abap_sortorder_tab,
    lt_component_key TYPE cgpl_field_names.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_sort_table TYPE abap_sortorder.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_alv_tree_util TYPE REF TO zcl_gui_alv_tree_util.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_lines TYPE i.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  REFRESH : et_level_node_key.

  &quot; -----------------------------------------------------------
  &quot; CrÃ©ation de l&apos;instance utilitaire
  &quot; -----------------------------------------------------------

  CREATE OBJECT lo_alv_tree_util
    EXPORTING
      io_alv_tree = co_alv_tree.

  &quot; Suppression de tous les Noeuds existant
  co_alv_tree-&gt;delete_all_nodes( ).

  &quot; -----------------------------------------------------------
  &quot; Constitution des champs clefs
  &quot; -----------------------------------------------------------

  LOOP AT it_hierarchy ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hierarchy&gt;) TO lines( it_hierarchy ) - 1.

    &quot; Ajout du champ Clef
    APPEND &lt;lfs_s_hierarchy&gt;-fieldname TO lt_component_key.

    &quot; Ajout dans la table de Tri
    ls_sort_table-name = &lt;lfs_s_hierarchy&gt;-fieldname.
    APPEND ls_sort_table TO lt_sort_table.

  ENDLOOP.

  &quot; RÃ©cupÃ©ration de la personnalisation du dernier niveau
  READ TABLE it_hierarchy INDEX lines( it_hierarchy ) ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hierarchy_lower&gt;).

  &quot; -----------------------------------------------------------
  &quot; Constitution des champs clefs
  &quot; -----------------------------------------------------------

  SORT it_alv_tree_data BY (lt_sort_table).

  &quot; -----------------------------------------------------------
  &quot; Alimentation des Noeuds (interne)
  &quot; -----------------------------------------------------------

  LOOP AT it_alv_tree_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_alv_tree_data&gt;).

    &quot; Place la donnÃ©e dans le Noeud appropriÃ©e (CrÃ©ation Noeud Racine et Enfant si besoin)
    lo_alv_tree_util-&gt;add_to_appropriate_node(
        is_data            = &lt;lfs_s_alv_tree_data&gt;
        it_hierarchy       = it_hierarchy
        it_component_key   = lt_component_key
        is_hierarchy_lower = &lt;lfs_s_hierarchy_lower&gt;
    ).

  ENDLOOP.

  &quot; -----------------------------------------------------------
  &quot; Initialisation des Noeuds de l&apos;ALV (ALV Tree)
  &quot; -----------------------------------------------------------

  IF et_level_node_key IS SUPPLIED.
    &quot; Avec rÃ©cupÃ©ration des Niveaux
    lo_alv_tree_util-&gt;alv_tree_populate( IMPORTING et_level_node_key = et_level_node_key ).

  ELSE.
    &quot; Sans rÃ©cupÃ©ration des Niveaux
    lo_alv_tree_util-&gt;alv_tree_populate( ).

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="F" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="CONSTRUCTOR" SCONAME="IO_ALV_TREE" VERSION="1" LANGU="F" DESCRIPT="ALV Tree Control" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_ALV_TREE" PARPREFERD="X"/>
   <source>METHOD constructor.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : CONSTRUCTOR                                       *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : CrÃ©ation d&apos;une instance                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation des attributs
  &quot; -----------------------------------------------------------

  me-&gt;mo_alv_tree = io_alv_tree.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="DISPLAY_DATA_SET" VERSION="1" LANGU="F" DESCRIPT="Initialisation des donnÃ©es Ã  afficher" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="DISPLAY_DATA_SET" SCONAME="IS_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es source" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="DISPLAY_DATA_SET" SCONAME="IT_COMPONENT_DISPLAY" VERSION="1" LANGU="F" DESCRIPT="Table des champs Ã  afficher" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CGPL_FIELD_NAMES"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="DISPLAY_DATA_SET" SCONAME="IT_COMPONENT_EXCLUDED" VERSION="1" LANGU="F" DESCRIPT="Table des champs excluses" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CGPL_FIELD_NAMES"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="DISPLAY_DATA_SET" SCONAME="RO_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es Ã  afficher" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="DATA"/>
   <source>METHOD display_data_set.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : DISPLAY_DATA_SET                                  *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : Initialisation des donnÃ©es Ã  afficher             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_value_source&gt; TYPE any,
    &lt;lfs_value_target&gt; TYPE any.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; CrÃ©ation de la structure de Travail
  &quot; -----------------------------------------------------------

  &quot; CrÃ©ation de la donnÃ©e
  CREATE DATA ro_data LIKE is_data.
  ASSIGN ro_data-&gt;* TO FIELD-SYMBOL(&lt;lfs_data&gt;).

  &quot; -----------------------------------------------------------
  &quot; Initialisation des donnÃ©es Ã  afficher
  &quot; -----------------------------------------------------------

  IF it_component_display[] IS INITIAL.
    &quot; Affiche toutes les donnÃ©es
    MOVE-CORRESPONDING is_data TO &lt;lfs_data&gt;.

    &quot; Exclusion des donnÃ©es Ã  afficher
    IF NOT it_component_excluded[] IS INITIAL.

      LOOP AT it_component_excluded ASSIGNING FIELD-SYMBOL(&lt;lfs_s_component_excluded&gt;).

        UNASSIGN : &lt;lfs_value_source&gt;, &lt;lfs_value_target&gt;.

        &quot; Initialisation pointeur sur champ cible
        ASSIGN COMPONENT &lt;lfs_s_component_excluded&gt;
            OF STRUCTURE &lt;lfs_data&gt;
                      TO &lt;lfs_value_target&gt;.
        IF sy-subrc NE 0.
          &quot; Pas de correspondance
          &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
          CONTINUE.

        ENDIF.

        CLEAR : &lt;lfs_value_target&gt;.

      ENDLOOP.

    ENDIF.

  ELSE.
    &quot; Initialisation des donnÃ©es Ã  afficher
    LOOP AT it_component_display ASSIGNING FIELD-SYMBOL(&lt;lfs_s_component_display&gt;).

      UNASSIGN : &lt;lfs_value_source&gt;, &lt;lfs_value_target&gt;.

      &quot; Initialisation pointeur sur champ source
      ASSIGN COMPONENT &lt;lfs_s_component_display&gt;
          OF STRUCTURE is_data
                    TO &lt;lfs_value_source&gt;.
      IF sy-subrc NE 0.
        &quot; Pas de correspondance
        &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
        CONTINUE.

      ENDIF.

      &quot; Initialisation pointeur sur champ cible
      ASSIGN COMPONENT &lt;lfs_s_component_display&gt;
                    OF STRUCTURE &lt;lfs_data&gt;
                    TO &lt;lfs_value_target&gt;.

      &quot; initialisation de la valeur
      &lt;lfs_value_target&gt; = &lt;lfs_value_source&gt;.

    ENDLOOP.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" VERSION="1" LANGU="F" DESCRIPT="Export des donnÃ©es sous Excel" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" SCONAME="IO_ALV_TREE" VERSION="1" LANGU="F" DESCRIPT="ALV Tree Control" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="CL_GUI_ALV_TREE"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" SCONAME="IV_FILENAME" VERSION="1" LANGU="F" DESCRIPT="Nom du fichier" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" SCONAME="IV_FILEPATH" VERSION="1" LANGU="F" DESCRIPT="Chemin du fichier" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" SCONAME="IV_WORKSHEET_NAME" VERSION="1" LANGU="F" DESCRIPT="Nom de la feuille de travail" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="EXPORT_TO_EXCEL" SCONAME="RV_SUBRC" VERSION="1" LANGU="F" DESCRIPT="Zone systÃ¨me ABAP : code retour des instructions ABAP" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>METHOD export_to_excel.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_solix         TYPE solix_tab,
    lt_children      TYPE lvc_t_nkey,
    lt_components    TYPE abap_component_tab,
    lt_fieldcatalog  TYPE lvc_t_fcat,
    lt_subtree_nodes TYPE lvc_t_nkey.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_components     TYPE abap_componentdescr,
    ls_table_settings TYPE zexcel_s_table_settings.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lot_outtab      TYPE REF TO data,
    lo_datadescr    TYPE REF TO cl_abap_datadescr,
    lo_outtab_line  TYPE REF TO data,
    lo_table_descr  TYPE REF TO cl_abap_tabledescr,
    lo_struct_descr TYPE REF TO cl_abap_structdescr.

  DATA :
    lo_excel        TYPE REF TO zcl_excel,
    lo_worksheet    TYPE REF TO zcl_excel_worksheet,
    lo_excel_writer TYPE REF TO zcl_excel_writer_2007.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_path     TYPE string,
    lv_xstrlen  TYPE i,
    lv_xstring  TYPE xstring,
    lv_filename TYPE string,
    lv_fullpath TYPE string.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_s_outtab&gt; TYPE                 any,
    &lt;lfs_t_outtab&gt; TYPE STANDARD TABLE.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration du FieldCatalog
  &quot; -----------------------------------------------------------

  io_alv_tree-&gt;get_frontend_fieldcatalog(
    IMPORTING
      et_fieldcatalog   = lt_fieldcatalog
    EXCEPTIONS
      error_get_width   = 1
      cntl_system_error = 2
      dp_error          = 3
      failed            = 4
      OTHERS            = 5
  ).
  IF sy-subrc NE 0.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Constitution du type de la ligne
  &quot; -----------------------------------------------------------

  LOOP AT lt_fieldcatalog ASSIGNING FIELD-SYMBOL(&lt;lfs_s_fieldcatalog&gt;).

    CLEAR : ls_components.

    ls_components-name = &lt;lfs_s_fieldcatalog&gt;-fieldname.
    ls_components-type ?= cl_abap_datadescr=&gt;describe_by_name( &lt;lfs_s_fieldcatalog&gt;-rollname ).
    APPEND ls_components TO lt_components.

  ENDLOOP.

  TRY.
      &quot; CrÃ©ation de la structure dynamique
      lo_struct_descr ?= cl_abap_structdescr=&gt;create( lt_components ).

      &quot; CrÃ©ation du type de ligne
      CREATE DATA lo_outtab_line TYPE HANDLE lo_struct_descr.
      ASSIGN lo_outtab_line-&gt;* TO &lt;lfs_s_outtab&gt;.

      &quot; CrÃ©ation de la table dynamique
      lo_datadescr ?= lo_struct_descr.
      lo_table_descr = cl_abap_tabledescr=&gt;create( p_line_type = lo_datadescr ).

      &quot; CrÃ©ation de la table dynmaique
      CREATE DATA lot_outtab TYPE HANDLE lo_table_descr.
      ASSIGN lot_outtab-&gt;* TO &lt;lfs_t_outtab&gt;.

    CATCH cx_sy_struct_creation cx_sy_table_creation.

  ENDTRY.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration de tous les noeuds
  &quot; -----------------------------------------------------------

  io_alv_tree-&gt;get_subtree(
    EXPORTING
      i_node_key         = cl_gui_alv_tree=&gt;c_virtual_root_node
    IMPORTING
      et_subtree_nodes   = lt_subtree_nodes
    EXCEPTIONS
      node_key_not_found = 1
      OTHERS             = 2
  ).
  IF sy-subrc NE 0.
    &quot; Une erreur est survenue
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; RÃ©cupÃ©ration des donnÃ©es affichÃ©es
  &quot; -----------------------------------------------------------

  LOOP AT lt_subtree_nodes ASSIGNING FIELD-SYMBOL(&lt;lfs_s_subtree_nodes&gt;).

    &quot; RÃ©cupÃ©ration des Noeuds enfants
    io_alv_tree-&gt;get_children(
      EXPORTING
        i_node_key         = &lt;lfs_s_subtree_nodes&gt;
      IMPORTING
        et_children        = lt_children
      EXCEPTIONS
        historic_error     = 1
        node_key_not_found = 2
        OTHERS             = 3
    ).
    IF sy-subrc           EQ 0
    AND NOT lt_children[] IS INITIAL.
      &quot; Niveau parent
      &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
      CONTINUE.

    ENDIF.

    &quot; RÃ©cupÃ©ration des donnÃ©es affichÃ©es
    io_alv_tree-&gt;get_outtab_line(
      EXPORTING
        i_node_key     = &lt;lfs_s_subtree_nodes&gt;
      IMPORTING
        e_outtab_line  = &lt;lfs_s_outtab&gt;
      EXCEPTIONS
        node_not_found = 1
        OTHERS         = 2
    ).
    IF sy-subrc NE 0.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
      CONTINUE.

    ENDIF.

    &quot; Ajout de l&apos;entrÃ©e dans la table
    APPEND &lt;lfs_s_outtab&gt; TO &lt;lfs_t_outtab&gt;.

  ENDLOOP.

  &quot; -----------------------------------------------------------
  &quot; DÃ©termination Emplacement de Sauvegarde
  &quot; -----------------------------------------------------------

  IF  NOT iv_filename IS INITIAL
  AND NOT iv_filepath IS INITIAL.
    &quot; Nom de fichier et Emplacement
    &quot;&quot;  --&gt; Initialisation Emplacement de Sauvegarde
    lv_filename = |{ iv_filepath }\\{ iv_filename }|.

  ELSE.
    &quot; Autres
    &quot;&quot;  --&gt; DÃ©termination Emplacement de Sauvegarde
    cl_gui_frontend_services=&gt;file_save_dialog(
      EXPORTING
        default_extension         = &apos;.xlsx&apos;
        default_file_name         = CONV string( iv_filename )
        file_filter               = &apos;*.xlsx&apos;
        initial_directory         = CONV string( iv_filepath )
      CHANGING
        filename                  = lv_filename
        path                      = lv_path
        fullpath                  = lv_fullpath
      EXCEPTIONS
        cntl_error                = 1
        error_no_gui              = 2
        not_supported_by_gui      = 3
        invalid_default_file_name = 4
        OTHERS                    = 5
    ).

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF lv_filename IS INITIAL.
    &quot; Aucun nom de fichier dÃ©terminÃ©
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Export sous Excel
  &quot; -----------------------------------------------------------

  TRY.
      &quot; CrÃ©ation instance Excel
      CREATE OBJECT lo_excel.
      CREATE OBJECT lo_excel_writer.

      &quot; RÃ©cupÃ©ration feuille de travail
      lo_worksheet = lo_excel-&gt;get_active_worksheet( ).
      IF NOT lo_worksheet IS BOUND.
        &quot; Aucune feuille de travail
        &quot;&quot;  --&gt; CrÃ©ation nouvelle feuille de travail
        lo_worksheet = lo_excel-&gt;add_new_worksheet( CONV zexcel_sheet_title( iv_worksheet_name ) ).

      ELSE.
        &quot; Renomme la feuille de travail
        lo_worksheet-&gt;set_title( ip_title = CONV zexcel_sheet_title( iv_worksheet_name ) ).

      ENDIF.

      &quot; Initialisation propriÃ©tÃ©es
      ls_table_settings-top_left_row = 1.
      ls_table_settings-top_left_column = &apos;A&apos;.

      &quot; Pousse la table dans la feuille de travail
      lo_worksheet-&gt;bind_table(
          ip_table          = &lt;lfs_t_outtab&gt;
          is_table_settings = ls_table_settings
      ).

      &quot; Transforme le fichier en binaire
      lv_xstring = lo_excel_writer-&gt;zif_excel_writer~write_file( io_excel = lo_excel ).
      lt_solix   = cl_bcs_convert=&gt;xstring_to_solix( iv_xstring = lv_xstring ).
      lv_xstrlen = xstrlen( lv_xstring ).

      &quot; Enregistre le fichier
      cl_gui_frontend_services=&gt;gui_download(
        EXPORTING
          bin_filesize              = lv_xstrlen
          filename                  = lv_filename
          filetype                  = &apos;BIN&apos;
        CHANGING
          data_tab                  = lt_solix
        EXCEPTIONS
          file_write_error          = 1
          no_batch                  = 2
          gui_refuse_filetransfer   = 3
          invalid_type              = 4
          no_authority              = 5
          unknown_error             = 6
          header_not_allowed        = 7
          separator_not_allowed     = 8
          filesize_not_allowed      = 9
          header_too_long           = 10
          dp_error_create           = 11
          dp_error_send             = 12
          dp_error_write            = 13
          unknown_dp_error          = 14
          access_denied             = 15
          dp_out_of_memory          = 16
          disk_full                 = 17
          dp_timeout                = 18
          file_not_found            = 19
          dataprovider_exception    = 20
          control_flush_error       = 21
          not_supported_by_gui      = 22
          error_no_gui              = 23
          OTHERS                    = 24
      ).

      &quot; Retourne le code retour
      rv_subrc = sy-subrc.

    CATCH zcx_excel.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Initialisation code retour en erreur
      rv_subrc = 4.

  ENDTRY.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" VERSION="1" LANGU="F" DESCRIPT="Exploitation de la HiÃ©rarchie" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" SCONAME="IS_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es source" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" SCONAME="IS_HIERARCHY" VERSION="1" LANGU="F" DESCRIPT="HiÃ©rarchie" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_HIERARCHY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" SCONAME="ES_NODE_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es Ã  afficher" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" SCONAME="EV_NODE_TEXT" VERSION="1" LANGU="F" DESCRIPT="Texte du Noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="HIERARCHY_USAGE" SCONAME="EV_NODE_LEVEL_KEY" VERSION="1" LANGU="F" DESCRIPT="Clef niveau de Noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE"/>
   <source>METHOD hierarchy_usage.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_data TYPE REF TO data.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_node_data&gt; TYPE any.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Exploitation des donnÃ©es de la HiÃ©rarchie
  &quot; -----------------------------------------------------------

  &quot; Initialisation des donnÃ©es Ã  afficher
  lo_data = zcl_gui_alv_tree_util=&gt;display_data_set(
    is_data               = is_data
    it_component_display  = is_hierarchy-t_component_display
    it_component_excluded = is_hierarchy-t_component_excluded
  ).

  &quot; Initialisation pointeur sur les donnÃ©es
  ASSIGN lo_data-&gt;* TO &lt;lfs_node_data&gt;.

  &quot; Retourne les donnÃ©es
  es_node_data = &lt;lfs_node_data&gt;.

  IF ev_node_text IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Retourne Texte du Noeud
    &quot; -----------------------------------------------------------

    IF is_hierarchy-node_text IS INITIAL.
      &quot; Initialisation Texte Ã  afficher Ã  la valeur du champ relatif au Noeud
      ASSIGN COMPONENT is_hierarchy-fieldname
          OF STRUCTURE is_data
                    TO FIELD-SYMBOL(&lt;lfs_node_text&gt;).
      IF is_hierarchy-node_text_alpha_in EQ abap_true.
        &quot; Affichage Format Interne
        ev_node_text = &lt;lfs_node_text&gt;.

      ELSE.
        &quot; Affichage Format Externe
        ev_node_text = |{ &lt;lfs_node_text&gt; ALPHA = OUT }|.

      ENDIF.

    ELSE.
      &quot; Utilisation du Texte fournis
      ev_node_text = is_hierarchy-node_text.

    ENDIF.

  ENDIF.

  IF  ev_node_level_key IS SUPPLIED
  AND NOT is_hierarchy-node_level_key_fieldname IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Retourne Clef niveau de Noeud
    &quot; -----------------------------------------------------------

    ASSIGN COMPONENT is_hierarchy-node_level_key_fieldname
        OF STRUCTURE is_data
                  TO FIELD-SYMBOL(&lt;lfs_node_level_key&gt;).
    ev_node_level_key = &lt;lfs_node_level_key&gt;.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" VERSION="1" LANGU="F" DESCRIPT="CrÃ©ation du Noeud (RÃ©cursif)" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" SCONAME="IS_NODE_DATA" VERSION="1" LANGU="F" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_NODE_DATA" PARPREFERD="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" SCONAME="IV_PARENT_NODE_KEY" VERSION="1" LANGU="F" DESCRIPT="ContrÃ´le d&apos;arbre ALV : clÃ© de noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LVC_NKEY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" SCONAME="IV_PARENT_NODE_TEXT" VERSION="1" LANGU="F" DESCRIPT="Texte Noeud Parent" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" SCONAME="IV_FILL_LEVEL_NODE_KEY" VERSION="1" LANGU="F" DESCRIPT="Alimentation table des niveaux ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_ADD_RECURSIVE" SCONAME="CT_LEVEL_NODE_KEY" VERSION="1" LANGU="F" DESCRIPT="Table des niveaux" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_T_LEVEL_NODE_KEY" PAROPTIONL="X"/>
   <source>METHOD node_add_recursive.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : NODE_ADD_RECURSIVE                                *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : CrÃ©ation Noeud dans l&apos;ALV Tree (rÃ©cursif)         *
*&amp; Description     : CrÃ©ation Noeud dans l&apos;ALV Tree (rÃ©cursif)         *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_level_node_key TYPE ty_level_node_key.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_new_node_key    TYPE lvc_nkey,
    lv_parent_node_key TYPE lvc_nkey.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_node_data&gt; TYPE any.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; CrÃ©ation du Noeud
  &quot; -----------------------------------------------------------

  &quot; Initialisation pointeur sur les donnÃ©es
  ASSIGN is_node_data-node_data-&gt;* TO &lt;lfs_node_data&gt;.

  &quot; CrÃ©ation Noeud entÃªte
  me-&gt;mo_alv_tree-&gt;add_node(
    EXPORTING
      i_relat_node_key     = iv_parent_node_key
      i_relationship       = cl_gui_column_tree=&gt;relat_last_child
      is_outtab_line       = &lt;lfs_node_data&gt;
      is_node_layout       = is_node_data-node_layout
      it_item_layout       = is_node_data-t_item_layout
      i_node_text          = is_node_data-node_text
   IMPORTING
     e_new_node_key        = lv_new_node_key
    EXCEPTIONS
      relat_node_not_found = 1
      node_not_found       = 2
      OTHERS               = 3
  ).

  IF  iv_fill_level_node_key EQ abap_true
  AND ct_level_node_key      IS SUPPLIED.
    &quot; Ajout du niveau de la Clef
    ls_level_node_key-node_key  = lv_new_node_key.
    ls_level_node_key-node_text = is_node_data-node_text.
    IF iv_parent_node_text IS INITIAL.
      &quot; Initialisation Texte
      ls_level_node_key-node_text_complete = ls_level_node_key-node_text.

    ELSE.
      &quot; ConcatÃ©nation Texte (complet)
      ls_level_node_key-node_text_complete = |{ iv_parent_node_text }{ ls_level_node_key-node_text_complete }|.

    ENDIF.

    ls_level_node_key-node_level_key  = is_node_data-node_level_key.
    ls_level_node_key-parent_node_key = iv_parent_node_key.
    INSERT ls_level_node_key INTO TABLE ct_level_node_key.

  ENDIF.

  IF is_node_data-has_child EQ abap_true.
    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation Noeud(s) Enfant
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration position premiÃ¨re entrÃ©e correspondant aux enfants
    READ TABLE me-&gt;mt_node_data WITH KEY parent_node_id = is_node_data-node_id
                            TRANSPORTING NO FIELDS BINARY SEARCH.
    IF sy-subrc EQ 0.
      &quot; Parcours des enfants
      LOOP AT me-&gt;mt_node_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_child_node_data&gt;)
                  FROM sy-tabix.

        IF &lt;lfs_s_child_node_data&gt;-parent_node_id NE is_node_data-node_id.
          &quot; On ne traite plus le mÃªme Noeud Parent
          &quot;&quot;  --&gt; ArrÃªt de la boucle
          EXIT.

        ENDIF.

        &quot; CrÃ©ation du Noeud
        me-&gt;node_add_recursive(
          EXPORTING
            is_node_data           = &lt;lfs_s_child_node_data&gt;
            iv_parent_node_key     = lv_new_node_key
            iv_parent_node_text    = ls_level_node_key-node_text_complete
            iv_fill_level_node_key = iv_fill_level_node_key
          CHANGING
            ct_level_node_key      = ct_level_node_key
        ).

        &quot; Suppression de l&apos;entrÃ©e
        DELETE me-&gt;mt_node_data USING KEY loop_key.

      ENDLOOP.

    ENDIF.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" VERSION="1" LANGU="F" DESCRIPT="Ajout d&apos;Ã©lÃ¨ments dans le Noeud" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IS_DATA" VERSION="1" LANGU="F" DESCRIPT="DonnÃ©es Ã  afficher" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IV_NODE_TEXT" VERSION="1" LANGU="F" DESCRIPT="Texte du Noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CLIKE" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IV_HAS_CHILD" VERSION="1" LANGU="F" DESCRIPT="PossÃ¨de des enfants ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="FLAG" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IS_NODE_LAYOUT" VERSION="1" LANGU="F" DESCRIPT="ContrÃ´le arbre ALV : mise en page noeuds" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="LVC_S_LAYN" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IV_NODE_LEVEL_KEY" VERSION="1" LANGU="F" DESCRIPT="Clef niveau de Noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="IV_PARENT_NODE_ID" VERSION="1" LANGU="F" DESCRIPT="ID Noeud Parent" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYSUUID_X16" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_GUI_ALV_TREE_UTIL" CMPNAME="NODE_DATA_ADD" SCONAME="RV_NODE_ID" VERSION="1" LANGU="F" DESCRIPT="ID Noeud" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SYSUUID_X16"/>
   <source>METHOD node_data_add.
*&amp;---------------------------------------------------------------------*
*&amp; MÃ©thode         : NODE_DATA_ADD                                     *
*&amp; Classe          : ZCL_GUI_ALV_TREE_UTIL                             *
*&amp; Description     : Alimentation table interne des Noeuds Ã  crÃ©er     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 28/01/2016                                           *
*                                                                      *
*&amp; Responsable Technique  : VÃ©hier Olivier                             *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_key       TYPE ty_key,
    ls_node_data TYPE ty_node_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
    lo_abap_structdescr TYPE REF TO cl_abap_structdescr.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
  FIELD-SYMBOLS :
    &lt;lfs_key_value&gt; TYPE any,
    &lt;lfs_node_data&gt; TYPE any.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; CrÃ©ation nouveau Noeud
  &quot; -----------------------------------------------------------

  &quot; RÃ©cupÃ©ration description
  lo_abap_structdescr ?= cl_abap_structdescr=&gt;describe_by_data( p_data = is_data ).

  &quot; CrÃ©ation de la donnÃ©es
  CREATE DATA ls_node_data-node_data TYPE HANDLE lo_abap_structdescr.
  ASSIGN ls_node_data-node_data-&gt;* TO &lt;lfs_node_data&gt;.

  &quot; Initialisation des donnÃ©es
  &lt;lfs_node_data&gt;             = is_data.
  ls_node_data-node_id        = rv_node_id = cl_system_uuid=&gt;create_uuid_x16_static( ).
  ls_node_data-has_child      = iv_has_child.
  ls_node_data-node_text      = iv_node_text.
  ls_node_data-node_layout    = is_node_layout.
  ls_node_data-node_level_key = iv_node_level_key.
  ls_node_data-parent_node_id = iv_parent_node_id.

  &quot; Ajout du Noeud
  INSERT ls_node_data INTO TABLE me-&gt;mt_node_data.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_HARDCODE_CLUSTER" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Cluster" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <typeUsage CLSNAME="ZCL_HARDCODE_CLUSTER" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <method CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Code Source - Ajout" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" SCONAME="IT_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Code Source" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" SCONAME="IV_COMPRESS_DATA" VERSION="1" LANGU="F" DESCRIPT="Compression des donnÃ©es ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" SCONAME="IV_COMMIT" VERSION="1" LANGU="F" DESCRIPT="Commit ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PARVALUE="ABAP_TRUE"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_ADD" SCONAME="RV_ADDED" VERSION="1" LANGU="F" DESCRIPT="AjoutÃ©e ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSDBOOLEAN"/>
   <source>METHOD code_source_add.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_ztec_t_hc_attr_c TYPE ztec_t_hc_attr_c.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_code_source     TYPE xstring,
    lv_code_source_zip TYPE xstring.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF iv_attribute_guid_regroup IS INITIAL.
    &quot; Clef non valorisÃ©e
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Initialisation Attributs de CrÃ©ation / Modification
  &quot; -----------------------------------------------------------

  &quot; RÃ©Ã©cupÃ©ration TÃ©moin de CrÃ©ation
  SELECT SINGLE created_at, created_by
    FROM ztec_t_hc_attr_c
   WHERE srtfd EQ @iv_attribute_guid_regroup
    INTO (@ls_ztec_t_hc_attr_c-created_at, @ls_ztec_t_hc_attr_c-created_by).
  IF sy-subrc NE 0.
    &quot; EntrÃ©e non existante
    &quot;&quot;  --&gt; Initialisation TÃ©moin de CrÃ©ation
    ls_ztec_t_hc_attr_c-created_by = sy-uname.
    GET TIME STAMP FIELD ls_ztec_t_hc_attr_c-created_at.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Transformation en chaÃ®ne Binaire
  &quot; -----------------------------------------------------------

  &quot; Transformation en XSTRING
  CALL TRANSFORMATION id
               SOURCE data = it_code_source
           RESULT XML lv_code_source.

  IF iv_compress_data EQ abap_true.
    TRY.
        &quot; -----------------------------------------------------------
        &quot; Compression du Code Source
        &quot; -----------------------------------------------------------

        &quot; CrÃ©ation nouvelle instance
        DATA(lo_abap_zip) = NEW cl_abap_zip( ).
        lo_abap_zip-&gt;support_unicode_names = abap_true.

        &quot; Ajout du Code Source
        lo_abap_zip-&gt;add(
            name    = zcl_b2b_invoice_cluster=&gt;mc_zip_content_name
            content = lv_code_source
        ).

        &quot; Compression
        lv_code_source_zip = lo_abap_zip-&gt;save( ).

        &quot; Initialisation indiquant que les donnÃ©es sont compressÃ©es
        ls_ztec_t_hc_attr_c-is_compressed = abap_true.

      CATCH cx_root.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Utilisation de la version non compressÃ©es des donnÃ©es
        CLEAR : ls_ztec_t_hc_attr_c-is_compressed.
        lv_code_source_zip = lv_code_source.

    ENDTRY.

  ELSE.
    &quot; Pas de compression
    lv_code_source_zip = lv_code_source.

  ENDIF.

  IF NOT lv_code_source_zip IS INITIAL.
    &quot; -----------------------------------------------------------
    &quot; Charge le Code Source dans le Cluster
    &quot; -----------------------------------------------------------

    &quot; Initialisation donnÃ©es
    ls_ztec_t_hc_attr_c-mandt     = sy-mandt.
    ls_ztec_t_hc_attr_c-srtfd     = iv_attribute_guid_regroup.
    ls_ztec_t_hc_attr_c-data_size = xstrlen( lv_code_source_zip ).

    TRY.
        &quot; Export du Code Source
        EXPORT code_source = lv_code_source_zip
            TO DATABASE ztec_t_hc_attr_c(td)
                   FROM ls_ztec_t_hc_attr_c
                     ID ls_ztec_t_hc_attr_c-srtfd.

        &quot; Retourne boolÃ©en
        rv_added = boolc( sy-subrc EQ 0 ).

        IF iv_commit EQ abap_true.
          &quot; Commit
          COMMIT WORK.

        ENDIF.

      CATCH cx_root INTO DATA(lo_cx_exception).
        &quot; Erreur ajout Cluster
        &quot;&quot;  --&gt; LÃ¨ve une exception
*        RAISE EXCEPTION TYPE zcx_hardcode_cluster
*          EXPORTING
*            previous = lo_cx_exception.

    ENDTRY.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_DEL" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Code Source - Suppression" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_DEL" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_DEL" SCONAME="IV_COMMIT" VERSION="1" LANGU="F" DESCRIPT="Commit ?" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XSDBOOLEAN" PAROPTIONL="X"/>
   <source>METHOD code_source_del.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Suppression
  &quot; -----------------------------------------------------------

  DELETE FROM ztec_t_hc_attr_c WHERE srtfd EQ iv_attribute_guid_regroup.

  IF iv_commit EQ abap_true.
    COMMIT WORK.

  ENDIF.

ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_GET" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Code Source - RÃ©cupÃ©ration" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_GET" SCONAME="IV_ATTRIBUTE_GUID_REGROUP" VERSION="1" LANGU="F" DESCRIPT="Hardcode - Attribut - GUID Regroupement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZTEC_HC_ATTRIBUTE_GUID_REGROUP"/>
   <parameter CLSNAME="ZCL_HARDCODE_CLUSTER" CMPNAME="CODE_SOURCE_GET" SCONAME="RT_CODE_SOURCE" VERSION="1" LANGU="F" DESCRIPT="Table avec chaÃ®nes de caractÃ¨res" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRINGTAB"/>
   <source>METHOD code_source_get.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
    ls_textid           TYPE scx_t100key,
    ls_ztec_t_hc_attr_c TYPE ztec_t_hc_attr_c.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
  DATA :
        lo_cx_exception TYPE REF TO cx_root.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_code_source_xml TYPE xstring.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Charge le Code Source depuis le Cluster
      &quot; -----------------------------------------------------------

      &quot; Import du Code Source
      IMPORT code_source = lv_code_source_xml
        FROM DATABASE ztec_t_hc_attr_c(td)
                   TO ls_ztec_t_hc_attr_c
                   ID iv_attribute_guid_regroup.
      IF sy-subrc NE 0.
        &quot; Le Code Source n&apos;existe pas
        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

      ENDIF.

      IF ls_ztec_t_hc_attr_c-is_compressed EQ abap_true.
        &quot; -----------------------------------------------------------
        &quot; DÃ©compression du Code Source
        &quot; -----------------------------------------------------------

        &quot; CrÃ©ation nouvelle instance
        DATA(lo_abap_zip) = NEW cl_abap_zip( ).
        lo_abap_zip-&gt;support_unicode_names = abap_true.

        &quot; Chargement dossier compressÃ©e
        lo_abap_zip-&gt;load(
          EXPORTING
            zip             = lv_code_source_xml
          EXCEPTIONS
            zip_parse_error = 1
            OTHERS          = 2
        ).
        IF sy-subrc EQ 0.
          &quot; DÃ©compression
          lo_abap_zip-&gt;get(
            EXPORTING
              index                   = 1
            IMPORTING
              content                 = lv_code_source_xml
            EXCEPTIONS
              zip_index_error         = 1
              zip_decompression_error = 2
              OTHERS                  = 3
          ).

        ENDIF.
        IF sy-subrc NE 0.
          &quot; Une erreur est survenue
          &quot;&quot;  --&gt; LÃ¨ve une exception
          ls_textid-msgid = sy-msgid.
          ls_textid-msgno = sy-msgno.
          ls_textid-attr1 = sy-msgv1. ls_textid-attr2 = sy-msgv2.
          ls_textid-attr1 = sy-msgv3. ls_textid-attr2 = sy-msgv3.
          RETURN.
*          RAISE EXCEPTION TYPE zcx_hardcode_cluster
*            EXPORTING
*              textid = ls_textid.

        ENDIF.

      ENDIF.

      &quot; -----------------------------------------------------------
      &quot; DÃ©sÃ©rialization du Code Source
      &quot; -----------------------------------------------------------

      &quot; DÃ©sÃ©rialization du Code Source
      CALL TRANSFORMATION id
               SOURCE XML lv_code_source_xml
                   RESULT data = rt_code_source.

    CATCH cx_root INTO lo_cx_exception.
      &quot; Une erreur est survenue lors de la rÃ©cupÃ©ration du Code Source
      &quot;&quot;  --&gt; LÃ¨ve une Exception
*      RAISE EXCEPTION TYPE zcx_hardcode_cluster
*        EXPORTING
*          previous = lo_cx_exception.

  ENDTRY.

ENDMETHOD.</source>
  </method>
 </CLAS>
 <DTEL ROLLNAME="ZTEC_HC_VERSION_PRIMARY" DDLANGUAGE="F" DOMNAME="XFELD" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Version primaire" REPTEXT="Version primaire" SCRTEXT_S="Primaire" SCRTEXT_M="Primaire" SCRTEXT_L="Version primaire" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_VERSION_PRIMARY" DDLANGUAGE="F" DOMNAME="XFELD" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Version primaire" REPTEXT="Version primaire" SCRTEXT_S="Primaire" SCRTEXT_M="Primaire" SCRTEXT_L="Version primaire" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_VERSION_ID" DDLANGUAGE="F" ROUTPUTLEN="000000" HEADLEN="07" SCRLEN1="07" SCRLEN2="07" SCRLEN3="07" DDTEXT="Hardcode - Version - ID" REPTEXT="Version" SCRTEXT_S="Version" SCRTEXT_M="Version" SCRTEXT_L="Version" AUTHCLASS="00" DTELMASTER="F" DATATYPE="NUMC" LENG="000005" DECIMALS="000000" OUTPUTLEN="000005" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_VERSION_ID" DDLANGUAGE="F" ROUTPUTLEN="000000" HEADLEN="07" SCRLEN1="07" SCRLEN2="07" SCRLEN3="07" DDTEXT="Hardcode - Version - ID" REPTEXT="Version" SCRTEXT_S="Version" SCRTEXT_M="Version" SCRTEXT_L="Version" AUTHCLASS="00" DTELMASTER="F" DATATYPE="NUMC" LENG="000005" DECIMALS="000000" OUTPUTLEN="000005"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_VERSION_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Version - GUID" REPTEXT="Version GUID" SCRTEXT_S="Version ID" SCRTEXT_M="Version GUID" SCRTEXT_L="Version GUID" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_VERSION_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Version - GUID" REPTEXT="Version GUID" SCRTEXT_S="Version ID" SCRTEXT_M="Version GUID" SCRTEXT_L="Version GUID" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_PARAMETER_NAME" DDLANGUAGE="F" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - ParamÃ¨tre - Nom" REPTEXT="ParamÃ¨tre" SCRTEXT_S="Param." SCRTEXT_M="ParamÃ¨tre" SCRTEXT_L="ParamÃ¨tre" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_PARAMETER_NAME" DDLANGUAGE="F" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - ParamÃ¨tre - Nom" REPTEXT="ParamÃ¨tre" SCRTEXT_S="Param." SCRTEXT_M="ParamÃ¨tre" SCRTEXT_L="ParamÃ¨tre" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_PARAMETER_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - ParamÃ¨tre - GUID" REPTEXT="GUID ParamÃ¨tre" SCRTEXT_S="GUID Param" SCRTEXT_M="GUID ParamÃ¨tre" SCRTEXT_L="GUID ParamÃ¨tre" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_PARAMETER_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - ParamÃ¨tre - GUID" REPTEXT="GUID ParamÃ¨tre" SCRTEXT_S="GUID Param" SCRTEXT_M="GUID ParamÃ¨tre" SCRTEXT_L="GUID ParamÃ¨tre" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_NAME" DDLANGUAGE="F" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Nom" REPTEXT="Attribut" SCRTEXT_S="Attr." SCRTEXT_M="Attribut" SCRTEXT_L="Attribut" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_NAME" DDLANGUAGE="F" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Nom" REPTEXT="Attribut" SCRTEXT_S="Attr." SCRTEXT_M="Attribut" SCRTEXT_L="Attribut" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" DDLANGUAGE="F" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" OUTPUTLEN="000255" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" DDLANGUAGE="F" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" OUTPUTLEN="000255" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" DDLANGUAGE="F" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" DDLANGUAGE="F" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_HIGH" DDLANGUAGE="F" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Zone HIGH" REPTEXT="Limite supÃ©rieur" SCRTEXT_S="HIGH" SCRTEXT_M="Limite sup." SCRTEXT_L="Limite supÃ©rieur" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" OUTPUTLEN="000255" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_HIGH" DDLANGUAGE="F" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - Zone HIGH" REPTEXT="Limite supÃ©rieur" SCRTEXT_S="HIGH" SCRTEXT_M="Limite sup." SCRTEXT_L="Limite supÃ©rieur" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" DECIMALS="000000" OUTPUTLEN="000255" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - GUID" REPTEXT="Attribut GUID" SCRTEXT_S="Attr GUID" SCRTEXT_M="Attribut GUID" SCRTEXT_L="Attribut GUID" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="F">
   <DD04V ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID" DDLANGUAGE="F" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="Hardcode - Attribut - GUID" REPTEXT="Attribut GUID" SCRTEXT_S="Attr GUID" SCRTEXT_M="Attribut GUID" SCRTEXT_L="Attribut GUID" AUTHCLASS="00" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" DECIMALS="000000" OUTPUTLEN="000032" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <FUGR AREA="ZTEC_HARDCODE" SPRAS="F" AREAT="Groupe Fonction - Hardcode">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZTEC_HARDCODE" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="200" RLOAD="F" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZTEC_HARDCODETOP.                 &quot; Global Data
  INCLUDE LZTEC_HARDCODEUXX.                 &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZTEC_HARDCODEF...                 &quot; Subroutines
* INCLUDE LZTEC_HARDCODEO...                 &quot; PBO-Modules
* INCLUDE LZTEC_HARDCODEI...                 &quot; PAI-Modules
* INCLUDE LZTEC_HARDCODEE...                 &quot; Events
* INCLUDE LZTEC_HARDCODEP...                 &quot; Local class implement.
* INCLUDE LZTEC_HARDCODET99.                 &quot; ABAP Unit tests</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZTEC_HARDCODETOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="200" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZTEC_HARDCODE.                &quot;MESSAGE-ID ..

* INCLUDE LZTEC_HARDCODED...                 &quot; Local class definition</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="Z_HC_SHM_RELOAD" REMOTE="R" STEXT="Hardcode - SHM - Rechargement">
    <importing PARAMETER="IV_REPID" TYP="REPID"/>
    <documentation PARAMETER="IV_REPID" KIND="P" STEXT="Nom du programme ABAP" INDEX=" 001"/>
    <fm_source_new>*&amp;---------------------------------------------------------------------*
*&amp; Module Fonction : Z_HC_SHM_RELOAD                                   *
*&amp; Groupe Fonction : ZTEC_HARDCODE                                     *
*&amp; Description     : Recharge la SHM                                   *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© par     : Olivier VÃ©hier                                       *
*                                                                      *
*&amp; CrÃ©Ã© le      : 01/02/2017                                           *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*                                                                      *

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; ContrÃ´le
  &quot; -----------------------------------------------------------

  IF zcl_hardcode_shm=&gt;hardcode_is_load( iv_repid ) NE abap_true.
    &quot; Hardcode non chargÃ©e en SHM
    &quot;&quot;  --&gt; ArrÃªt du traitement
    RETURN.

  ENDIF.

  &quot; -----------------------------------------------------------
  &quot; Modification de la SHM
  &quot; -----------------------------------------------------------

  &quot; Recharge les Hardcodes dans la SHM
  zcl_hardcode_shm=&gt;get_instance( iv_repid )-&gt;hardcode_reload( abap_true ).</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_HC_TRANSPORT" REMOTE="R" STEXT="Hardcode - Transport">
    <importing PARAMETER="IV_REPID" TYP="REPID"/>
    <importing PARAMETER="IT_HC_VERSION" TYP="ZTEC_T_HC_VERS_TT"/>
    <importing PARAMETER="IT_HC_PARAMETER" TYP="ZTEC_T_HC_PARAM_TT"/>
    <importing PARAMETER="IT_HC_ATTRIBUTE" TYP="ZTEC_T_HC_ATTR_TT"/>
    <exporting PARAMETER="ES_RETURN" TYP="BAPIRET2"/>
    <documentation PARAMETER="IV_REPID" KIND="P" STEXT="Nom du programme ABAP" INDEX=" 001"/>
    <documentation PARAMETER="IT_HC_VERSION" KIND="P" STEXT="Type de table ZTEC_T_HC_VERS" INDEX=" 002"/>
    <documentation PARAMETER="IT_HC_PARAMETER" KIND="P" STEXT="Type de table ZTEC_T_HC_PARAM" INDEX=" 003"/>
    <documentation PARAMETER="IT_HC_ATTRIBUTE" KIND="P" STEXT="Type de table ZTEC_T_HC_ATTR" INDEX=" 004"/>
    <documentation PARAMETER="ES_RETURN" KIND="P" STEXT="ParamÃ¨tre de retour" INDEX=" 005"/>
    <fm_source_new>***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  TRY.
      &quot; -----------------------------------------------------------
      &quot; Suppression des Hardcodes prÃ©sents
      &quot; -----------------------------------------------------------

      &quot; RÃ©cupÃ©ration Instance Hardcode MÃ J
      DATA(lo_hardcode_maintain) = NEW zcl_hardcode_maintain( iv_repid ).

      &quot; Suppression Hardcode
      lo_hardcode_maintain-&gt;version_del( iv_repid = iv_repid ).

      &quot; Sauvegarde la Suppression
      lo_hardcode_maintain-&gt;save_to_db( abap_true ).

      &quot; -----------------------------------------------------------
      &quot; IntÃ©gration des Hardcodes
      &quot; -----------------------------------------------------------

      &quot; MÃ J Version
      MODIFY ztec_t_hc_vers FROM TABLE it_hc_version.

      &quot; MÃ J Attributs
      MODIFY ztec_t_hc_attr FROM TABLE it_hc_attribute.

      &quot; MÃ J ParamÃ¨tres
      MODIFY ztec_t_hc_param FROM TABLE it_hc_parameter.

    CATCH zcx_hardcode_maintain INTO DATA(lo_cx_hardcode_maintain).
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Retourne le Message d&apos;Erreur
      WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
        lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
      ENDWHILE.
      es_return-id         = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid.
      es_return-number     = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno.
      es_return-message_v1 = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1.
      es_return-message_v2 = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2.
      es_return-message_v3 = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3.
      es_return-message_v4 = lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4.

    CATCH cx_root.
      &quot; Une

  ENDTRY.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_HC_READ" REMOTE="R" STEXT="Hardcode - Lecture">
    <importing PARAMETER="IV_REPID" TYP="REPID"/>
    <exporting PARAMETER="ET_HARDCODE" TYP="ZVTEC_T_HC_TT"/>
    <exporting PARAMETER="ET_HARDCODE_SOURCE_CODE" TYP="ZTEC_T_HC_ATTRIBUTE_SOURCE"/>
    <documentation PARAMETER="IV_REPID" KIND="P" STEXT="Nom du programme ABAP" INDEX=" 001"/>
    <documentation PARAMETER="ET_HARDCODE" KIND="P" STEXT="Type de table ZVTEC_T_HC" INDEX=" 002"/>
    <documentation PARAMETER="ET_HARDCODE_SOURCE_CODE" KIND="P" STEXT="Hardcode - ZTEC_S_HC_ATTRIBUTE_SOURCE" INDEX=" 003"/>
    <fm_source_new>***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
  DATA :
        ls_hardcode_source_code TYPE ztec_s_hc_attribute_source.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Hardcode - Lecture
  &quot; -----------------------------------------------------------

  &quot; Lecture des Hardcodes
  SELECT * FROM zvtec_t_hc
          WHERE repid EQ @iv_repid
     INTO TABLE @et_hardcode.

  IF NOT et_hardcode[] IS INITIAL
  AND et_hardcode_source_code IS SUPPLIED.
    &quot; -----------------------------------------------------------
    &quot; Hardcode - Code Source - Lecture
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration des Identifiants des Codes Sources
    SELECT srtfd FROM ztec_t_hc_attr_c
      FOR ALL ENTRIES IN @et_hardcode
                   WHERE srtfd EQ @et_hardcode-attribute_guid_regroup
              INTO TABLE @DATA(lt_srtfd).

    &quot; Mapping dans l&apos;autre sens
    et_hardcode_source_code[] = CORRESPONDING #( lt_srtfd MAPPING attribute_guid_regroup = srtfd EXCEPT * ).
    FREE lt_srtfd.

    &quot; RÃ©cupÃ©ration Code Source
    LOOP AT et_hardcode_source_code ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_sc&gt;).

      &quot; RÃ©cupÃ©ration Code Source
      &lt;lfs_s_hc_sc&gt;-code_source = zcl_hardcode_cluster=&gt;code_source_get( &lt;lfs_s_hc_sc&gt;-attribute_guid_regroup ).

    ENDLOOP.

  ENDIF.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <MSAG ARBGB="ZHARDCODE" MASTERLANG="F" RESPUSER="DELAWARE" STEXT="Hardcode - Classe message">
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="000" TEXT="[GÃ©nÃ©ral]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="001" TEXT="Aucun hardcode (actif) prÃ©sent pour le programme &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="003" TEXT="Hardcode ajoutÃ© dans l&apos;OT &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="004" TEXT="Inconsistence dÃ©tÃ©ctÃ©e dans la table des Hardcodes."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="100" TEXT="[ Version ]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="101" TEXT="La Version &amp; existe dÃ©jÃ  pour le Programme &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="102" TEXT="La Version &amp; n&apos;existe pas pour le Programme &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="103" TEXT='Au moins une Version doit Ãªtre dÃ©finie comme &quot;Primaire&quot;.'/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="104" TEXT="Veuillez saisir un nom de Version valide."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="200" TEXT="[ ParamÃ¨tre ]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="201" TEXT="Le ParamÃ¨tre &amp; n&apos;existe pas pour la Version &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="202" TEXT="Le ParamÃ¨tre &amp; existe dÃ©jÃ ."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="203" TEXT="Veuillez saisir un nom de ParamÃ¨tre valide."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="300" TEXT="[ Attribut ]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="301" TEXT="L&apos;Attribut &amp; n&apos;existe pas."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="302" TEXT="L&apos;Attribut &amp; existe dÃ©jÃ ."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="303" TEXT="Veuillez saisir un nom d&apos;Attribut valide."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="400" TEXT="[Exploitation]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="401" TEXT="Dans ce cas le numÃ©ro de Version est obligatoire."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="402" TEXT="Aucune valeur attribuÃ©e avec la combinaison de clef spÃ©cifiÃ©e."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="500" TEXT="[ Maintenance ]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="501" TEXT="Pas assez de paramÃ¨tre renseignÃ©"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="005" TEXT="Hardcode existe dÃ©jÃ  pour le programme &amp;."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="006" TEXT="Hardcode &amp; copiÃ© sur &amp;"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="007" TEXT="Hardcode &amp; supprimÃ©"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="600" TEXT="[ SHM ]"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="601" TEXT="Hardcode &amp; gÃ©rÃ© en mÃ©moire partagÃ©e"/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="002" TEXT='Veuillez sÃ©lectionner une ligne &quot;Version&quot;.'/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="008" TEXT="Hardcode transportÃ© sur le systÃ¨me cible."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="009" TEXT="SystÃ¨me cible obligatoire."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="010" TEXT="Mandant cible obligatoire."/>
  <t100 SPRSL="F" ARBGB="ZHARDCODE" MSGNR="011" TEXT="SystÃ¨me / Mandant cible = SystÃ¨me / Mandant source"/>
  <t100t SPRSL="F" ARBGB="ZHARDCODE" STEXT="Hardcode - Classe message"/>
 </MSAG>
 <PROG NAME="ZTEC_HARDCODE_TOP" VARCL="X" SUBC="I" LEVL="740" RMAND="400" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Include dÃ©claration types / donnÃ©es" LENGTH="35 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZTEC_HARDCODE_TOP
*&amp;---------------------------------------------------------------------*

REPORT ztec_customizing.

***------------------------------------------------------------------***
**                             INCLUDE                                **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                              MACCRO                                **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                             CLASSES                                **
***------------------------------------------------------------------***

&quot; Classes principales
CLASS lcl_main DEFINITION DEFERRED.

&quot; Classes Ã©vÃ¨nements gÃ©nÃ©riques
CLASS lcl_generic_event_grid DEFINITION DEFERRED.
CLASS lcl_generic_event_tree DEFINITION DEFERRED.
CLASS lcl_generic_event_toolbar DEFINITION DEFERRED.

&quot; Classes Ã©vÃ¨nements
CLASS lcl_tree_drag_and_drop DEFINITION DEFERRED.
CLASS lcl_main_tree_event DEFINITION DEFERRED.
CLASS lcl_main_tree_toolbar_event DEFINITION DEFERRED.
CLASS lcl_main_tree_toolbar_handler DEFINITION DEFERRED.

&quot; Classes affichage
CLASS lcl_main_tree DEFINITION DEFERRED.
CLASS lcl_attribute_detail DEFINITION DEFERRED.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***
TYPES :
  BEGIN OF ts_attribute_detail,
    attribute_name           TYPE ztec_t_hc_attr-attribute_name,
    attribute_key1           TYPE ztec_t_hc_attr-attribute_key1,
    attribute_key2           TYPE ztec_t_hc_attr-attribute_key2,
    attribute_key3           TYPE ztec_t_hc_attr-attribute_key3,
    attribute_key4           TYPE ztec_t_hc_attr-attribute_key4,
    attribute_as_range       TYPE ztec_t_hc_attr-attribute_as_range,
    attribute_as_code_source TYPE ztec_t_hc_attr-attribute_as_code_source,
    cancel                   TYPE flag,
*    s_range_first_line TYPE LINE OF tt_r_ranges,
*    r_ranges           TYPE         tt_r_ranges,
  END OF   ts_attribute_detail.

TYPES : tt_r_ranges TYPE RANGE OF ztec_t_hc_attr-attribute_low.

TYPES :
  BEGIN OF ts_attribute_detail_ref,
    attribute_name           TYPE REF TO ztec_t_hc_attr-attribute_name,
    attribute_key1           TYPE REF TO ztec_t_hc_attr-attribute_key1,
    attribute_key2           TYPE REF TO ztec_t_hc_attr-attribute_key2,
    attribute_key3           TYPE REF TO ztec_t_hc_attr-attribute_key3,
    attribute_key4           TYPE REF TO ztec_t_hc_attr-attribute_key4,
    attribute_as_range       TYPE REF TO ztec_t_hc_attr-attribute_as_range,
    attribute_as_code_source TYPE REF TO ztec_t_hc_attr-attribute_as_code_source,
  END OF   ts_attribute_detail_ref.

TYPES :
  BEGIN OF ts_transport_target,
    system         TYPE syst_sysid,
    mandant        TYPE sy-mandt,
    cancel         TYPE xsdboolean,
    transport_all  TYPE xsdboolean,
    transport_node TYPE lvc_nkey,
  END OF   ts_transport_target.


***------------------------------------------------------------------***
**                           CONSTANTES                               **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                             RANGES                                 **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
TABLES: sscrfields.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
DATA : gs_attribute_detail TYPE ts_attribute_detail.
DATA : gs_transport_target TYPE ts_transport_target.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
DATA : go_main TYPE REF TO lcl_main.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***</source>
 </PROG>
 <PROG NAME="ZTEC_HARDCODE_F01" VARCL="X" SUBC="I" LEVL="740" RSTAT="K" RMAND="400" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Include ZTEC_CUSTOMIZING_F01" LENGTH="28 "/>
   </language>
  </textPool>
  <source>*----------------------------------------------------------------------*
***INCLUDE ZTEC_HARDCODE_F01
*----------------------------------------------------------------------*

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0101  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0101 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation barre d&apos;Ã©tat
  &quot; -----------------------------------------------------------

  SET PF-STATUS &apos;PF_STATUS_0101&apos;.                           &quot;#EC NOTEXT
  SET TITLEBAR &apos;TITLEBAR_0101&apos; WITH go_main-&gt;mo_hardcode_maintain-&gt;mv_repid. &quot;#EC NOTEXT

ENDMODULE.                 &quot; STATUS_0101  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0101  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0101 INPUT.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
  DATA :
    lv_answer TYPE c LENGTH 1.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : lv_answer.

  &quot; -----------------------------------------------------------
  &quot; Gestion Action Utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;action utilisateur
  CASE sy-ucomm.

    WHEN &apos;BACK&apos;                                             &quot;#EC NOTEXT
      OR &apos;EXIT&apos;                                             &quot;#EC NOTEXT
      OR &apos;LEAVE&apos;.                                           &quot;#EC NOTEXT
      &quot; Retour / ArrÃªt
      IF go_main-&gt;is_changed( ) EQ abap_true.
        &quot; DonnÃ©es modifiÃ©es non persistÃ©e
        &quot;&quot;  --&gt; Affiche popup confirmation
        CALL FUNCTION &apos;POPUP_TO_CONFIRM_DATA_LOSS&apos;
          EXPORTING
            defaultoption = &apos;J&apos;                     &quot;#EC NOTEXT
            titel         = text-dlo
            start_column  = 5 &quot;#EC NOTEXT
            start_row     = 6 &quot;#EC NOTEXT
          IMPORTING
            answer        = lv_answer.
        IF lv_answer EQ &apos;J&apos;.                                &quot;#EC NOTEXT
          &quot; Oui
          &quot;&quot;  --&gt; Sauvegarde
          go_main-&gt;save( ).

        ENDIF.

      ENDIF.

      CASE sy-ucomm.

        WHEN &apos;LEAVE&apos;.                                       &quot;#EC NOTEXT
          &quot;  ArrÃªt
          &quot;&quot;  --&gt; Interruption du traitement
          LEAVE PROGRAM.

        WHEN &apos;CANC&apos;. ##NO_TEXT
          &quot; Interrompre
          &quot;&quot;  --&gt; Ne rien faire

        WHEN OTHERS.
          &quot; Retour
          &quot;&quot;  --&gt; Retourne Ã  l&apos;Ã©cran prÃ©cÃ©dent
          LEAVE TO SCREEN 0.                                &quot;#EC NOTEXT

      ENDCASE.

    WHEN &apos;SAVE&apos;.                                            &quot;#EC NOTEXT
      &quot; Sauvegarde
      &quot;&quot;  --&gt; Sauvegarde
      go_main-&gt;save( ).

    WHEN OTHERS.
      &quot; Autres

  ENDCASE.

ENDMODULE.                 &quot; USER_COMMAND_0101  INPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0201  OUTPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0201 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation barre d&apos;Ã©tat
  &quot; -----------------------------------------------------------

*  SET PF-STATUS &apos;PF_STATUS_0201&apos;.
  SET TITLEBAR &apos;TITLEBAR_0201&apos; WITH gs_attribute_detail-attribute_name. &quot;#EC NOTEXT

  &quot; -----------------------------------------------------------
  &quot; Initialisation focus
  &quot; -----------------------------------------------------------

  SET CURSOR FIELD &apos;BTN_VALID&apos;.                             &quot;#EC NOTEXT

  &quot; -----------------------------------------------------------
  &quot; Modification des donnÃ©es affichÃ©es
  &quot; -----------------------------------------------------------

  &quot; Modification de l&apos;affichage
  LOOP AT SCREEN.

    &quot; Suivant le groupe
    CASE screen-group1.

      WHEN &apos;RAN&apos;.                                           &quot;#EC NOTEXT
        &quot; Range
        &quot;&quot;  --&gt; Affiche / Masque les valeurs de sÃ©lection multiple
        IF gs_attribute_detail-attribute_as_range EQ abap_true.
          &quot; Valeur multiple
          &quot;&quot;  --&gt; Affiche zone de saisie
          screen-active    = 1.
          screen-invisible = 0.

        ELSE.
          &quot; Pas de valeurs multiple
          &quot;&quot;  --&gt; Masque zone de saisie
          screen-active    = 0.
          screen-invisible = 1.

        ENDIF.

      WHEN &apos;COS&apos;.                                           &quot;#EC NOTEXT
        &quot; Code Source
        &quot;&quot;  --&gt; Affiche / Masque le bouton d&apos;Edition
        IF gs_attribute_detail-attribute_as_code_source EQ abap_true.
          &quot; Code Source
          &quot;&quot;  --&gt; Affiche zone de saisie
          screen-active    = 1.
          screen-invisible = 0.

        ELSE.
          &quot; Pas de Code Source
          &quot;&quot;  --&gt; Masque zone de saisie
          screen-active    = 0.
          screen-invisible = 1.

        ENDIF.

      WHEN OTHERS.
        &quot; Autres
        CONTINUE.

    ENDCASE.

    &quot; Modification de l&apos;Ã©cran
    MODIFY SCREEN.

  ENDLOOP.

ENDMODULE.                 &quot; STATUS_0201  OUTPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0201  INPUT
*&amp;---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0201 INPUT.

***------------------------------------------------------------------***
**                             RANGES                                 **
***------------------------------------------------------------------***
  DATA :
    lor_range TYPE REF TO tt_r_ranges.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
        lot_code_source TYPE REF TO stringtab.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  CLEAR : gs_attribute_detail-cancel.

  &quot; Suivant l&apos;action utilisateur
  CASE sy-ucomm.

    WHEN &apos;BACK&apos;                                             &quot;#EC NOTEXT
      OR &apos;EXIT&apos;                                             &quot;#EC NOTEXT
      OR &apos;VALID&apos;.                                           &quot;#EC NOTEXT
      &quot; Retour
      &quot;&quot;  --&gt; Modification avant sortie
      IF gs_attribute_detail-attribute_as_range EQ abap_false.
        &quot; Pas de Valeurs multiple
        &quot;&quot;  --&gt; Supprime les valeurs saisie
        lor_range = lcl_attribute_detail=&gt;instance_get( )-&gt;range_value_get( ).
        FREE : lor_range-&gt;*.

      ENDIF.

      IF gs_attribute_detail-attribute_as_code_source EQ abap_false.
        &quot; Pas de Code Source
        &quot;&quot;  --&gt; Supprime Code Saisie
        lot_code_source = lcl_attribute_detail=&gt;instance_get( )-&gt;code_source_get( ).
        FREE : lot_code_source-&gt;*.

      ENDIF.

      &quot;&quot;  --&gt; Retourne Ã  l&apos;Ã©cran prÃ©cÃ©dent
      LEAVE TO SCREEN 0.

    WHEN &apos;CANCEL&apos;                                           &quot;#EC NOTEXT
      OR &apos;LEAVE&apos;.                                           &quot;#EC NOTEXT
      &quot; Annulation
      &quot;&quot;  --&gt; Appose tÃ©moin d&apos;annulation
      gs_attribute_detail-cancel = abap_true.

      &quot;&quot;  --&gt; Retourne Ã  l&apos;Ã©cran prÃ©cÃ©dent
      LEAVE TO SCREEN 0.

    WHEN &apos;RANGE_DIS&apos;.                                       &quot;#EC NOTEXT
      &quot; Range - Modification affichage

    WHEN &apos;SOURCE_DIS&apos;.                                      &quot;#EC NOTEXT
      &quot; Code Source - Modification affichage

    WHEN &apos;SAVE&apos;.                                            &quot;#EC NOTEXT
      &quot; Sauvegarde les modifications
      go_main-&gt;save( ).

    WHEN &apos;RANGE_SET&apos;.                                       &quot;#EC NOTEXT
      &quot; Ouverture Ã©dition range
      lor_range = lcl_attribute_detail=&gt;instance_get( )-&gt;range_value_get( ).

      CALL FUNCTION &apos;COMPLEX_SELECTIONS_DIALOG&apos;
        EXPORTING
          title             = text-csd
          lower_case        = abap_false
          no_interval_check = abap_true
          just_display      = abap_false
        TABLES
          range             = lor_range-&gt;*
        EXCEPTIONS
          cancelled         = 1
          OTHERS            = 2.

    WHEN &apos;SOURCE_SET&apos;.                                      &quot;#EC NOTEXT
      TRY.
          &quot; Ouverture Edition Code Libre
          lot_code_source = lcl_attribute_detail=&gt;instance_get( )-&gt;code_source_get( ).
          CALL FUNCTION &apos;ENH_SCPCONT_SOURCE_EDITOR&apos;
            EXPORTING
              im_changemode = abap_true
            CHANGING
              ch_text       = lot_code_source-&gt;*.

        CATCH cx_enh_canceled.
          &quot; Une erreur est survenue

      ENDTRY.

    WHEN OTHERS.
      &quot; Autre

  ENDCASE.

ENDMODULE.                 &quot; USER_COMMAND_0201  INPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0301  OUTPUT
*&amp;---------------------------------------------------------------------*
*       0301 - PBO
*----------------------------------------------------------------------*
MODULE status_0301 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation barre d&apos;Ã©tat
  &quot; -----------------------------------------------------------

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0301  INPUT
*&amp;---------------------------------------------------------------------*
*       0301 - PAI
*----------------------------------------------------------------------*
MODULE user_command_0301.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Suivant l&apos;action utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;action utilisateur
  CASE sy-ucomm.

    WHEN &apos;BACK&apos;                                             &quot;#EC NOTEXT
      OR &apos;EXIT&apos;.                                            &quot;#EC NOTEXT
      &quot; Retour
      &quot;&quot;  --&gt; Retourne Ã  l&apos;Ã©cran prÃ©cÃ©dent
      LEAVE TO SCREEN 0.

    WHEN &apos;TRANSPORT&apos;.                                       &quot;#EC NOTEXT
      &quot; Transporter

    WHEN &apos;REFRESH&apos;.                                         &quot;#EC NOTEXT
      &quot; Rafrachir


    WHEN &apos;CANCEL&apos;.                                          &quot;#EC NOTEXT
      &quot; Annuler
      &quot;&quot;  --&gt; Retour Ã  l&apos;Ã©cran prÃ©cÃ©dent
      LEAVE TO SCREEN 0.

    WHEN OTHERS.
      &quot; Autres

  ENDCASE.

ENDMODULE.                 &quot; USER_COMMAND_0302  INPUT

*&amp;---------------------------------------------------------------------*
*&amp;      Module  STATUS_0302  OUTPUT
*&amp;---------------------------------------------------------------------*
*       0302 - PBO
*----------------------------------------------------------------------*
MODULE status_0302 OUTPUT.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Initialisation barre d&apos;Ã©tat
  &quot; -----------------------------------------------------------

  SET PF-STATUS &apos;PF_STATUS_0302&apos;.

ENDMODULE.

*&amp;---------------------------------------------------------------------*
*&amp;      Module  USER_COMMAND_0302  INPUT
*&amp;---------------------------------------------------------------------*
*       0302 - PAI
*----------------------------------------------------------------------*
MODULE user_command_0302.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Suivant l&apos;action utilisateur
  &quot; -----------------------------------------------------------

  &quot; Suivant l&apos;action utilisateur
  CASE sy-ucomm.

    WHEN &apos;TRANSPORT&apos;.                                       &quot;#EC NOTEXT
      &quot; Transporter
      &quot;&quot;  --&gt; ContrÃ´le
      IF gs_transport_target-system  IS INITIAL
      OR gs_transport_target-mandant IS INITIAL.
        &quot; Mandant / SystÃ¨me obligatoire
        IF gs_transport_target-mandant IS INITIAL.
          &quot; Mandant obligatoire
          MESSAGE s010(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        ELSE.
          &quot; SystÃ¨me obligatoire
          MESSAGE s009(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        ENDIF.

      ELSEIF sy-mandt EQ gs_transport_target-mandant
         AND sy-sysid EQ gs_transport_target-system.
        &quot; Environnement courant = Environnement cible
        MESSAGE s011(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_warning.

      ELSE.
        &quot;&quot;  --&gt; Transport de tous les Hardcodes
        gs_transport_target-transport_all = abap_true.

        &quot;&quot;  --&gt; Retour Ã  l&apos;Ã©cran prÃ©cÃ©dent
        LEAVE TO SCREEN 0.

      ENDIF.

    WHEN &apos;BACK&apos;  OR &apos;EXIT&apos; OR &apos;ECAN&apos;                        &quot;#EC NOTEXT
      OR &apos;LEAVE&apos; OR &apos;CANCEL&apos;.                               &quot;#EC NOTEXT
      &quot; Annuler
      &quot;&quot;  --&gt; Appose tÃ©moin annulation
      CLEAR : gs_transport_target.
      gs_transport_target-cancel = abap_true.

      &quot;&quot;  --&gt; Retour Ã  l&apos;Ã©cran prÃ©cÃ©dent
      LEAVE TO SCREEN 0.

    WHEN OTHERS.
      &quot; Autres

  ENDCASE.

ENDMODULE.                 &quot; USER_COMMAND_0302  INPUT


*&amp;---------------------------------------------------------------------*
*&amp;      Module  VALUE_HELP_SYSTEM_TARGET  INPUT
*&amp;---------------------------------------------------------------------*
*       SystÃ¨me Cible - Aide Ã  la Recherche
*----------------------------------------------------------------------*
MODULE value_help_system_target.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
  DATA :
    lt_fields   TYPE wlf_tt_help_value,
    lt_valuetab TYPE char10_t.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Aide Ã  la Recherche SystÃ¨me
  &quot; -----------------------------------------------------------

  &quot; Initialisation Valeur Disponible
  lt_valuetab = VALUE #(
    ( &apos;DE1&apos; ) ( &apos;IE1&apos; )                                     &quot;#EC NOTEXT
    ( &apos;RE1&apos; ) ( &apos;PE1&apos; )                                     &quot;#EC NOTEXT
  ).

  &quot; Initialisation Champs
  lt_fields = VALUE #(
    (
      tabname    = &apos;ZTBDESTRFC&apos;                             &quot;#EC NOTEXT
      fieldname  = &apos;ZEDTARGSYS&apos;                             &quot;#EC NOTEXT
      selectflag = abap_true
    )
  ).

  &quot; Appel PopUp SÃ©lection
  CALL FUNCTION &apos;HELP_VALUES_GET_WITH_TABLE&apos;
    EXPORTING
      display                       = abap_false
      fieldname                     = &apos;SYSID&apos; &quot;#EC NOTEXT
      tabname                       = &apos;SY&apos; &quot;#EC NOTEXT
      show_all_values_at_first_time = abap_true
    IMPORTING
      select_value                  = gs_transport_target-system
    TABLES
      fields                        = lt_fields
      valuetab                      = lt_valuetab
    EXCEPTIONS
      field_not_in_ddic             = 1
      more_then_one_selectfield     = 2
      no_selectfield                = 3
      OTHERS                        = 4.
  IF sy-subrc NE 0.
    &quot; Erreur appel Aide Ã  la Recherche
    &quot;&quot;  --&gt; ArrÃªt du traitement
    CLEAR : gs_transport_target-system.
    RETURN.

  ENDIF.

ENDMODULE.                 &quot; VALUE_HELP_SYSTEM_TARGET  INPUT</source>
 </PROG>
 <PROG NAME="ZTEC_HARDCODE_C02" VARCL="X" SUBC="I" LEVL="740" RMAND="400" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Include dÃ©claration implÃ©mentation classes" LENGTH="42 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZTEC_HARDCODE_C02
*&amp;---------------------------------------------------------------------*


*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_TOOLBAR IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_toolbar IMPLEMENTATION.

  METHOD factory.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : ro_instance.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;instance
    &quot; -----------------------------------------------------------

    &quot; Suivant l&apos;identifiant de la classe
    CASE iv_id.

      WHEN lcl_main_tree_toolbar_event=&gt;my_id.
        &quot; Toolbar Principale
        CREATE OBJECT ro_instance TYPE lcl_main_tree_toolbar_event
          EXPORTING
            io_toolbar = io_toolbar.

      WHEN OTHERS.
        &quot; Autre
        RAISE EXCEPTION TYPE cx_sy_unknown_type.

    ENDCASE.

    &quot; -----------------------------------------------------------
    &quot; Souscription aux Ã©vÃ¨nements
    &quot; -----------------------------------------------------------

    &quot; Handler  Aide Ã  la recherche
    SET HANDLER ro_instance-&gt;handler_function_selected FOR ro_instance-&gt;mo_toolbar.

  ENDMETHOD.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_toolbar = io_toolbar.

  ENDMETHOD.

  METHOD handler_function_selected.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

ENDCLASS.

*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_TREE IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_tree IMPLEMENTATION.

  METHOD factory.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_events TYPE cntl_simple_events.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_event TYPE cntl_simple_event.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : ro_instance.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;instance
    &quot; -----------------------------------------------------------

    &quot; Suivant l&apos;identifiant de la classe
    CASE iv_id.

      WHEN lcl_main_tree_event=&gt;my_id.
        &quot; Principale
        CREATE OBJECT ro_instance TYPE lcl_main_tree_event
          EXPORTING
            io_main         = io_main
            io_alv_tree     = io_alv_tree
            io_display_data = REF #( it_display_data ).

      WHEN OTHERS.
        &quot; Autre
        RAISE EXCEPTION TYPE cx_sy_unknown_type.

    ENDCASE.

    &quot; -----------------------------------------------------------
    &quot; Souscription aux Ã©vÃ¨nements Externe
    &quot; -----------------------------------------------------------

    &quot; Handler Clique Boutton
    SET HANDLER ro_instance-&gt;handler_button_click FOR ro_instance-&gt;mo_alv_tree.

    &quot; Handler  Aide Ã  la recherche
    SET HANDLER ro_instance-&gt;handler_item_double_click FOR ro_instance-&gt;mo_alv_tree.

    &quot; -----------------------------------------------------------
    &quot; Initialisation table des Ã©vÃ¨nements
    &quot; -----------------------------------------------------------

    ro_instance-&gt;mo_alv_tree-&gt;get_registered_events(
      IMPORTING
        events     = lt_events
      EXCEPTIONS
        cntl_error = 1
        OTHERS     = 2
    ).

    &quot; EvÃ¨nement Clique Boutton
    ls_event-eventid = cl_gui_column_tree=&gt;eventid_button_click.
    APPEND ls_event TO lt_events.
    &quot; EvÃ¨nement double clique
    ls_event-eventid = cl_gui_column_tree=&gt;eventid_item_double_click.
    APPEND ls_event TO lt_events.

    &quot; -----------------------------------------------------------
    &quot; Souscription aux Ã©vÃ¨nements Interne
    &quot; -----------------------------------------------------------

    CALL METHOD ro_instance-&gt;mo_alv_tree-&gt;set_registered_events
      EXPORTING
        events                    = lt_events
      EXCEPTIONS
        cntl_error                = 1
        cntl_system_error         = 2
        illegal_event_combination = 3.

  ENDMETHOD.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_main         = io_main.
    me-&gt;mo_alv_tree     = io_alv_tree.
    me-&gt;mt_display_data = io_display_data.

  ENDMETHOD.

  METHOD handler_button_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_item_double_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

ENDCLASS.   &quot;LCL_GENERIC_EVENT_TREE

*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_GRID IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_grid IMPLEMENTATION.

  METHOD factory.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : ro_instance.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;instance
    &quot; -----------------------------------------------------------

    &quot; Suivant l&apos;identifiant de la classe
    CASE iv_id.

*      WHEN lcl_attribute_range_event=&gt;my_id.
*        &quot; Attribut - DÃ©tail
*        CREATE OBJECT ro_instance TYPE lcl_attribute_range_event
*          EXPORTING
*            io_main         = io_main
*            io_alv_grid     = io_alv_grid
*            io_display_data = REF #( it_display_data ).

      WHEN OTHERS.
        &quot; Autre
        RAISE EXCEPTION TYPE cx_sy_unknown_type.

    ENDCASE.

    &quot; -----------------------------------------------------------
    &quot; Souscription aux Ã©vÃ¨nements
    &quot; -----------------------------------------------------------

    &quot; Handler  Aide Ã  la recherche
    SET HANDLER ro_instance-&gt;handler_onf4 FOR ro_instance-&gt;mo_alv_grid.

    &quot; Handler Clique bouton
    SET HANDLER ro_instance-&gt;handler_button_click FOR ro_instance-&gt;mo_alv_grid.

    &quot; Handler Double clique
    SET HANDLER ro_instance-&gt;handler_double_click FOR ro_instance-&gt;mo_alv_grid.

    &quot; Handler clique HotSpot
    SET HANDLER ro_instance-&gt;handler_hotspot_click FOR ro_instance-&gt;mo_alv_grid.

    &quot; Handler Modification des donnÃ©es
    SET HANDLER ro_instance-&gt;handler_data_changed FOR ro_instance-&gt;mo_alv_grid.

    &quot; Handler Fin modification des donnÃ©es
    SET HANDLER ro_instance-&gt;handler_data_changed_finished FOR ro_instance-&gt;mo_alv_grid.

  ENDMETHOD.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_main         = io_main.
    me-&gt;mo_alv_grid     = io_alv_grid.
    me-&gt;mt_display_data = io_display_data.

  ENDMETHOD.

  METHOD handler_button_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_data_changed.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_data_changed_finished.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_double_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_hotspot_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

  METHOD handler_onf4.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; A implÃ©menter dans la classe fille

  ENDMETHOD.

ENDCLASS.

*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_TOOLBAR_EVENT IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_toolbar_event IMPLEMENTATION.

  METHOD handler_function_selected.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Traitement suite Ã  clique sur Toolbar
    &quot; -----------------------------------------------------------

    &quot; Suivant le code fonction
    CASE fcode.

      WHEN me-&gt;mc_fc_copy.
        &quot; Copier
        RAISE EVENT on_copy.

      WHEN me-&gt;mc_fc_transport.
        &quot; Transporter
        RAISE EVENT on_transport
          EXPORTING
            iv_advanced_mode = abap_false.

      WHEN me-&gt;mc_fc_update_shm.
        &quot; Mettre Ã  Jour la SHM
        RAISE EVENT on_update_shm.

      WHEN me-&gt;mc_fc_primary_set.
        &quot; Passe la version en Primaire
        RAISE EVENT on_version_primary_set.

      WHEN me-&gt;mc_fc_version_create.
        &quot; CrÃ©ation d&apos;une nouvelle version
        RAISE EVENT on_version_create.

      WHEN me-&gt;mc_fc_parameter_create.
        &quot; ParamÃ¨tre - CrÃ©ation
        RAISE EVENT on_parameter_create.

      WHEN me-&gt;mc_fc_attribute_create.
        &quot; Attribut - CrÃ©ation
        RAISE EVENT on_attribute_create.

      WHEN me-&gt;mc_fc_delete.
        &quot; Suppression
        RAISE EVENT on_delete.

      WHEN me-&gt;mc_fc_modify.
        &quot; ParamÃ¨tre - Edition
        RAISE EVENT on_modify.

      WHEN OTHERS.
        &quot; Autres

    ENDCASE.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_EVENT IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_event IMPLEMENTATION.

  METHOD handler_button_click.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; A ImplÃ©menter
    &quot; -----------------------------------------------------------


  ENDMETHOD.


  METHOD handler_item_double_click.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc TYPE sy-subrc.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_mard_key TYPE lgort_key.

**------------------------------------------------------------------***
*                          FIELD-SYMBOLS                             **
**------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_value&gt;   TYPE                 any,
      &lt;lfs_s_table&gt; TYPE                 any,
      &lt;lfs_t_table&gt; TYPE STANDARD TABLE.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation Clef
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration de la ligne sÃ©lectionnÃ©e
    ASSIGN me-&gt;mt_display_data-&gt;* TO &lt;lfs_t_table&gt;.
    READ TABLE &lt;lfs_t_table&gt; INDEX node_key ASSIGNING &lt;lfs_s_table&gt;.
    IF sy-subrc NE 0.
      &quot; Aucune donnÃ©es
      RETURN.

    ENDIF.

    &quot; Initialisation Clef
    MOVE-CORRESPONDING &lt;lfs_s_table&gt; TO ls_mard_key.
*
    &quot; -----------------------------------------------------------
    &quot; Gestion Ã©vÃ¨nement double clique
    &quot; -----------------------------------------------------------

    &quot; Suivant la colonne sÃ©lectionnÃ©e
    CASE fieldname.

      WHEN OTHERS.
        &quot; Autre colone
        &quot;&quot;  --&gt; Ne rien faire
        RETURN.

    ENDCASE.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main IMPLEMENTATION.

  METHOD initialization.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;instance
    &quot; -----------------------------------------------------------

    CREATE OBJECT ro_instance
      EXPORTING
        iov_repid     = REF #( p_repid )
        iov_load_work = REF #( p_work ).

    &quot; -----------------------------------------------------------
    &quot; Initialisation boutons
    &quot; -----------------------------------------------------------

    &quot; Supprimer
    sscrfields-functxt_01 = VALUE smp_dyntxt(
      icon_id   = text-del
      quickinfo = text-tde
    ).

    &quot; Copier
    sscrfields-functxt_02 = VALUE smp_dyntxt(
      icon_id   = text-cop
      quickinfo = text-tcy
    ).

    &quot; Transporter
    sscrfields-functxt_03 = VALUE smp_dyntxt(
      icon_id   = text-tra
      quickinfo = text-ttr
    ).

    &quot; MÃ J SHM
    sscrfields-functxt_04 = VALUE smp_dyntxt(
      icon_id   = text-shm
      quickinfo = text-tsh
    ).

  ENDMETHOD.

  METHOD is_changed.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; VÃ©rification si des donnÃ©es ont Ã©tÃ© modifiÃ©es
    &quot; -----------------------------------------------------------

    rv_changed = me-&gt;mo_hardcode_maintain-&gt;is_changed( ).

  ENDMETHOD.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des attributs
    &quot; -----------------------------------------------------------

    &quot; Initialisation critÃ¨res de sÃ©lection
    me-&gt;ms_selection_criteria-ov_repid     = iov_repid.
    me-&gt;ms_selection_criteria-ov_load_work = iov_load_work.

    &quot; Initialisation instance
    CREATE OBJECT me-&gt;ms_process_instance-main_tree
      EXPORTING
        io_main = me.

  ENDMETHOD.

  METHOD process.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_hardcode TYPE zvtec_t_hc_tt.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation instance de Mise Ã  Jour des Hardcodes
    &quot; -----------------------------------------------------------

    CREATE OBJECT me-&gt;mo_hardcode_maintain
      EXPORTING
        iv_repid = me-&gt;ms_selection_criteria-ov_repid-&gt;*.

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es
    &quot; -----------------------------------------------------------

    me-&gt;mo_hardcode_maintain-&gt;data_get( IMPORTING et_join = lt_hardcode ).
    IF lt_hardcode[] IS INITIAL.
      &quot; Aucune donnÃ©es
      TRY.
          &quot;&quot;  --&gt; CrÃ©ation Version par dÃ©fault
          me-&gt;mo_hardcode_maintain-&gt;version_add(
              iv_version_id = zcl_hardcode=&gt;mc_version_default
              iv_is_primary = abap_true
          ).

          &quot;&quot;  --&gt; Rechargement des donnÃ©es
          me-&gt;mo_hardcode_maintain-&gt;data_get( IMPORTING et_join = lt_hardcode ).

        CATCH zcx_hardcode_maintain.
          &quot; Erreur lors de l&apos;ajout de la Version
          RETURN.

      ENDTRY.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Affichage des donnÃ©es
    &quot; -----------------------------------------------------------

    me-&gt;ms_process_instance-main_tree-&gt;process(
      iv_repid    = me-&gt;ms_selection_criteria-ov_repid-&gt;*
      it_hardcode = lt_hardcode
      iv_event    = iv_event
   ).

  ENDMETHOD.

  METHOD save.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Sauvegarde les donnÃ©es
        &quot; -----------------------------------------------------------

        &quot; Sauvegarde les donnÃ©es
        me-&gt;mo_hardcode_maintain-&gt;save_to_db( abap_true ).

        TRY.
            IF zcl_hardcode_shm=&gt;hardcode_is_load( me-&gt;ms_selection_criteria-ov_repid-&gt;* ) EQ abap_true.
              &quot; Hardcode prÃ©sent dans la SHM
              &quot;&quot;  --&gt; Pousse les modifications dans la SHM
              zcl_hardcode_shm=&gt;get_instance( me-&gt;ms_selection_criteria-ov_repid-&gt;* )-&gt;hardcode_reload( ).

            ENDIF.

          CATCH zcx_hardcode_shm.
            &quot; Une erreur est survenue // Tant pis ...

        ENDTRY.

        &quot; Affiche message de succÃ¨s
        MESSAGE s462(ab).

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD call_popup_input_simple.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : ev_subrc.

    &quot; -----------------------------------------------------------
    &quot; Affichage PopUp saisi
    &quot; -----------------------------------------------------------

    CALL FUNCTION &apos;UR_CF_POPUP_TEXT_INPUT&apos;
      EXPORTING
        i_title   = CONV string( iv_title )
        i_text    = CONV string( iv_text )
      IMPORTING
        e_text    = rv_input
      EXCEPTIONS
        cancelled = 1
        OTHERS    = 2.
    IF sy-subrc NE 0.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Retourne code erreur
      MESSAGE w397(0d).
      ev_subrc = 4.

    ENDIF.

  ENDMETHOD.

  METHOD at_selection_screen.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Suivant l&apos;action utilisateur
    &quot; -----------------------------------------------------------

    CASE sy-ucomm.

      WHEN &apos;FC01&apos;.                                          &quot;#EC NOTEXT
        &quot; Suppression
        me-&gt;programm_deletion( ).

      WHEN &apos;FC02&apos;.                                          &quot;#EC NOTEXT
        &quot; Copier
        me-&gt;programm_copy( ).

      WHEN &apos;FC03&apos;.                                          &quot;#EC NOTEXT
        &quot; Transporter
        me-&gt;programm_transport( ).

      WHEN &apos;FC04&apos;.                                          &quot;#EC NOTEXT
        &quot; Mettre Ã  Jour la SHM
        me-&gt;programm_update_shm( ).

      WHEN OTHERS.
        &quot; Autres

    ENDCASE.

  ENDMETHOD.

  METHOD transport_hardcode.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; SÃ©lection des donnÃ©es
    &quot; -----------------------------------------------------------


  ENDMETHOD.

  METHOD transport_request_create.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_e071k TYPE e071k_t,
      lt_ko200 TYPE skwf_ko200s.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_e071k TYPE e071k,
      ls_ko200 TYPE ko200.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_task  TYPE trkorr.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : es_return.

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration des Clefs pour suppression
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es interface CTS
    CLEAR : ls_ko200.
    ls_ko200-pgmid    = &apos;R3TR&apos;.                             &quot;#EC NOTEXT
    ls_ko200-object   = &apos;TABU&apos;.                             &quot;#EC NOTEXT
    ls_ko200-as4pos   = &apos;0&apos;.                                &quot;#EC NOTEXT
    ls_ko200-objfunc  = &apos;K&apos;.                                &quot;#EC NOTEXT

    IF NOT it_vers_guid_to_del[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des Versions Ã  Supprimer
      &quot; -----------------------------------------------------------

      &quot; Ajout table des Versions
      ls_ko200-obj_name = &apos;ZTEC_T_HC_VERS&apos;.                 &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs Ã  transporter
      LOOP AT it_vers_guid_to_del ASSIGNING FIELD-SYMBOL(&lt;lfs_s_guid&gt;).

        CLEAR : ls_e071k.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_VERS&apos;.             &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_VERS&apos;.             &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }|.
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    IF NOT it_param_guid_to_del[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des ParamÃ¨tres
      &quot; -----------------------------------------------------------

      &quot; Ajout table des ParamÃ¨tres
      ls_ko200-obj_name = &apos;ZTEC_T_HC_PARAM&apos;.                &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs de ParamÃ¨tres Ã  supprimer
      LOOP AT it_param_guid_to_del ASSIGNING &lt;lfs_s_guid&gt;.

        CLEAR : ls_e071k.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_PARAM&apos;.            &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_PARAM&apos;.            &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }|.
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    IF NOT it_attr_guid_to_del[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des Attributs Ã  Supprimer
      &quot; -----------------------------------------------------------

      &quot; Ajout table des Attributs
      ls_ko200-obj_name = &apos;ZTEC_T_HC_ATTR&apos;.                 &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs d&apos;Attribut Ã  supprimer
      LOOP AT it_attr_guid_to_del ASSIGNING &lt;lfs_s_guid&gt;.

        CLEAR : ls_e071k.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_ATTR&apos;.             &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_ATTR&apos;.             &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }|. &quot;#EC NOTEXT
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration des Clefs Ã  transporter
    &quot; -----------------------------------------------------------

    &quot; Initialisation des donnÃ©es interface CTS
    CLEAR : ls_ko200.
    ls_ko200-pgmid    = &apos;R3TR&apos;.                             &quot;#EC NOTEXT
    ls_ko200-object   = &apos;TABU&apos;.                             &quot;#EC NOTEXT
    ls_ko200-as4pos   = &apos;0&apos;.                                &quot;#EC NOTEXT
    ls_ko200-objfunc  = &apos;K&apos;.                                &quot;#EC NOTEXT

    IF NOT it_vers_guid_to_create[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des Versions Ã  CrÃ©er
      &quot; -----------------------------------------------------------

      &quot; Ajout table des Versions
      ls_ko200-obj_name = &apos;ZTEC_T_HC_VERS&apos;.                 &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs Ã  transporter
      LOOP AT it_vers_guid_to_create ASSIGNING &lt;lfs_s_guid&gt;.

        CLEAR : ls_e071k.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_VERS&apos;.             &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_VERS&apos;.             &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }|.
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    IF NOT it_param_guid_to_create[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des ParamÃ¨tres Ã  CrÃ©er
      &quot; -----------------------------------------------------------

      &quot; Ajout table des ParamÃ¨tres
      ls_ko200-obj_name = &apos;ZTEC_T_HC_PARAM&apos;.                &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs Ã  transporter
      LOOP AT it_param_guid_to_create ASSIGNING &lt;lfs_s_guid&gt;.

        CLEAR : ls_e071k.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_PARAM&apos;.            &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_PARAM&apos;.            &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }|.
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    IF NOT it_attr_guid_to_create[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout des Attributs Ã  CrÃ©er
      &quot; -----------------------------------------------------------

      &quot; Ajout table des Attributs
      ls_ko200-obj_name = &apos;ZTEC_T_HC_ATTR&apos;.                 &quot;#EC NOTEXT
      APPEND ls_ko200 TO lt_ko200.

      &quot; Constitution des clefs Ã  transporter
      LOOP AT it_attr_guid_to_create ASSIGNING &lt;lfs_s_guid&gt;.

        &quot; Initialisation des donnÃ©es OT
        ls_e071k-pgmid      = &apos;R3TR&apos;.                       &quot;#EC NOTEXT
        ls_e071k-object     = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-as4pos     = &apos;0&apos;.                          &quot;#EC NOTEXT
        ls_e071k-objfunc    = &apos;U&apos;.                          &quot;#EC NOTEXT
        ls_e071k-mastertype = &apos;TABU&apos;.                       &quot;#EC NOTEXT
        ls_e071k-objname    = &apos;ZTEC_T_HC_ATTR&apos;.             &quot;#EC NOTEXT
        ls_e071k-mastername = &apos;ZTEC_T_HC_ATTR&apos;.             &quot;#EC NOTEXT
        ls_e071k-tabkey     = |{ sy-mandt }{ &lt;lfs_s_guid&gt; }*|. &quot;#EC NOTEXT
        APPEND ls_e071k TO lt_e071k.

      ENDLOOP.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le
    &quot; -----------------------------------------------------------

    IF lt_ko200[] IS INITIAL
    OR lt_e071k[] IS INITIAL.
      &quot; Aucune donnÃ©es Ã  transporter
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation / SÃ©lection de l&apos;OT
    &quot; -----------------------------------------------------------

    &quot; ContrÃ´le les Ã©lÃ¨ments
    CALL FUNCTION &apos;TR_OBJECTS_CHECK&apos;
      EXPORTING
        iv_no_show_option = abap_true
      IMPORTING
        we_order          = rv_order
        we_task           = lv_task
      TABLES
        wt_ko200          = lt_ko200
        wt_e071k          = lt_e071k
      EXCEPTIONS
        OTHERS            = 1.
    IF sy-subrc EQ 0.
      &quot; SÃ©lection / CrÃ©ation de l&apos;OT
      CALL FUNCTION &apos;TR_OBJECTS_INSERT&apos;
        EXPORTING
          wi_order          = rv_order
          iv_no_show_option = abap_true
        IMPORTING
          we_order          = rv_order
          we_task           = lv_task
        TABLES
          wt_ko200          = lt_ko200
          wt_e071k          = lt_e071k
        EXCEPTIONS
          OTHERS            = 1.

    ENDIF.
    IF sy-subrc NE 0.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; RÃ©initialisation NumÃ©ro d&apos;OT
      CLEAR : rv_order.

      &quot;&quot;  --&gt; Retourne le message d&apos;erreur
      es_return  = VALUE #( id         = sy-msgid
                            type       = sy-msgty
                            number     = sy-msgno
                            message_v1 = sy-msgv1
                            message_v2 = sy-msgv2
                            message_v3 = sy-msgv3
                            message_v4 = sy-msgv4
      ).

    ENDIF.

  ENDMETHOD.

  METHOD programm_deletion.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_vers_guid_to_del  TYPE epic_t_guid,
      lt_attr_guid_to_del  TYPE epic_t_guid,
      lt_param_guid_to_del TYPE epic_t_guid.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_answer             TYPE c LENGTH 1,
      lv_transport_deletion TYPE xsdboolean.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le
    &quot; -----------------------------------------------------------

    &quot; Recherche existence de la Version
    SELECT SINGLE mandt FROM ztec_t_hc_vers
                        INTO lv_answer
                       WHERE repid EQ me-&gt;ms_selection_criteria-ov_repid-&gt;*.
    IF sy-subrc NE 0.
      &quot; La Version n&apos;existe pas
      &quot;&quot;  --&gt; Affiche message succÃ¨s
      MESSAGE w001(zhardcode) WITH me-&gt;ms_selection_criteria-ov_repid-&gt;*.

      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Suppression Hardcode du Programme
    &quot; -----------------------------------------------------------

    TRY.
        &quot;&quot;  --&gt; Recherche au moins un Attribut prÃ©sent sur le Programme
        SELECT mandt FROM zvtec_t_hc UP TO 1 ROWS
                     INTO lv_answer
                     WHERE repid EQ me-&gt;ms_selection_criteria-ov_repid-&gt;*.
        ENDSELECT.
        IF sy-subrc EQ 0.
          &quot; Au moins un Attribut sur ce Programme
          &quot;&quot;  --&gt; Appel PopUp Confirmation suppression
          CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
            EXPORTING
              titlebar              = text-tde
              text_question         = text-tq2
              text_button_1         = text-oui
              icon_button_1         = text-tra
              text_button_2         = text-oui
              icon_button_2         = text-oka
              default_button        = &apos;1&apos;   &quot;#EC NOTEXT
              display_cancel_button = abap_true
            IMPORTING
              answer                = lv_answer
            EXCEPTIONS
              text_not_found        = 1
              OTHERS                = 2.
          IF sy-subrc  NE 0.
            &quot; L&apos;utilisateur refuse la suppression
            &quot;&quot;  --&gt; ArrÃªt du traitement
            RETURN.

          ENDIF.

          &quot; Suivant la rÃ©ponse de l&apos;utilisateur
          CASE lv_answer.

            WHEN &apos;1&apos;.
              &quot; Suppression avec Transport
              &quot;&quot;  --&gt; Initialisation Indicateur Transport des Suppressions
              lv_transport_deletion = abap_true.

            WHEN &apos;2&apos;.
              &quot; Suppression sans Transport

            WHEN OTHERS.
              &quot; Autres // Interrompre
              &quot;&quot;  --&gt; ArrÃªt du traitement
              RETURN.

          ENDCASE.

        ENDIF.

        &quot;&quot;  --&gt; CrÃ©ation instance Hardcode
        CREATE OBJECT me-&gt;mo_hardcode_maintain
          EXPORTING
            iv_repid = me-&gt;ms_selection_criteria-ov_repid-&gt;*.

        &quot;&quot;  --&gt; Suppression de toutes les donnÃ©es
        me-&gt;mo_hardcode_maintain-&gt;version_del( iv_repid = me-&gt;ms_selection_criteria-ov_repid-&gt;* ).

        &quot;&quot;  --&gt; Sauvegarde les modifications en DB
        me-&gt;mo_hardcode_maintain-&gt;save_to_db( abap_false ).

        TRY.
            IF zcl_hardcode_shm=&gt;hardcode_is_load( me-&gt;ms_selection_criteria-ov_repid-&gt;* ) EQ abap_true.
              &quot;&quot;  --&gt; Suppression en SHM
              zcl_hardcode_shm=&gt;hardcode_unload( me-&gt;ms_selection_criteria-ov_repid-&gt;* ).

            ENDIF.

          CATCH zcx_hardcode_shm.
            &quot; Une erreur est survenue // Tant pis ...

        ENDTRY.

        IF lv_transport_deletion EQ abap_true.
          &quot; L&apos;utilisateur souhaite transporter la suppression
          &quot;&quot;  --&gt; Traitement Transport
*          &quot;&quot;  --&gt; Initialisation tables des Clefs
*          LOOP AT lt_join ASSIGNING FIELD-SYMBOL(&lt;lfs_s_join&gt;).
*
*            AT NEW version_guid.
*              &quot; A chaque changement de Version
*              &quot;&quot;  --&gt; Ajout du GUID de Version
*              APPEND &lt;lfs_s_join&gt;-version_guid TO lt_vers_guid_to_del.
*
*            ENDAT.
*
*            AT NEW parameter_guid.
*              &quot; A chaque changement de ParamÃ¨tre
*              &quot;&quot;  --&gt; Ajout du GUID de ParamÃ¨tre
*              APPEND &lt;lfs_s_join&gt;-parameter_guid TO lt_param_guid_to_del.
*
*            ENDAT.
*
*            AT NEW attribute_guid_regroup.
*              &quot; A chaque changement d&apos;Attribut
*              &quot;&quot;  --&gt; Ajout du GUID Attribut
*              APPEND &lt;lfs_s_join&gt;-attribute_guid_regroup TO lt_attr_guid_to_del.
*
*            ENDAT.
*
*          ENDLOOP.
*
*          &quot; Tri et Suppression des doublons
*          SORT lt_vers_guid_to_del.  DELETE ADJACENT DUPLICATES FROM lt_vers_guid_to_del.
*          SORT lt_attr_guid_to_del.  DELETE ADJACENT DUPLICATES FROM lt_attr_guid_to_del.
*          SORT lt_param_guid_to_del. DELETE ADJACENT DUPLICATES FROM lt_param_guid_to_del.
*
*          IF NOT lt_vers_guid_to_del[]  IS INITIAL OR
*             NOT lt_attr_guid_to_del[]  IS INITIAL OR
*             NOT lt_param_guid_to_del[] IS INITIAL.
*            &quot;&quot;  --&gt; CrÃ©ation de l&apos;Ordre de Transport
*            lcl_main=&gt;transport_request_create(
*                it_vers_guid_to_del  = lt_vers_guid_to_del
*                it_attr_guid_to_del  = lt_attr_guid_to_del
*                it_param_guid_to_del = lt_param_guid_to_del
*            ).
*
*          ENDIF.
*
        ENDIF.

        &quot;&quot;  --&gt; Commit
        CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;
          EXPORTING
            wait = abap_true.

        &quot;&quot;  --&gt; Affiche message succÃ¨s
        MESSAGE s007(zhardcode) WITH me-&gt;ms_selection_criteria-ov_repid-&gt;*.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD programm_copy.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_hardcode_maintain    TYPE REF TO zcl_hardcode_maintain,
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_repid_new TYPE ztec_t_hc_vers-repid.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le
    &quot; -----------------------------------------------------------

    &quot; Recherche existence de la Version
    SELECT SINGLE repid FROM ztec_t_hc_vers
                        INTO lv_repid_new
                       WHERE repid EQ me-&gt;ms_selection_criteria-ov_repid-&gt;*.
    IF sy-subrc NE 0.
      &quot; La Version n&apos;existe pas
      &quot;&quot;  --&gt; Affiche message succÃ¨s
      MESSAGE w001(zhardcode) WITH me-&gt;ms_selection_criteria-ov_repid-&gt;*.

      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Copie Hardcode du Programme
    &quot; -----------------------------------------------------------

    TRY.
        &quot;&quot;  --&gt; CrÃ©ation instance Hardcode
        CREATE OBJECT me-&gt;mo_hardcode_maintain
          EXPORTING
            iv_repid = me-&gt;ms_selection_criteria-ov_repid-&gt;*.

        &quot;&quot;  --&gt; DÃ©termination Nom de la Copie
        lv_repid_new = me-&gt;call_popup_input_simple(
          iv_text  = me-&gt;ms_selection_criteria-ov_repid-&gt;*
          iv_title = text-nre
        ).

        &quot;&quot;  --&gt; Copie de toutes les donnÃ©es
        me-&gt;mo_hardcode_maintain = me-&gt;mo_hardcode_maintain-&gt;repid_copy( lv_repid_new ).

        &quot;&quot;  --&gt; Sauvegarde les modifications en DB
        me-&gt;mo_hardcode_maintain-&gt;save_to_db( abap_true ).

        &quot;&quot;  --&gt; Copie effectuÃ©e
        MESSAGE s006(zhardcode) WITH me-&gt;ms_selection_criteria-ov_repid-&gt;* lv_repid_new.

        &quot;&quot;  --&gt; Modification Programme saisie
        me-&gt;ms_selection_criteria-ov_repid-&gt;* = lv_repid_new.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD programm_transport.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le et Traitement
    &quot; -----------------------------------------------------------

    IF me-&gt;ms_selection_criteria-ov_repid-&gt;* IS INITIAL.
      &quot; Programme Obligatoire
      &quot;&quot;  --&gt; Affiche message d&apos;erreur

      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ELSE.
      &quot; ContrÃ´le existence des Hardcodes du Programme
      SELECT SINGLE mandt FROM ztec_t_hc_vers
                         WHERE repid EQ @me-&gt;ms_selection_criteria-ov_repid-&gt;*
                          INTO @DATA(lv_mandt).
      IF sy-subrc NE 0.
        &quot; Hardcode n&apos;existe pas
        &quot;&quot;  --&gt; Affiche message d&apos;erreur
        MESSAGE ID zcl_hardcode_maintain=&gt;mc_my_msgid TYPE if_msg_output=&gt;msgtype_success
            NUMBER 001 WITH me-&gt;ms_selection_criteria-ov_repid-&gt;*
               DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

      ELSE.
        &quot; -----------------------------------------------------------
        &quot; Transport des Hardcodes
        &quot; -----------------------------------------------------------

        me-&gt;process( lcl_main_tree_toolbar_event=&gt;mc_fc_transport ).

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD programm_update_shm.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le et Traitement
    &quot; -----------------------------------------------------------

    IF me-&gt;ms_selection_criteria-ov_repid-&gt;* IS INITIAL.
      &quot; Programme Obligatoire
      &quot;&quot;  --&gt; Affiche message d&apos;erreur

      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ELSE.
      &quot; ContrÃ´le existence des Hardcodes du Programme
      SELECT SINGLE mandt FROM ztec_t_hc_vers
                         WHERE repid EQ @me-&gt;ms_selection_criteria-ov_repid-&gt;*
                          INTO @DATA(lv_mandt).
      IF sy-subrc NE 0.
        &quot; Hardcode n&apos;existe pas
        &quot;&quot;  --&gt; Affiche message d&apos;erreur
        MESSAGE ID zcl_hardcode_maintain=&gt;mc_my_msgid TYPE if_msg_output=&gt;msgtype_success
            NUMBER 001 WITH me-&gt;ms_selection_criteria-ov_repid-&gt;*
               DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

      ELSE.
        &quot; -----------------------------------------------------------
        &quot; Mise Ã  Jour dans la SHM
        &quot; -----------------------------------------------------------

        me-&gt;process( lcl_main_tree_toolbar_event=&gt;mc_fc_update_shm ).

      ENDIF.

    ENDIF.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree IMPLEMENTATION.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_main = io_main.

    &quot; CrÃ©ation Instance Gestion DÃ©tail des Attributs
    CREATE OBJECT me-&gt;mo_attribute_detail
      EXPORTING
        io_main = io_main.

  ENDMETHOD.

  METHOD process.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    REFRESH : me-&gt;ms_display_element-data-t_display_data.

    &quot; -----------------------------------------------------------
    &quot; Initialisation Attribut
    &quot; -----------------------------------------------------------

    &quot; Initialisation Attribut
    me-&gt;mv_repid = iv_repid.

    &quot; -----------------------------------------------------------
    &quot; Chargement des donnÃ©es
    &quot; -----------------------------------------------------------

    rv_subrc = me-&gt;load_data(
      iv_repid    = iv_repid
      it_hardcode = it_hardcode
    ).

    IF rv_subrc IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Initialisation des Ã©lÃ¨ments Ã  afficher
      &quot; -----------------------------------------------------------

      me-&gt;build_display_element( ).

      &quot; -----------------------------------------------------------
      &quot; Initialisation des donnÃ©es Ã  afficher
      &quot; -----------------------------------------------------------

      rv_subrc = me-&gt;build_hierarchy_node( iv_repid ).

    ENDIF.

    IF rv_subrc IS INITIAL.

      IF NOT iv_event IS INITIAL.
        &quot; Simule l&apos;Action utilisateur Ã  la place de l&apos;Affichage
        &quot;&quot;  --&gt; Suivant l&apos;EvÃ¨ment
        CASE iv_event.

          WHEN lcl_main_tree_toolbar_event=&gt;mc_fc_transport.
            &quot;&quot;  --&gt; Transporter
            me-&gt;ms_display_element-display_element-o_toolbar_handler-&gt;handler_on_transport( ).

          WHEN lcl_main_tree_toolbar_event=&gt;mc_fc_update_shm.
            &quot;&quot;  --&gt; MÃ J SHM
            me-&gt;ms_display_element-display_element-o_toolbar_handler-&gt;handler_on_update_shm( ).

          WHEN OTHERS.
            &quot; Autres

        ENDCASE.

      ELSE.
        &quot; -----------------------------------------------------------
        &quot; Affichage des Hardcodes
        &quot; -----------------------------------------------------------

        me-&gt;display( ).

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD load_data.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_hardcode TYPE zvtec_t_hc_tt.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_hc_data               TYPE ts_hc_data_internal,
      ls_attribute_range       TYPE ts_attribute_range,
      ls_attribute_range_value TYPE zcl_hardcode_maintain=&gt;ty_attribute_range_value_det.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc TYPE sy-subrc.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : rv_subrc.

    &quot; -----------------------------------------------------------
    &quot; PrÃ©-traitement
    &quot; -----------------------------------------------------------

    &quot; Initialisation table locale
    lt_hardcode[] = it_hardcode[].
    SORT lt_hardcode BY attribute_guid_regroup.

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration donnÃ©es Code Source
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration des Identifiants des Codes Sources
    SELECT srtfd FROM ztec_t_hc_attr_c
      FOR ALL ENTRIES IN @lt_hardcode
                   WHERE srtfd EQ @lt_hardcode-attribute_guid_regroup
              INTO TABLE @DATA(lt_srtfd_code_source).
    SORT lt_srtfd_code_source BY srtfd.

    &quot; -----------------------------------------------------------
    &quot; Extraction des lignes non chargÃ©es
    &quot; -----------------------------------------------------------

    READ TABLE me-&gt;ms_persistent_data-t_hc_data
          WITH TABLE KEY repid = iv_repid
           TRANSPORTING NO FIELDS.
    IF sy-subrc NE 0.
      &quot; Aucune donnÃ©es correspondante
      &quot;&quot;  --&gt; CrÃ©ation nouvelle entrÃ©e
      ls_hc_data-repid = iv_repid.

      &quot;&quot;  --&gt; SÃ©pare les lignes d&apos;Attribut de rÃ©fÃ©rence des valeurs multiple
      LOOP AT lt_hardcode ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode&gt;).

        CLEAR : ls_attribute_range.

        IF &lt;lfs_s_hardcode&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode&gt;-attribute_guid.
          &quot; Il s&apos;agit de la ligne de rÃ©fÃ©rence
          &quot;&quot;  --&gt; Ajout de l&apos;entrÃ©e
          APPEND &lt;lfs_s_hardcode&gt; TO ls_hc_data-t_hardcode.

          &quot;&quot;  --&gt; RÃ©cupÃ©ration Code Source
          INSERT VALUE #(
            attribute_guid_regroup = &lt;lfs_s_hardcode&gt;-attribute_guid_regroup
            t_code_source          = zcl_hardcode_cluster=&gt;code_source_get( &lt;lfs_s_hardcode&gt;-attribute_guid_regroup )
          ) INTO TABLE ls_hc_data-t_code_source.

        ELSE.
          &quot; Il s&apos;agit d&apos;une ligne valeurs multiple
          READ TABLE ls_hc_data-t_attribute_range WITH TABLE KEY attribute_guid_regroup = &lt;lfs_s_hardcode&gt;-attribute_guid_regroup
                                                       ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute_range&gt;).
          IF sy-subrc EQ 0.
            &quot; EntrÃ©e dÃ©jÃ  traitÃ©e
            &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
            CONTINUE.

          ENDIF.

          &quot; CrÃ©ation nouvelle ligne
          ls_attribute_range-attribute_guid_regroup = &lt;lfs_s_hardcode&gt;-attribute_guid_regroup.
          INSERT ls_attribute_range INTO TABLE ls_hc_data-t_attribute_range ASSIGNING &lt;lfs_s_attribute_range&gt;.

          &quot; RÃ©cupÃ©ration des valeurs multiples
          READ TABLE lt_hardcode WITH KEY attribute_guid_regroup = &lt;lfs_s_hardcode&gt;-attribute_guid_regroup
                            TRANSPORTING NO FIELDS BINARY SEARCH.
          IF sy-subrc EQ 0.
            &quot; Parcours l&apos;ensemble des valeurs multiples
            LOOP AT lt_hardcode ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode_range_value&gt;)
                                     FROM sy-tabix.

              CLEAR : ls_attribute_range_value.

              IF &lt;lfs_s_hardcode_range_value&gt;-attribute_guid_regroup NE &lt;lfs_s_hardcode&gt;-attribute_guid_regroup.
                &quot; On ne traite plus le mÃªme regroupement de valeur
                &quot;&quot;  --&gt; ArrÃªt de la boucle
                EXIT.

              ENDIF.

              IF &lt;lfs_s_hardcode_range_value&gt;-attribute_guid_regroup EQ &lt;lfs_s_hardcode_range_value&gt;-attribute_guid.
                &quot; Ligne de rÃ©fÃ©rence
                &quot;&quot;  --&gt; Passe Ã  l&apos;itÃ©ration suivante
                CONTINUE.

              ENDIF.

              &quot; Initialisation valeurs de range
              MOVE-CORRESPONDING &lt;lfs_s_hardcode_range_value&gt; TO ls_attribute_range_value.

              &quot; Ajout de l&apos;entrÃ©e dans les valeurs de range
              INSERT ls_attribute_range_value INTO TABLE &lt;lfs_s_attribute_range&gt;-t_attribute_range_value.

            ENDLOOP.        &quot;Fin parcours des valeurs mutliples de l&apos;Attribut

          ENDIF.            &quot;Fin de test prÃ©sence valeurs multiples sur l&apos;Attribut

        ENDIF.              &quot;Fin de test Attribut de rÃ©fÃ©rence

      ENDLOOP.              &quot;Fin parcours des Hardcodes

      &quot;&quot;  --&gt; Ajout de l&apos;entrÃ©e
      INSERT ls_hc_data INTO TABLE me-&gt;ms_persistent_data-t_hc_data.

    ENDIF.

  ENDMETHOD.

  METHOD build_hierarchy_node.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_display_data TYPE tt_t_hc_data.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_display_data TYPE ts_hc_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
        lo_alv_tree_util TYPE REF TO zcl_gui_alv_tree_util.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    REFRESH : me-&gt;ms_display_element-data-t_display_data.

    &quot; -----------------------------------------------------------
    &quot; Extraction des donnÃ©es Ã  afficher
    &quot; -----------------------------------------------------------

    &quot; CrÃ©ation Instance Utilitaire Gestion ALV Tree
    CREATE OBJECT lo_alv_tree_util
      EXPORTING
        io_alv_tree = me-&gt;ms_display_element-display_element-o_alv_tree.

    &quot; RÃ©cupÃ©ration position premiÃ¨re itÃ©ration du Programme
    READ TABLE me-&gt;ms_persistent_data-t_hc_data
    WITH TABLE KEY repid = iv_repid
      ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_data&gt;).
    IF sy-subrc NE 0.
      &quot; Aucune donnÃ©es
      rv_subrc = 4.
      RETURN.

    ENDIF.

    &quot; Parcours l&apos;ensemble des Noeuds du Programme
    LOOP AT &lt;lfs_s_hc_data&gt;-t_hardcode ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hardcode&gt;).

      CLEAR : ls_display_data.

      &quot; Initialisation des donnÃ©es
      MOVE-CORRESPONDING &lt;lfs_s_hardcode&gt; TO ls_display_data.

      &quot; Initialisation IcÃ´ne Primaire
      ls_display_data-version_primary_icon = me-&gt;icon_version_primary_set( ls_display_data-version_primary ).

      &quot; Initialisation IcÃ´ne Range
      ls_display_data-attribute_as_range_icon = me-&gt;icon_attribute_range_set( ls_display_data-attribute_as_range ).

      &quot; Initialisation IcÃ´ne Code Source
      ls_display_data-attribute_as_code_source_icon = me-&gt;icon_attribute_code_source_set( ls_display_data-attribute_as_code_source ).

      &quot; Ajout de l&apos;entrÃ©e
      APPEND ls_display_data TO lt_display_data.

    ENDLOOP.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le prÃ©sence de donnÃ©es
    &quot; -----------------------------------------------------------

    IF lt_display_data[] IS INITIAL.
      &quot; Aucune donnÃ©es Ã  afficher
      &quot;&quot;  --&gt; Retourne code retour en erreur
      rv_subrc = 8.
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Alimentation automatique des donnÃ©es dans l&apos;ALV Tree
    &quot; -----------------------------------------------------------

    &quot; Alimentation des Noeuds de l&apos;ALV
    zcl_gui_alv_tree_util=&gt;alv_tree_populate_auto(
      EXPORTING
        it_alv_tree_data  = lt_display_data
        it_hierarchy      = me-&gt;ms_display_element-display_element-t_hierarchy
      IMPORTING
        et_level_node_key = me-&gt;mt_level_node_key
      CHANGING
        co_alv_tree       = me-&gt;ms_display_element-display_element-o_alv_tree
    ).

  ENDMETHOD.

  METHOD build_display_element.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    IF NOT me-&gt;ms_display_element-display_element-o_ccontainer IS BOUND.
      &quot; -----------------------------------------------------------
      &quot; CrÃ©ation du Custom Container
      &quot; -----------------------------------------------------------
      me-&gt;build_container( ).

    ENDIF.

    IF me-&gt;ms_display_element-display_element-t_fieldcatalog[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Constitution du FieldCatalog
      &quot; -----------------------------------------------------------
      me-&gt;build_fieldcatalog( ).

    ENDIF.

    IF me-&gt;ms_display_element-display_element-t_hierarchy[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Constitution de la HiÃ©rarchie d&apos;affichage
      &quot; -----------------------------------------------------------
      me-&gt;build_hierarchy( ).

    ENDIF.

    IF me-&gt;ms_display_element-display_element-s_hierarchy_header IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Initialisation de l&apos;entÃªte de la HiÃ©rarchie
      &quot; -----------------------------------------------------------
      me-&gt;ms_display_element-display_element-s_hierarchy_header-width   = 25.
      me-&gt;ms_display_element-display_element-s_hierarchy_header-heading = text-hea.

    ENDIF.

    IF me-&gt;ms_display_element-display_element-t_toolbar_excluding[] IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Initialisation des fonctionnalitÃ©es Ã  exclures
      &quot; -----------------------------------------------------------

      &quot; Modification affichage des colonnes
      APPEND cl_gui_alv_tree=&gt;mc_fc_print_back      TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.
      APPEND cl_gui_alv_tree=&gt;mc_fc_current_variant TO me-&gt;ms_display_element-display_element-t_toolbar_excluding.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;ALV Tree
    &quot; -----------------------------------------------------------

    me-&gt;build_alv_tree( ).

  ENDMETHOD.

  METHOD display.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Etend jusqu&apos;au Noeud indiquÃ©
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;expand_node(
      EXPORTING
        i_node_key          = CONV lvc_nkey( &apos;          1&apos; ) &quot;#EC NOTEXT
        i_level_count       = 10
        i_expand_subtree    = abap_true
      EXCEPTIONS
        failed              = 1
        illegal_level_count = 2
        cntl_system_error   = 3
        node_not_found      = 4
        cannot_expand_leaf  = 5
        OTHERS              = 6
    ).

    &quot; -----------------------------------------------------------
    &quot; Affichage des paramÃ¨tres
    &quot; -----------------------------------------------------------

    &quot; Appel de l&apos;Ã©cran d&apos;affichage
    CALL SCREEN 0101.

  ENDMETHOD.

  METHOD build_container.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : me-&gt;ms_display_element-display_element-o_ccontainer.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation du Custom Container
    &quot; -----------------------------------------------------------

    CREATE OBJECT me-&gt;ms_display_element-display_element-o_ccontainer
      EXPORTING
        container_name              = &apos;CC_MAIN_TREE&apos; &quot;#EC NOTEXT
      EXCEPTIONS
        cntl_error                  = 1
        cntl_system_error           = 2
        create_error                = 3
        lifetime_error              = 4
        lifetime_dynpro_dynpro_link = 5
        OTHERS                      = 6.
    IF sy-subrc NE 0.
      &quot; Une erreur est survenue

    ENDIF.

  ENDMETHOD.

  METHOD build_hierarchy.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_mandatory_component TYPE cgpl_field_names.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_hierarchy TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_node_level TYPE i.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    REFRESH : me-&gt;ms_display_element-display_element-t_hierarchy.

    &quot; -----------------------------------------------------------
    &quot; Initialisation des Attributs &quot;obligatoire&quot; Ã  alimenter
    &quot; -----------------------------------------------------------

    APPEND &apos;VERSION_ID&apos;   TO lt_mandatory_component.        &quot;#EC NOTEXT
    APPEND &apos;VERSION_GUID&apos; TO lt_mandatory_component.        &quot;#EC NOTEXT

    &quot; -----------------------------------------------------------
    &quot; Initialisation de la HiÃ©rarchie
    &quot; -----------------------------------------------------------

    &quot; Version
    ADD 1 TO lv_node_level.
    CLEAR : ls_hierarchy.
    ls_hierarchy-fieldname                = &apos;VERSION_ID&apos;.   &quot;#EC NOTEXT
    ls_hierarchy-node_level               = lv_node_level.
    ls_hierarchy-node_text_alpha_in       = abap_true.
    ls_hierarchy-node_layout-n_image      = text-ver.
    ls_hierarchy-node_layout-exp_image    = text-ver.
    ls_hierarchy-node_layout-isfolder     = abap_true.
    ls_hierarchy-node_level_key_fieldname = &apos;VERSION_GUID&apos;. &quot;#EC NOTEXT
    APPEND &apos;VERSION_PRIMARY&apos;               TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;VERSION_PRIMARY_ICON&apos;          TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND LINES OF lt_mandatory_component TO ls_hierarchy-t_component_display.
    INSERT ls_hierarchy INTO TABLE me-&gt;ms_display_element-display_element-t_hierarchy.

    &quot; ParamÃ¨tre
    ADD 1 TO lv_node_level.
    CLEAR : ls_hierarchy.
    ls_hierarchy-fieldname                = &apos;PARAMETER_NAME&apos;. &quot;#EC NOTEXT
    ls_hierarchy-node_level               = lv_node_level.
    ls_hierarchy-hide_if_null             = abap_true.
    ls_hierarchy-hide_if_empty            = abap_false.
    ls_hierarchy-node_text_alpha_in       = abap_true.
    ls_hierarchy-node_layout-n_image      = text-par.
    ls_hierarchy-node_layout-exp_image    = text-par.
    ls_hierarchy-node_layout-isfolder     = abap_true.
    ls_hierarchy-node_level_key_fieldname = &apos;PARAMETER_GUID&apos;. &quot;#EC NOTEXT
    APPEND &apos;PARAMETER_NAME&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;PARAMETER_GUID&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND LINES OF lt_mandatory_component TO ls_hierarchy-t_component_display.
    APPEND &apos;VERSION_PRIMARY_ICON&apos;          TO ls_hierarchy-t_component_excluded. &quot;#EC NOTEXT
    INSERT ls_hierarchy INTO TABLE me-&gt;ms_display_element-display_element-t_hierarchy.

    &quot; Dernier Niveau Attribut
    ADD 1 TO lv_node_level.
    CLEAR : ls_hierarchy.
    ls_hierarchy-fieldname                = &apos;ATTRIBUTE_NAME&apos;. &quot;#EC NOTEXT
    ls_hierarchy-node_level               = lv_node_level.
    ls_hierarchy-hide_if_null             = abap_true.
    ls_hierarchy-hide_if_empty            = abap_false.
    ls_hierarchy-node_text_alpha_in       = abap_true.
    ls_hierarchy-node_layout-n_image      = text-att.
    ls_hierarchy-node_layout-exp_image    = text-att.
    ls_hierarchy-node_level_key_fieldname = &apos;ATTRIBUTE_GUID_REGROUP&apos;. &quot;#EC NOTEXT
    APPEND &apos;PARAMETER_GUID&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_NAME&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_GUID&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_GUID_REGROUP&apos;        TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_KEY1&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_KEY2&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_KEY3&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_KEY4&apos;                TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_AS_RANGE&apos;            TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_AS_RANGE_ICON&apos;       TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_AS_CODE_SOURCE&apos;      TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND &apos;ATTRIBUTE_AS_CODE_SOURCE_ICON&apos; TO ls_hierarchy-t_component_display. &quot;#EC NOTEXT
    APPEND LINES OF lt_mandatory_component TO ls_hierarchy-t_component_display.
    APPEND &apos;VERSION_PRIMARY_ICON&apos;          TO ls_hierarchy-t_component_excluded. &quot;#EC NOTEXT
    INSERT ls_hierarchy INTO TABLE me-&gt;ms_display_element-display_element-t_hierarchy.

  ENDMETHOD.

  METHOD build_fieldcatalog.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_dfies    TYPE dfies,
      ls_fieldcat TYPE lvc_s_fcat.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_tabledescr  TYPE REF TO cl_abap_tabledescr,
      lo_structdescr TYPE REF TO cl_abap_structdescr.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    REFRESH : me-&gt;ms_display_element-display_element-t_fieldcatalog.

    &quot; -----------------------------------------------------------
    &quot; Constitution du FieldCatalog
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration description de la table
    lo_tabledescr ?= cl_abap_structdescr=&gt;describe_by_data( me-&gt;ms_display_element-data-t_display_data ).

    &quot; RÃ©cupÃ©ration description ligne de la table
    lo_structdescr ?= lo_tabledescr-&gt;get_table_line_type( ).

    &quot; Parcours l&apos;ensemble des champs de la table
    LOOP AT cl_salv_data_descr=&gt;read_structdescr( lo_structdescr ) ASSIGNING FIELD-SYMBOL(&lt;lfs_s_dfies&gt;).

      CLEAR : ls_fieldcat.

      &quot; Initialisation des donnÃ©es
      MOVE-CORRESPONDING &lt;lfs_s_dfies&gt; TO ls_fieldcat.

      &quot; Personnalisation
      CASE ls_fieldcat-fieldname.

        WHEN &apos;VERSION_GUID&apos;                                 &quot;#EC NOTEXT
          OR &apos;PARAMETER_GUID&apos;                               &quot;#EC NOTEXT
          OR &apos;ATTRIBUTE_GUID&apos;                               &quot;#EC NOTEXT
          OR &apos;ATTRIBUTE_GUID_REGROUP&apos;.                      &quot;#EC NOTEXT
          &quot; GUID Interne
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;REPID&apos;                                        &quot;#EC NOTEXT
          OR &apos;VERSION_ID&apos;                                   &quot;#EC NOTEXT
          OR &apos;PARAMETER_NAME&apos;                               &quot;#EC NOTEXT
          OR &apos;ATTRIBUTE_NAME&apos;.                              &quot;#EC NOTEXT
          &quot; RÃ©pertoire / Version / ParamÃ¨tre / Attribut
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;VERSION_PRIMARY&apos;.                             &quot;#EC NOTEXT
          &quot; Version primaire
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;VERSION_PRIMARY_ICON&apos;.                        &quot;#EC NOTEXT
          &quot; Version primaire IcÃ´ne
          ls_fieldcat-icon      = abap_true.
          ls_fieldcat-outputlen = 13.                       &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = ls_fieldcat-scrtext_m = ls_fieldcat-scrtext_s = text-pri.

        WHEN &apos;ATTRIBUTE_AS_RANGE_ICON&apos;.                     &quot;#EC NOTEXT
          &quot; IcÃ´ne - Range
          ls_fieldcat-icon      = abap_true.
          ls_fieldcat-outputlen = 13.                       &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = ls_fieldcat-scrtext_m = ls_fieldcat-scrtext_s = text-ran.

        WHEN &apos;ATTRIBUTE_AS_CODE_SOURCE_ICON&apos;.               &quot;#EC NOTEXT
          &quot; IcÃ´ne - Code Source
          ls_fieldcat-icon      = abap_true.
          ls_fieldcat-outputlen = 13.                       &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = ls_fieldcat-scrtext_m = ls_fieldcat-scrtext_s = text-cos.

        WHEN &apos;PARAMETER&apos;.                                   &quot;#EC NOTEXT
          &quot; ParamÃ¨tre

        WHEN &apos;ATTRIBUTE_KEY1&apos;.                              &quot;#EC NOTEXT
          &quot; Clef 1
          ls_fieldcat-scrtext_m = |{ ls_fieldcat-scrtext_m } 1|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_s = |{ ls_fieldcat-scrtext_s } 1|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = |{ ls_fieldcat-scrtext_l } 1|. &quot;#EC NOTEXT

        WHEN &apos;ATTRIBUTE_KEY2&apos;.                              &quot;#EC NOTEXT
          &quot; Clef 2
          ls_fieldcat-scrtext_m = |{ ls_fieldcat-scrtext_m } 2|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_s = |{ ls_fieldcat-scrtext_s } 2|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = |{ ls_fieldcat-scrtext_l } 2|. &quot;#EC NOTEXT

        WHEN &apos;ATTRIBUTE_KEY3&apos;.                              &quot;#EC NOTEXT
          &quot; Clef 3
          ls_fieldcat-scrtext_m = |{ ls_fieldcat-scrtext_m } 3|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_s = |{ ls_fieldcat-scrtext_s } 3|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = |{ ls_fieldcat-scrtext_l } 3|. &quot;#EC NOTEXT

        WHEN &apos;ATTRIBUTE_KEY4&apos;.                              &quot;#EC NOTEXT
          &quot; Clef 4
          ls_fieldcat-scrtext_m = |{ ls_fieldcat-scrtext_m } 4|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_s = |{ ls_fieldcat-scrtext_s } 4|. &quot;#EC NOTEXT
          ls_fieldcat-scrtext_l = |{ ls_fieldcat-scrtext_l } 4|. &quot;#EC NOTEXT

        WHEN &apos;ATTRIBUTE_SIGN&apos;.                              &quot;#EC NOTEXT
          &quot; ParamÃ¨tre - Signe
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;ATTRIBUTE_OPTI&apos;.                              &quot;#EC NOTEXT
          &quot; ParamÃ¨tre - OpÃ©rateur
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;ATTRIBUTE_LOW&apos;.                               &quot;#EC NOTEXT
          &quot; ParamÃ¨tre - Valeur basse
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;ATTRIBUTE_HIGH&apos;.                              &quot;#EC NOTEXT
          &quot; ParamÃ¨tre - Valeur Haute
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;ATTRIBUTE_AS_RANGE&apos;.                          &quot;#EC NOTEXT
          &quot; ParamÃ¨tre Range
          ls_fieldcat-no_out = abap_true.

        WHEN &apos;ATTRIBUTE_AS_CODE_SOURCE&apos;.                    &quot;#EC NOTEXT
          &quot; ParamÃ¨tre Code Source
          ls_fieldcat-no_out = abap_true.

        WHEN OTHERS.
          &quot; Autres

      ENDCASE.

      &quot; Ajout du champ
      APPEND ls_fieldcat TO me-&gt;ms_display_element-display_element-t_fieldcatalog.

    ENDLOOP.

  ENDMETHOD.

  METHOD build_toolbar.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration instance Barre de TÃ¢che
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration barre de tÃ¢che
    FREE : me-&gt;ms_display_element-display_element-o_toolbar.
    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_toolbar_object(
      IMPORTING
        er_toolbar = me-&gt;ms_display_element-display_element-o_toolbar
    ).

    &quot; -----------------------------------------------------------
    &quot; Ajout des fonctionnalitÃ©es spÃ©cifiques
    &quot; -----------------------------------------------------------

    &quot; Supprimer
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_delete
        icon             = text-del
        butn_type        = cntb_btype_button
        text             = text-tde
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP1&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Modifier
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_modify
        icon             = text-mod
        butn_type        = cntb_btype_button
        text             = text-tmo
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP2&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Copier
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_copy
        icon             = text-cop
        butn_type        = cntb_btype_button
        text             = text-tcy
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP3&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Rendre Primaire
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_primary_set
        icon             = text-swi
        butn_type        = cntb_btype_button
        text             = text-tsw
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP4&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Version - CrÃ©er
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_version_create
        icon             = text-vcr
        butn_type        = cntb_btype_button
        text             = text-cre
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; ParamÃ¨tre - CrÃ©er
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_parameter_create
        icon             = text-par
        butn_type        = cntb_btype_button
        text             = text-cre
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Attribut - CrÃ©er
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_attribute_create
        icon             = text-att
        butn_type        = cntb_btype_button
        text             = text-cre
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP5&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Transporter
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_transport
        icon             = text-tra
        butn_type        = cntb_btype_button
        text             = text-ttr
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; SÃ©parateur
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = &apos;SEP6&apos;                           &quot;#EC NOTEXT
        icon             = text-del
        butn_type        = cntb_btype_sep
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; Mettre Ã  Jour la SHM
    me-&gt;ms_display_element-display_element-o_toolbar-&gt;add_button(
      EXPORTING
        fcode            = lcl_main_tree_toolbar_event=&gt;mc_fc_update_shm
        icon             = text-shm
        butn_type        = cntb_btype_button
        text             = text-tsh
      EXCEPTIONS
        cntl_error       = 1
        cntb_btype_error = 2
        cntb_error_fcode = 3
        OTHERS           = 4
    ).

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration Toolbar - EvÃ¨nement
    &quot; -----------------------------------------------------------

    &quot; CrÃ©ation instance Toolbar - Handler
    me-&gt;ms_display_element-display_element-o_toolbar_event ?= lcl_generic_event_toolbar=&gt;factory(
      iv_id      = lcl_main_tree_toolbar_event=&gt;my_id
      io_toolbar = me-&gt;ms_display_element-display_element-o_toolbar
    ).

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration Toolbar - Handler
    &quot; -----------------------------------------------------------

    &quot; CrÃ©ation instance Toolbar - Handler
    CREATE OBJECT me-&gt;ms_display_element-display_element-o_toolbar_handler
      EXPORTING
        io_main_tree = me.

  ENDMETHOD.

  METHOD build_alv_tree.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    REFRESH : me-&gt;ms_display_element-data-t_display_data.

    IF me-&gt;ms_display_element-display_element-o_alv_tree IS BOUND.
      &quot; LibÃ©ration de l&apos;ancienne instance
      me-&gt;ms_display_element-display_element-o_alv_tree-&gt;free( ).
      FREE : me-&gt;ms_display_element-display_element-o_alv_tree, me-&gt;ms_display_element-display_element-o_event.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; CrÃ©ation de l&apos;ALV
    &quot; -----------------------------------------------------------

    CREATE OBJECT me-&gt;ms_display_element-display_element-o_alv_tree
      EXPORTING
        parent                      = me-&gt;ms_display_element-display_element-o_ccontainer
        node_selection_mode         = cl_gui_column_tree=&gt;node_sel_mode_single
        item_selection              = abap_true
        no_html_header              = abap_true
        no_toolbar                  = abap_false
      EXCEPTIONS
        cntl_error                  = 1
        cntl_system_error           = 2
        create_error                = 3
        lifetime_error              = 4
        illegal_node_selection_mode = 5
        failed                      = 6
        illegal_column_name         = 7.

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration instance Handler externe
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-display_element-o_event ?= lcl_generic_event_tree=&gt;factory(
      iv_id           = lcl_main_tree_event=&gt;my_id
      io_main         = me-&gt;mo_main
      io_alv_tree     = me-&gt;ms_display_element-display_element-o_alv_tree
      it_display_data = me-&gt;ms_display_element-data-t_display_data
    ).
*    IF me-&gt;ms_display_element-display_element-o_event IS BOUND.
*      &quot; Souscription aux Ã©vÃ¨nements locaux
*      SET HANDLER me-&gt;handler_double_click_trame FOR me-&gt;ms_display_element-display_element-o_event.
*
*    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; PrÃ©paration de l&apos;Affichage
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;set_table_for_first_display(
      EXPORTING
        is_hierarchy_header  = me-&gt;ms_display_element-display_element-s_hierarchy_header
        it_toolbar_excluding = me-&gt;ms_display_element-display_element-t_toolbar_excluding
      CHANGING
        it_outtab            = me-&gt;ms_display_element-data-t_display_data
        it_fieldcatalog      = me-&gt;ms_display_element-display_element-t_fieldcatalog
    ).

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration de la barre de TÃ¢che
    &quot; -----------------------------------------------------------

    me-&gt;build_toolbar( ).

  ENDMETHOD.

  METHOD icon_version_primary_set.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation de l&apos;IcÃ´ne de PrimaritÃ©
    &quot; -----------------------------------------------------------

    IF iv_version_primary EQ abap_true.
      &quot; Version Primaire
      rv_icon_primary = text-vsp.

    ELSE.
      &quot; Autre
      rv_icon_primary = text-vso.

    ENDIF.

  ENDMETHOD.

  METHOD icon_attribute_range_set.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation de l&apos;IcÃ´ne de Valeurs Multiple
    &quot; -----------------------------------------------------------

    IF iv_attribute_as_range EQ abap_true.
      &quot; Initialisation de l&apos;icÃ´ne
      rv_icon_range = text-ira.

    ENDIF.

  ENDMETHOD.

  METHOD icon_attribute_code_source_set.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation de l&apos;IcÃ´ne de Code Source
    &quot; -----------------------------------------------------------

    IF iv_attribute_as_code_source EQ abap_true.
      &quot; Initialisation de l&apos;icÃ´ne
      rv_icon_range = text-ics.

    ENDIF.

  ENDMETHOD.

  METHOD line_selected_get.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_selected_nodes TYPE lvc_t_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR   : es_node_layout, ev_parent_node_key, ev_selected_node, ev_node_text, ev_subrc.
    REFRESH : et_item_layout.

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration de la ligne sÃ©lectionnÃ©
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_selected_nodes(
      CHANGING
        ct_selected_nodes = lt_selected_nodes
      EXCEPTIONS
        cntl_system_error = 1
        dp_error          = 2
        failed            = 3
        OTHERS            = 4
    ).
    IF sy-subrc NE 0
    OR lt_selected_nodes[] IS INITIAL.
      &quot; Aucune ligne sÃ©lectionnÃ©e
      &quot;&quot;  --&gt; RÃ©cupÃ©ration ligne sÃ©lectionnÃ©e
      me-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_selected_item(
        IMPORTING
          e_selected_node   = ev_selected_node
        EXCEPTIONS
          no_item_selection = 1
          cntl_system_error = 2
          failed            = 3
          OTHERS            = 4
      ).

    ELSE.
      &quot; Ligne sÃ©lectionnÃ©e
      TRY.
          &quot;&quot;  --&gt; Initialisation numÃ©ro de Noeud sÃ©lectionnÃ©
          ev_selected_node = lt_selected_nodes[ 1 ].

        CATCH cx_sy_itab_line_not_found.
          &quot; Aucune entrÃ©e

      ENDTRY.

    ENDIF.

    IF sy-subrc         NE 0
    OR ev_selected_node IS INITIAL.
      &quot;&quot;  --&gt; Affiche message avertissement
      ev_subrc = 4.
      MESSAGE w315(3g) DISPLAY LIKE &apos;W&apos;.                    &quot;#EC NOTEXT
      RETURN.

    ENDIF.


    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_outtab_line(
      EXPORTING
        i_node_key     = ev_selected_node
      IMPORTING
        e_node_text    = ev_node_text
        e_outtab_line  = rs_outtab_line
        es_node_layout = es_node_layout
        et_item_layout = et_item_layout
      EXCEPTIONS
        node_not_found = 1
        OTHERS         = 2
    ).

    IF ev_parent_node_key IS SUPPLIED.
      &quot; -----------------------------------------------------------
      &quot; DÃ©termination Noeud Parent
      &quot; -----------------------------------------------------------
      IF NOT iv_parent_node_ref IS INITIAL.
        &quot; RÃ©fÃ©rence Noeud parent indiquÃ©e
        &quot;&quot;  --&gt; RÃ©cupÃ©ration champ de rÃ©fÃ©rence
        ASSIGN COMPONENT iv_parent_node_ref OF STRUCTURE rs_outtab_line
                                                      TO FIELD-SYMBOL(&lt;lfs_node_level_key&gt;).

        TRY.
            &quot; RÃ©cupÃ©ration du Noeud Parent correspondant Ã  la ligne sÃ©lectionnÃ©
            ev_parent_node_key = me-&gt;mt_level_node_key[ node_level_key = &lt;lfs_node_level_key&gt;
                                                      ]-node_key.

          CATCH cx_sy_itab_line_not_found.
            &quot; Impossible de dÃ©terminer le Noeud Parent

        ENDTRY.

      ELSE.
        &quot; RÃ©cupÃ©ration Noeud Parent direct
        me-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_parent(
          EXPORTING
            i_node_key        = ev_selected_node
          IMPORTING
            e_parent_node_key = ev_parent_node_key
        ).

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD node_add.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_outtab_line    TYPE ts_hc_data,
      ls_level_node_key TYPE zcl_gui_alv_tree_util=&gt;ty_level_node_key.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Ajout d&apos;un nouveau Noeud
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration paramÃ¨trage HiÃ©rarchique
    READ TABLE me-&gt;ms_display_element-display_element-t_hierarchy
      WITH TABLE KEY node_level = iv_node_level
           ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hierarchy&gt;).

    &quot; Exploitation de la HiÃ©rarchie appliquÃ©e
    zcl_gui_alv_tree_util=&gt;hierarchy_usage(
      EXPORTING
        is_data           = is_data
        is_hierarchy      = &lt;lfs_s_hierarchy&gt;
      IMPORTING
        es_node_data      = ls_outtab_line
        ev_node_text      = ls_level_node_key-node_text
        ev_node_level_key = ls_level_node_key-node_level_key
    ).

    &quot; Ajout du nouveau paramÃ¨tre
    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;add_node(
      EXPORTING
        i_relat_node_key     = iv_node_parent
        i_relationship       = cl_gui_column_tree=&gt;relat_last_child
        is_outtab_line       = ls_outtab_line
        is_node_layout       = &lt;lfs_s_hierarchy&gt;-node_layout
        i_node_text          = CONV lvc_value( ls_level_node_key-node_text )
      IMPORTING
        e_new_node_key       = ls_level_node_key-node_key
      EXCEPTIONS
        relat_node_not_found = 1
        node_not_found       = 2
        OTHERS               = 3
    ).

    &quot; Ajout du nouveau Noeud dans la table des Niveaux de Nodes
    ls_level_node_key-parent_node_key = iv_node_parent.
    APPEND ls_level_node_key TO me-&gt;mt_level_node_key.

    &quot; Retourne nouveau numÃ©ro de Noeud
    rv_node_key = ls_level_node_key-node_key.

    &quot; -----------------------------------------------------------
    &quot; Mise Ã  jour de l&apos;ALV Tree
    &quot; -----------------------------------------------------------

    &quot; Mise Ã  jour de l&apos;affichage
    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;update_calculations( ).

    &quot; -----------------------------------------------------------
    &quot; DÃ©ploie les Ã©lÃ¨ments du Noeud
    &quot; -----------------------------------------------------------

    me-&gt;ms_display_element-display_element-o_alv_tree-&gt;expand_node(
      EXPORTING
        i_node_key          = iv_node_parent
        i_level_count       = 3
        i_expand_subtree    = abap_true
      EXCEPTIONS
        failed              = 1
        illegal_level_count = 2
        cntl_system_error   = 3
        node_not_found      = 4
        cannot_expand_leaf  = 5
        OTHERS              = 6
    ).

  ENDMETHOD.

  METHOD attribute_detail_display.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lot_code_source           TYPE REF TO stringtab,
      lot_attribute_range_value TYPE REF TO zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_attribute_detail TYPE ts_attribute_detail_ref.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR   : ev_cancel.
    REFRESH : et_attribute_range_value, er_ranges_value.

    &quot; -----------------------------------------------------------
    &quot; Initialisation des donnÃ©es
    &quot; -----------------------------------------------------------

    &quot; Initialisation donnÃ©es DÃ©tail
    ls_attribute_detail-attribute_name           = REF #( cs_hardcode_data-attribute_name ).
    ls_attribute_detail-attribute_key1           = REF #( cs_hardcode_data-attribute_key1 ).
    ls_attribute_detail-attribute_key2           = REF #( cs_hardcode_data-attribute_key2 ).
    ls_attribute_detail-attribute_key3           = REF #( cs_hardcode_data-attribute_key3 ).
    ls_attribute_detail-attribute_key4           = REF #( cs_hardcode_data-attribute_key4 ).
    ls_attribute_detail-attribute_as_range       = REF #( cs_hardcode_data-attribute_as_range ).
    ls_attribute_detail-attribute_as_code_source = REF #( cs_hardcode_data-attribute_as_code_source ).

    TRY.
        &quot; RÃ©cupÃ©ration valeurs de Range
        lot_attribute_range_value = REF #( me-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mv_repid
                                             ]-t_attribute_range[ attribute_guid_regroup = cs_hardcode_data-attribute_guid_regroup
                                                                ]-t_attribute_range_value
                                         ).

      CATCH cx_sy_itab_line_not_found.
        &quot; Pas de range pour cette entrÃ©e
        &quot;&quot;  --&gt; CrÃ©ation de la variable de rÃ©fÃ©rence pour poursuite du traitement
        CREATE DATA lot_attribute_range_value.

    ENDTRY.

    TRY.
        &quot; RÃ©cupÃ©ration Code Source
        lot_code_source = REF #( me-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mv_repid
                                   ]-t_code_source[ attribute_guid_regroup = cs_hardcode_data-attribute_guid_regroup
                                                  ]-t_code_source
                               ).

      CATCH cx_sy_itab_line_not_found.
        &quot; Pas de Code Source pour cette entrÃ©e
        &quot;&quot;  --&gt; CrÃ©ation de la variable de rÃ©fÃ©rence pour poursuite du traitement
        CREATE DATA lot_code_source.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Affichage des donnÃ©es
    &quot; -----------------------------------------------------------

    me-&gt;mo_attribute_detail-&gt;process(
      IMPORTING
        ev_cancel                     = ev_cancel
        es_new_attribute_logical_key  = es_new_attribute_logical_key
        es_new_attribute_logical_keyx = es_new_attribute_logical_keyx
      CHANGING
        cot_code_source               = lot_code_source
        cs_attribute_detail           = ls_attribute_detail
        cot_attribute_range_value     = lot_attribute_range_value
    ).

    &quot; -----------------------------------------------------------
    &quot; Initilisation donnÃ©es de retour
    &quot; -----------------------------------------------------------

    IF er_ranges_value IS SUPPLIED.
      &quot; Range de valeur
      er_ranges_value = CORRESPONDING #( lot_attribute_range_value-&gt;*
                                          MAPPING low    = attribute_low
                                                  sign   = attribute_sign
                                                  high   = attribute_high
                                                  option = attribute_opti
                                        ).

    ENDIF.

    IF et_code_source IS SUPPLIED.
      &quot; Code Source
      et_code_source = lot_code_source-&gt;*.

    ENDIF.

    IF et_attribute_range_value IS SUPPLIED.
      &quot; Attribut - Range de valeur
      et_attribute_range_value = lot_attribute_range_value-&gt;*.

    ENDIF.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_ATTRIBUTE_DETAIL IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_attribute_detail IMPLEMENTATION.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation des attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_attribute_detail = REF #( gs_attribute_detail ).

    &quot; Initialisation instance singleton
    me-&gt;mo_instance = me.

  ENDMETHOD.

  METHOD process.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_attribute_detail TYPE ts_attribute_detail.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    CLEAR : me-&gt;mo_attribute_detail-&gt;cancel, ev_cancel.
    CLEAR : es_new_attribute_logical_keyx, es_new_attribute_logical_key.

    &quot; -----------------------------------------------------------
    &quot; Initialisation donnÃ©es gÃ©nÃ©rales
    &quot; -----------------------------------------------------------

    &quot; Initialisation Attribut
    me-&gt;mo_attribute_detail-&gt;attribute_name           = cs_attribute_detail-attribute_name-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_key1           = cs_attribute_detail-attribute_key1-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_key2           = cs_attribute_detail-attribute_key2-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_key3           = cs_attribute_detail-attribute_key3-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_key4           = cs_attribute_detail-attribute_key4-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_as_range       = cs_attribute_detail-attribute_as_range-&gt;*.
    me-&gt;mo_attribute_detail-&gt;attribute_as_code_source = cs_attribute_detail-attribute_as_code_source-&gt;*.

    FREE : me-&gt;mor_ranges_value.
    CREATE DATA me-&gt;mor_ranges_value.
    IF cot_attribute_range_value IS BOUND.
      &quot; Initialisation Range
      me-&gt;mor_ranges_value-&gt;* = CORRESPONDING #( cot_attribute_range_value-&gt;*
                                                  MAPPING low    = attribute_low
                                                          sign   = attribute_sign
                                                          high   = attribute_high
                                                          option = attribute_opti
                                               ).

    ELSE.
      &quot; CrÃ©ation instance du Range
      CREATE DATA cot_attribute_range_value.

    ENDIF.

    FREE : me-&gt;mot_code_source.
    CREATE DATA me-&gt;mot_code_source.
    IF cot_code_source IS BOUND.
      &quot; Initialisation Code Source
      me-&gt;mot_code_source-&gt;* = cot_code_source-&gt;*.

    ELSE.
      &quot; CrÃ©ation instance du Code Source
      CREATE DATA cot_code_source.

    ENDIF.

    IF es_new_attribute_logical_key IS SUPPLIED.
      &quot; Initialisation donnÃ©es avant modification
      ls_attribute_detail = me-&gt;mo_attribute_detail-&gt;*.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Affichage des donnÃ©es
    &quot; -----------------------------------------------------------

    CALL SCREEN 0201 STARTING AT 20 10.

    &quot; -----------------------------------------------------------
    &quot; Une fois la saisie finie
    &quot; -----------------------------------------------------------

    &quot; Retourne le choix de l&apos;utilisateur
    ev_cancel = me-&gt;mo_attribute_detail-&gt;cancel.

    IF me-&gt;mo_attribute_detail-&gt;cancel EQ abap_true.
      &quot; L&apos;utilisateur a annuler les modifications
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ELSE.
      &quot; L&apos;utilisateur a confirmÃ© les modifications
      &quot;&quot;  --&gt; Pousse les modifications
      cs_attribute_detail-attribute_name-&gt;*           = me-&gt;mo_attribute_detail-&gt;attribute_name.
      cs_attribute_detail-attribute_key1-&gt;*           = me-&gt;mo_attribute_detail-&gt;attribute_key1.
      cs_attribute_detail-attribute_key2-&gt;*           = me-&gt;mo_attribute_detail-&gt;attribute_key2.
      cs_attribute_detail-attribute_key3-&gt;*           = me-&gt;mo_attribute_detail-&gt;attribute_key3.
      cs_attribute_detail-attribute_key4-&gt;*           = me-&gt;mo_attribute_detail-&gt;attribute_key4.
      cs_attribute_detail-attribute_as_range-&gt;*       = me-&gt;mo_attribute_detail-&gt;attribute_as_range.
      cs_attribute_detail-attribute_as_code_source-&gt;* = me-&gt;mo_attribute_detail-&gt;attribute_as_code_source.

      &quot;&quot;  --&gt; Initialisation Range
      REFRESH : cot_attribute_range_value-&gt;*.
      cot_attribute_range_value-&gt;* = CORRESPONDING #( me-&gt;mor_ranges_value-&gt;*
                                           MAPPING attribute_low  = low
                                                   attribute_sign = sign
                                                   attribute_high = high
                                                   attribute_opti = option
                                     ).

      &quot;&quot;  --&gt; Initialisation Code Source
      REFRESH : cot_code_source-&gt;*.
      cot_code_source-&gt;* = me-&gt;mot_code_source-&gt;*.

      IF es_new_attribute_logical_key IS SUPPLIED.
        &quot;&quot;  --&gt;  Initialisation des donnÃ©es modifiÃ©es
        MOVE-CORRESPONDING me-&gt;mo_attribute_detail-&gt;* TO es_new_attribute_logical_key.
        es_new_attribute_logical_keyx-attribute_name = boolc( ls_attribute_detail-attribute_name NE me-&gt;mo_attribute_detail-&gt;attribute_name ).
        es_new_attribute_logical_keyx-attribute_key1 = boolc( ls_attribute_detail-attribute_key1 NE me-&gt;mo_attribute_detail-&gt;attribute_key1 ).
        es_new_attribute_logical_keyx-attribute_key2 = boolc( ls_attribute_detail-attribute_key2 NE me-&gt;mo_attribute_detail-&gt;attribute_key2 ).
        es_new_attribute_logical_keyx-attribute_key3 = boolc( ls_attribute_detail-attribute_key3 NE me-&gt;mo_attribute_detail-&gt;attribute_key3 ).
        es_new_attribute_logical_keyx-attribute_key4 = boolc( ls_attribute_detail-attribute_key4 NE me-&gt;mo_attribute_detail-&gt;attribute_key4 ).

      ENDIF.

    ENDIF.

  ENDMETHOD.

  METHOD instance_get.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    ro_instance = lcl_attribute_detail=&gt;mo_instance.

  ENDMETHOD.

  METHOD range_value_get.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    ror_range_value = me-&gt;mor_ranges_value.

  ENDMETHOD.

  METHOD code_source_get.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    rot_code_source = me-&gt;mot_code_source.

  ENDMETHOD.

ENDCLASS.


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_TOOLBAR_HANDLER IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_toolbar_handler IMPLEMENTATION.

  METHOD constructor.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation Attributs
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree = io_main_tree.

    &quot; -----------------------------------------------------------
    &quot; Souscription Ã©vÃ¨nements
    &quot; -----------------------------------------------------------

    SET HANDLER me-&gt;handler_on_copy                FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_delete              FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_modify              FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_transport           FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_update_shm          FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_version_create      FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_parameter_create    FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_attribute_create    FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.
    SET HANDLER me-&gt;handler_on_version_primary_set FOR me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_toolbar_event.

  ENDMETHOD.

  METHOD handler_on_delete.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_children TYPE lvc_t_nkey.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_selected_line       TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_new_version_primary TYPE lcl_main_tree=&gt;ts_hc_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc                TYPE sy-subrc,
      lv_answer               TYPE c LENGTH 1,
      lv_selected_node        TYPE lvc_nkey,
      lv_node_key_new_primary TYPE lvc_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      IMPORTING
        ev_subrc         = lv_subrc
        ev_selected_node = lv_selected_node
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le avant suppression
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_children(
      EXPORTING
        i_node_key         = lv_selected_node
      IMPORTING
        et_children        = lt_children
      EXCEPTIONS
        historic_error     = 1
        node_key_not_found = 2
        OTHERS             = 3
    ).
    IF lines( lt_children ) GT 1.
      &quot; -----------------------------------------------------------
      &quot; Avertissement de Suppression
      &quot; -----------------------------------------------------------

      CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
        EXPORTING
          titlebar              = text-tde
          text_question         = text-tq1
          text_button_1         = text-oui
          icon_button_1         = text-oka
          text_button_2         = text-non
          icon_button_2         = text-can
          default_button        = &apos;1&apos; &quot;#EC NOTEXT
          display_cancel_button = abap_true
        IMPORTING
          answer                = lv_answer
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.
      IF sy-subrc  NE 0
      OR lv_answer NE &apos;1&apos;.                                  &quot;#EC NOTEXT
        &quot; L&apos;utilisateur refuse la suppression
        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

      ENDIF.

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Suppression des donnÃ©es internes
        &quot; -----------------------------------------------------------

        IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL.
          &quot; Attribut
          &quot;&quot;  --&gt; Suppression de l&apos;Attribut
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;attribute_del( ls_selected_line-attribute_guid_regroup ).

        ELSEIF NOT ls_selected_line-parameter_guid IS INITIAL.
          &quot; ParamÃ¨tre
          &quot;&quot;  --&gt; Suppression du ParamÃ¨tre
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;parameter_del( ls_selected_line-parameter_guid ).

        ELSEIF NOT ls_selected_line-version_guid IS INITIAL.
          &quot; Version
          &quot;&quot;  --&gt; Suppression de la Version
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;version_del( ls_selected_line-version_guid ).

          &quot;&quot;  --&gt; RÃ©cupÃ©ration d&apos;une autre Version
          LOOP AT me-&gt;mo_main_tree-&gt;ms_display_element-data-t_display_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_display_data&gt;)
                                                                               WHERE version_guid NE ls_selected_line-version_guid.
            &quot; EntrÃ©e rÃ©cupÃ©rÃ©e
            EXIT.

          ENDLOOP.
          IF &lt;lfs_s_display_data&gt; IS ASSIGNED.
            &quot; Modification de la primaritÃ©
            TRY.
                &quot; RÃ©cupÃ©ration du NumÃ©ro de Noeud
                lv_node_key_new_primary = me-&gt;mo_main_tree-&gt;mt_level_node_key[ node_text = &lt;lfs_s_display_data&gt;-version_id ]-node_key.

                &quot; RÃ©cupÃ©ration des donnÃ©es du Noeud
                me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_outtab_line(
                  EXPORTING
                    i_node_key     = lv_node_key_new_primary
                  IMPORTING
                    e_outtab_line  = ls_new_version_primary
                  EXCEPTIONS
                    node_not_found = 1
                    OTHERS         = 2
                ).

                &quot; Modification des donnÃ©es pour DÃ©sactiver la PrimaritÃ©
                ls_new_version_primary-version_primary      = abap_true.
                ls_new_version_primary-version_primary_icon = me-&gt;mo_main_tree-&gt;icon_version_primary_set( ls_new_version_primary-version_primary ).

                &quot; Modification du Noeud pour Activer la PrimaritÃ©
                me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;change_node(
                  EXPORTING
                    i_node_key     = lv_node_key_new_primary
                    i_outtab_line  = ls_new_version_primary
                  EXCEPTIONS
                    node_not_found = 1
                    OTHERS         = 2
                ).

              CATCH cx_sy_itab_line_not_found.

            ENDTRY.

          ENDIF.

        ENDIF.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affiche le message d&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Suppression des lignes dans l&apos;ALV
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;delete_subtree(
      EXPORTING
        i_node_key                = lv_selected_node
        i_update_parents_expander = abap_true
        i_update_parents_folder   = abap_true
      EXCEPTIONS
        node_key_not_in_model     = 1
        OTHERS                    = 2
    ).

    &quot; Modification de l&apos;affichage
    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;update_calculations( ).

  ENDMETHOD.

  METHOD handler_on_transport.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_answer TYPE c LENGTH 1.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le donnÃ©es Ã  sauvegarder
    &quot; -----------------------------------------------------------

    IF me-&gt;mo_main_tree-&gt;mo_main-&gt;is_changed( ) EQ abap_true.
      &quot; DonnÃ©es modifiÃ©es non persistÃ©e
      &quot;&quot;  --&gt; Affiche popup confirmation
      CALL FUNCTION &apos;POPUP_TO_CONFIRM_DATA_LOSS&apos;  &quot;#EC NOTEXT
        EXPORTING
          defaultoption = &apos;J&apos;                     &quot;#EC NOTEXT
          titel         = text-dlo
          start_column  = 5
          start_row     = 6
        IMPORTING
          answer        = lv_answer.
      IF lv_answer EQ &apos;J&apos;.                                  &quot;#EC NOTEXT
        &quot; Oui
        &quot;&quot;  --&gt; Sauvegarde
        go_main-&gt;save( ).

      ELSE.
        &quot; Non
        &quot;&quot;  --&gt; Affiche message action interompue
        MESSAGE w306(0t).
        RETURN.

      ENDIF.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Transport des Hardcodes
    &quot; -----------------------------------------------------------

    &quot; Transport Direct
    me-&gt;_hardcode_transport(
      iv_direct        = abap_true
      iv_advanced_mode = iv_advanced_mode
    ).

  ENDMETHOD.

  METHOD _hardcode_transport.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Transport des Hardcodes
    &quot; -----------------------------------------------------------

    IF iv_direct EQ abap_true.
      &quot; Transport Direct
      rs_return = me-&gt;_hardcode_transport_direct( iv_advanced_mode ).

    ELSE.
      &quot; Transport par OT
      rs_return = me-&gt;_hardcode_transport_ot( ).

    ENDIF.

  ENDMETHOD.

  METHOD _hardcode_transport_direct.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_hc_version   TYPE ztec_t_hc_vers_tt,
      lt_hc_attribute TYPE ztec_t_hc_attr_tt,
      lt_hc_parameter TYPE ztec_t_hc_param_tt.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
          ls_return TYPE bapiret2.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
          los_transport_target TYPE REF TO ts_transport_target.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
          lv_destination TYPE string.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Initialisation Pointeur sur Zone de Travail
    &quot; -----------------------------------------------------------

    &quot; Initialisation RÃ©fÃ©rence sur la zone de travail
    los_transport_target = REF #( gs_transport_target ).

    &quot; Initialisation valeur par dÃ©faut
    los_transport_target-&gt;mandant = &apos;200&apos;.                  &quot;#EC NOTEXT

    &quot; -----------------------------------------------------------
    &quot; Transport des Hardcodes - SÃ©lection
    &quot; -----------------------------------------------------------

    IF iv_advanced_mode EQ abap_true.
      &quot; Navigue vers l&apos;Ã©cran de Gestion AvancÃ©
      CALL SCREEN 0301.

    ELSE.
      &quot; Pop-Up sÃ©lection systÃ¨me cible / mandant cible
      &quot;&quot;  --&gt; Affiche Ecran saisie
      CALL SCREEN 0302 STARTING AT 10 10.

    ENDIF.

    IF los_transport_target-&gt;cancel EQ abap_true
    OR (
             los_transport_target-&gt;transport_all  EQ abap_false
         AND los_transport_target-&gt;transport_node IS INITIAL
       ).
      &quot; Annulation Transport // Pas de Noeud Ã  transporter
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Transport des Hardcodes - DÃ©termination Hardcode
    &quot; -----------------------------------------------------------

    IF los_transport_target-&gt;transport_all EQ abap_true.
      &quot; Transport de tous les Hardcodes
      me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;data_get(
        IMPORTING
          et_version   = lt_hc_version
          et_parameter = lt_hc_parameter
          et_attribute = lt_hc_attribute
*          et_join      =     &quot; Type de table ZVTEC_T_HC
      ).

    ELSE.
      &quot; RÃ©cupÃ©ration Hardcode Ã  Transporter

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Modification donnÃ©es avant MÃ J SystÃ¨me Cible
    &quot; -----------------------------------------------------------

    &quot; Version
    LOOP AT lt_hc_version ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_version&gt;).

      &lt;lfs_s_hc_version&gt;-mandt = los_transport_target-&gt;mandant.

    ENDLOOP.

    &quot; ParamÃ¨tres
    LOOP AT lt_hc_parameter ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_parameter&gt;).

      &lt;lfs_s_hc_parameter&gt;-mandt = los_transport_target-&gt;mandant.

    ENDLOOP.

    &quot; Attributs
    LOOP AT lt_hc_attribute ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_attribute&gt;).

      &lt;lfs_s_hc_attribute&gt;-mandt = los_transport_target-&gt;mandant.

    ENDLOOP.

    &quot; -----------------------------------------------------------
    &quot; Transport des Hardcodes
    &quot; -----------------------------------------------------------

    &quot; DÃ©termination DÃ©stination
    lv_destination = |{ los_transport_target-&gt;system }CLNT{ los_transport_target-&gt;mandant }|. &quot;#EC NOTEXT

    &quot; Transport des Hardcodes
    CALL FUNCTION &apos;Z_HC_TRANSPORT&apos;
      DESTINATION lv_destination
      EXPORTING
        iv_repid              = me-&gt;mo_main_tree-&gt;mv_repid
        it_hc_version         = lt_hc_version
        it_hc_parameter       = lt_hc_parameter
        it_hc_attribute       = lt_hc_attribute
      IMPORTING
        es_return             = ls_return
      EXCEPTIONS
        system_failure        = 1 MESSAGE ls_return-message
        communication_failure = 2 MESSAGE ls_return-message
        OTHERS                = 3.
    IF sy-subrc NE 0 OR ls_return-type CS &apos;AE&apos;.             &quot;#EC NOTEXT
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Affiche Message d&apos;erreur
      MESSAGE ID sy-msgid TYPE if_msg_output=&gt;msgtype_success
          NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
                  DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ELSE.
      &quot; Hardcode transportÃ©
      &quot;&quot;  --&gt; Affichage message
      MESSAGE s008(zhardcode).

    ENDIF.

  ENDMETHOD.

  METHOD _hardcode_transport_ot.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***
    TYPES :
      BEGIN OF lts_param_version_guid,
        parameter_guid TYPE ztec_t_hc_param-parameter_guid,
        version_guid   TYPE ztec_t_hc_param-version_guid,
      END OF   lts_param_version_guid.

    TYPES : ltt_param_version_guid TYPE STANDARD TABLE OF lts_param_version_guid
            WITH NON-UNIQUE KEY primary_key COMPONENTS parameter_guid version_guid.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_vers_guid_to_del  TYPE epic_t_guid,
      lt_attr_guid_to_del  TYPE epic_t_guid,
      lt_param_guid_to_del TYPE epic_t_guid.

    DATA :
      lt_param_version_guid   TYPE ltt_param_version_guid,
      lt_vers_guid_to_create  TYPE epic_t_guid,
      lt_attr_guid_to_create  TYPE epic_t_guid,
      lt_param_guid_to_create TYPE epic_t_guid.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Extraction des GUIDs
    &quot; -----------------------------------------------------------

    &quot; Extraction des GUIDs
    LOOP AT me-&gt;mo_main_tree-&gt;ms_display_element-data-t_display_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_display_data&gt;).

      AT NEW version_guid.
        &quot; A chaque changement de Version
        IF NOT &lt;lfs_s_display_data&gt;-version_guid IS INITIAL.
          &quot;&quot;  --&gt; Ajout du GUID de Version
          APPEND &lt;lfs_s_display_data&gt;-version_guid TO lt_vers_guid_to_create.

        ENDIF.

      ENDAT.

      AT NEW parameter_guid.
        &quot; A chaque changement de ParamÃ¨tre
        IF NOT &lt;lfs_s_display_data&gt;-parameter_guid IS INITIAL.
          &quot;&quot;  --&gt; Ajout du GUID de ParamÃ¨tre
          APPEND &lt;lfs_s_display_data&gt;-parameter_guid TO lt_param_guid_to_create.

          &quot;&quot;  --&gt; Ajout Combinaison Version / ParamÃ¨tre
          APPEND VALUE #(
            parameter_guid = &lt;lfs_s_display_data&gt;-parameter_guid
            version_guid   = &lt;lfs_s_display_data&gt;-version_guid
          ) TO lt_param_version_guid.

        ENDIF.

      ENDAT.

      AT NEW attribute_guid_regroup.
        &quot; A chaque changement d&apos;Attribut
        IF NOT &lt;lfs_s_display_data&gt;-attribute_guid_regroup IS INITIAL.
          &quot;&quot;  --&gt; Ajout du GUID Attribut
          APPEND &lt;lfs_s_display_data&gt;-attribute_guid_regroup TO lt_attr_guid_to_create.

        ENDIF.

      ENDAT.

    ENDLOOP.

    &quot; Tri et Suppression des Doublons
    SORT lt_vers_guid_to_create.  DELETE ADJACENT DUPLICATES FROM lt_vers_guid_to_create.
    SORT lt_attr_guid_to_create.  DELETE ADJACENT DUPLICATES FROM lt_attr_guid_to_create.
    SORT lt_param_guid_to_create. DELETE ADJACENT DUPLICATES FROM lt_param_guid_to_create.

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration des Clefs Ã  supprimer
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration des clefs de Version Ã  supprimer
    SELECT version_guid FROM ztec_t_hc_vers
                  INTO TABLE lt_vers_guid_to_del
          FOR ALL ENTRIES IN lt_vers_guid_to_create
                       WHERE version_guid NE lt_vers_guid_to_create-table_line
                         AND repid        EQ me-&gt;mo_main_tree-&gt;mv_repid.
    IF NOT lt_vers_guid_to_del[] IS INITIAL.
      &quot; RÃ©cupÃ©ration des clefs de ParamÃ¨tres relatifs aux Versions supprimÃ©es
      SELECT parameter_guid FROM ztec_t_hc_param
                      INTO TABLE lt_param_guid_to_del
              FOR ALL ENTRIES IN lt_vers_guid_to_del
                           WHERE version_guid EQ lt_vers_guid_to_del-table_line.

    ENDIF.

    &quot; RÃ©cupÃ©ration des Clefs de ParamÃ¨tres Ã  supprimer
    SELECT parameter_guid FROM ztec_t_hc_param
               APPENDING TABLE lt_param_guid_to_del
            FOR ALL ENTRIES IN lt_param_version_guid
                         WHERE parameter_guid NE lt_param_version_guid-parameter_guid
                           AND version_guid   EQ lt_param_version_guid-version_guid.

    IF NOT lt_param_guid_to_del[] IS INITIAL.
      &quot; RÃ©cupÃ©ration des clefs d&apos;Attributs Ã  supprimer
      SELECT attribute_guid_regroup FROM ztec_t_hc_attr
                              INTO TABLE lt_attr_guid_to_del
                      FOR ALL ENTRIES IN lt_param_guid_to_del
                                   WHERE attribute_guid_regroup EQ lt_param_guid_to_del-table_line.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; GÃ©nÃ©ration de l&apos;Ordre de Transport
    &quot; -----------------------------------------------------------

    &quot; GÃ©nÃ©ration de l&apos;OT
    DATA(lv_order) = lcl_main=&gt;transport_request_create(
        it_vers_guid_to_del     = lt_vers_guid_to_del
        it_attr_guid_to_del     = lt_attr_guid_to_del
        it_param_guid_to_del    = lt_param_guid_to_del
        it_vers_guid_to_create  = lt_vers_guid_to_create
        it_attr_guid_to_create  = lt_attr_guid_to_create
        it_param_guid_to_create = lt_param_guid_to_create
    ).

    IF lv_order IS INITIAL.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; Affiche message action interompue
      MESSAGE w306(0t).
      RETURN.

    ELSE.
      &quot; Affichage message de succÃ¨s
      MESSAGE s003(zhardcode) WITH lv_order.

    ENDIF.

  ENDMETHOD.

  METHOD handler_on_update_shm.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_answer TYPE c LENGTH 1.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le donnÃ©es Ã  sauvegarder
    &quot; -----------------------------------------------------------

    IF me-&gt;mo_main_tree-&gt;mo_main-&gt;is_changed( ) EQ abap_true.
      &quot; DonnÃ©es modifiÃ©es non persistÃ©e
      &quot;&quot;  --&gt; Affiche popup confirmation
      CALL FUNCTION &apos;POPUP_TO_CONFIRM_DATA_LOSS&apos;  &quot;#EC NOTEXT
        EXPORTING
          defaultoption = &apos;J&apos;                     &quot;#EC NOTEXT
          titel         = text-dlo
          start_column  = 5
          start_row     = 6
        IMPORTING
          answer        = lv_answer.
      IF lv_answer EQ &apos;J&apos;.                                  &quot;#EC NOTEXT
        &quot; Oui
        &quot;&quot;  --&gt; Sauvegarde
        go_main-&gt;save( ).

      ELSE.
        &quot; Non
        &quot;&quot;  --&gt; Affiche message action interompue
        MESSAGE w306(0t).
        RETURN.

      ENDIF.

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Mise Ã  jour dans la SHM
        &quot; -----------------------------------------------------------

        &quot; Pousse les modifications (SauvegardÃ©es) dans la SHM
        zcl_hardcode_shm=&gt;get_instance(
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;mv_repid
        )-&gt;hardcode_reload( ).

        &quot; Affiche message succÃ¨s
        MESSAGE s601(zhardcode) WITH me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;mv_repid.

      CATCH zcx_hardcode_shm.
        &quot; Erreur

    ENDTRY.

  ENDMETHOD.

  METHOD handler_on_attribute_create.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_code_source           TYPE stringtab,
      lr_ranges_value          TYPE tt_r_ranges,
      lt_attribute_range_value TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_code_source           TYPE lcl_main_tree=&gt;ts_code_source,
      ls_selected_line         TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_attribute_range       TYPE lcl_main_tree=&gt;ts_attribute_range,
      ls_hardcode_data_new     TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_attribute_logical_key TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_cancel          TYPE flag,
      lv_subrc           TYPE sy-subrc,
      lv_parent_node_key TYPE lvc_nkey.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_t_code_source&gt;     TYPE lcl_main_tree=&gt;tt_code_source,
      &lt;lfs_t_attribute_range&gt; TYPE lcl_main_tree=&gt;tt_attribute_range.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration donnÃ©es Noeud sÃ©lectionnÃ©
    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      EXPORTING
        iv_parent_node_ref = me-&gt;mo_main_tree-&gt;ms_display_element-display_element-t_hierarchy[ node_level = 2 ]-node_level_key_fieldname
      IMPORTING
        ev_subrc           = lv_subrc
        ev_parent_node_key = lv_parent_node_key
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le cohÃ©rence de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    IF ls_selected_line-parameter_guid IS INITIAL.
      &quot; Pas de GUID de ParamÃ¨tre // Il s&apos;agit d&apos;une ligne &quot;Version&quot;
      &quot;&quot;  --&gt; Affiche message d&apos;erreur
      MESSAGE s104(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error.
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Initialisation donnÃ©es de base
    &quot; -----------------------------------------------------------

    &quot; RÃ©initialisation donnÃ©es Attributs
    CLEAR : ls_selected_line-attribute_name,           ls_selected_line-attribute_key1,
            ls_selected_line-attribute_key2,           ls_selected_line-attribute_key3,
            ls_selected_line-attribute_as_range,       ls_selected_line-attribute_key4,
            ls_selected_line-attribute_as_range_icon,  ls_selected_line-attribute_guid_regroup,
            ls_selected_line-attribute_as_code_source, ls_selected_line-attribute_as_code_source_icon.

    &quot; Initialisation des donnÃ©es
    MOVE-CORRESPONDING ls_selected_line TO ls_hardcode_data_new.

    &quot; -----------------------------------------------------------
    &quot; Pop-Up saisi du Nom
    &quot; -----------------------------------------------------------

    ls_hardcode_data_new-attribute_name = me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
      EXPORTING
        iv_title = text-nat
      IMPORTING
        ev_subrc = lv_subrc
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Pop-Up saisie des donnÃ©es
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree-&gt;attribute_detail_display(
      IMPORTING
        ev_cancel                = lv_cancel
        et_code_source           = lt_code_source
        er_ranges_value          = lr_ranges_value
        et_attribute_range_value = lt_attribute_range_value
      CHANGING
        cs_hardcode_data         = ls_hardcode_data_new
    ).
    IF  lv_cancel EQ abap_true
    AND ls_hardcode_data_new-attribute_guid_regroup IS INITIAL.
      &quot; La crÃ©ation de l&apos;Attribut a Ã©tÃ© annulÃ©
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; CrÃ©ation de l&apos;Attribut
        &quot; -----------------------------------------------------------

        &quot; Initialisation donnÃ©es
        MOVE-CORRESPONDING ls_hardcode_data_new TO ls_attribute_logical_key.

        &quot; CrÃ©ation du Nouvelle Attribut
        ls_hardcode_data_new-attribute_guid_regroup = me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;attribute_add(
            iv_parameter_guid        = ls_selected_line-parameter_guid
            is_attribute_logical_key = ls_attribute_logical_key
            ir_ranges_value          = lr_ranges_value
            it_code_source           = lt_code_source
        ).

        &quot; -----------------------------------------------------------
        &quot; Ajout du Noeud
        &quot; -----------------------------------------------------------

        IF ls_hardcode_data_new-attribute_as_range EQ abap_true.
          &quot; Initialisation IcÃ´ne
          ls_hardcode_data_new-attribute_as_range_icon = text-ira.

        ENDIF.

        IF ls_hardcode_data_new-attribute_as_code_source EQ abap_true.
          &quot; Initialisation IcÃ´ne
          ls_hardcode_data_new-attribute_as_code_source_icon = text-ics.

        ENDIF.

        &quot; Ajout du Noeud
        me-&gt;mo_main_tree-&gt;node_add(
          is_data            = ls_hardcode_data_new
          iv_node_level      = lcl_main_tree=&gt;mc_node_level_attribute
          iv_node_parent     = lv_parent_node_key
        ).

        &quot; -----------------------------------------------------------
        &quot; Alimentation donnÃ©es de l&apos;Attribut
        &quot; -----------------------------------------------------------

        &quot; RÃ©cupÃ©ration table des Ranges du Programme
        ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                             ]-t_attribute_range TO &lt;lfs_t_attribute_range&gt;.  &quot;ForcÃ©ment rÃ©ussi
        IF sy-subrc EQ 0.
          &quot; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
          READ TABLE &lt;lfs_t_attribute_range&gt;
          WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
               ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute_range&gt;).
          IF sy-subrc NE 0.
            &quot; Aucune entrÃ©e existante pour cet Attribut
            ls_attribute_range-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
            INSERT ls_attribute_range INTO TABLE &lt;lfs_t_attribute_range&gt; ASSIGNING &lt;lfs_s_attribute_range&gt;.

          ENDIF.

          &quot; Modification valeurs des ranges
          &lt;lfs_s_attribute_range&gt;-t_attribute_range_value = lt_attribute_range_value.

        ENDIF.

        &quot; RÃ©cupÃ©ration table des Codes Sources du Programme
        ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                             ]-t_code_source TO &lt;lfs_t_code_source&gt;.  &quot;ForcÃ©ment rÃ©ussi
        IF sy-subrc EQ 0.
          &quot; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
          READ TABLE &lt;lfs_t_code_source&gt;
          WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
               ASSIGNING FIELD-SYMBOL(&lt;lfs_s_code_source&gt;).
          IF sy-subrc NE 0.
            &quot; Aucune entrÃ©e existante pour cet Attribut
            ls_code_source-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
            INSERT ls_code_source INTO TABLE &lt;lfs_t_code_source&gt; ASSIGNING &lt;lfs_s_code_source&gt;.

          ENDIF.

          &quot; Modification Code Source
          &lt;lfs_s_code_source&gt;-t_code_source = lt_code_source.

        ENDIF.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD handler_on_version_primary_set.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_selected_line       TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_old_version_primary TYPE lcl_main_tree=&gt;ts_hc_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc                TYPE sy-subrc,
      lv_selected_node        TYPE lvc_nkey,
      lv_node_key_old_primary TYPE lvc_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      IMPORTING
        ev_subrc         = lv_subrc
        ev_selected_node = lv_selected_node
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; DÃ©termination Type de Noeud
    &quot; -----------------------------------------------------------

    IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL
    OR NOT ls_selected_line-parameter_guid IS INITIAL.
      &quot; Il ne s&apos;agit pas d&apos;une ligne &quot;Version&quot;
      &quot;&quot;  --&gt; Affichage message d&apos;erreur
      MESSAGE s002(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error. &quot;#EC NOTEXT
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration de l&apos;ancien Noeud Primaire
    &quot; -----------------------------------------------------------

    TRY.
        &quot; RÃ©cupÃ©ration du NumÃ©ro de Noeud
        lv_node_key_old_primary = me-&gt;mo_main_tree-&gt;mt_level_node_key[ node_text = me-&gt;mo_main_tree-&gt;ms_display_element-data-t_display_data[
                                                                                     version_primary = abap_true
                                                                                   ]-version_id
                                                                     ]-node_key.

        &quot; RÃ©cupÃ©ration des donnÃ©es du Noeud
        me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_outtab_line(
          EXPORTING
            i_node_key     = lv_node_key_old_primary
          IMPORTING
            e_outtab_line  = ls_old_version_primary
          EXCEPTIONS
            node_not_found = 1
            OTHERS         = 2
        ).

      CATCH cx_sy_itab_line_not_found.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Modification des donnÃ©es
    &quot; -----------------------------------------------------------

    IF ls_selected_line EQ ls_old_version_primary.
      &quot; Ligne sÃ©lectionnÃ© = Ancienne Ligne primaire
      &quot;&quot;  --&gt; RÃ©cupÃ©ration de la premiÃ¨re Version
      lv_selected_node = &apos;          1&apos;.                     &quot;#EC NOTEXT
      me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_outtab_line(
        EXPORTING
          i_node_key     = lv_selected_node
        IMPORTING
          e_outtab_line  = ls_selected_line
        EXCEPTIONS
          node_not_found = 1
          OTHERS         = 2
      ).

    ENDIF.

    &quot; Modification des donnÃ©es pour Activer la PrimaritÃ©
    ls_selected_line-version_primary      = abap_true.
    ls_selected_line-version_primary_icon = me-&gt;mo_main_tree-&gt;icon_version_primary_set( ls_selected_line-version_primary ).

    &quot; Modification des donnÃ©es pour DÃ©sactiver la PrimaritÃ©
    ls_old_version_primary-version_primary      = abap_false.
    ls_old_version_primary-version_primary_icon = me-&gt;mo_main_tree-&gt;icon_version_primary_set( ls_old_version_primary-version_primary ).

    &quot; -----------------------------------------------------------
    &quot; Modification du Noeud
    &quot; -----------------------------------------------------------

    TRY.
        &quot; Modification de la PrimaritÃ©
        me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;version_primary_set( iv_version_guid = ls_selected_line-version_guid ).

        &quot; Modification du Noeud pour Activer la PrimaritÃ©
        me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;change_node(
          EXPORTING
            i_node_key     = lv_selected_node
            i_outtab_line  = ls_selected_line
          EXCEPTIONS
            node_not_found = 1
            OTHERS         = 2
        ).

        &quot; Modification du Noeud pour DÃ©sactiver la PrimaritÃ©
        me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;change_node(
          EXPORTING
            i_node_key     = lv_node_key_old_primary
            i_outtab_line  = ls_old_version_primary
          EXCEPTIONS
            node_not_found = 1
            OTHERS         = 2
        ).

        &quot; Modification de l&apos;affichage
        me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;update_calculations( ).

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD handler_on_copy.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_children             TYPE lvc_t_nkey,
      lt_attribute_data       TYPE ztec_t_hc_attr_tt,
      lt_parameter_data       TYPE ztec_t_hc_param_tt,
      lt_attribute_range_data TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_data.

    DATA :
      lot_code_source           TYPE REF TO stringtab,
      lot_attribute_range_value TYPE REF TO zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_code_source       TYPE lcl_main_tree=&gt;ts_code_source,
      ls_version_data      TYPE ztec_t_hc_vers,
      ls_selected_line     TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_attribute_data    TYPE ztec_t_hc_attr,
      ls_parameter_data    TYPE ztec_t_hc_param,
      ls_attribute_range   TYPE lcl_main_tree=&gt;ts_attribute_range,
      ls_hardcode_data_new TYPE lcl_main_tree=&gt;ts_hc_data.

    DATA :
      ls_attribute_detail           TYPE ts_attribute_detail_ref,
      ls_attribute_range_data       TYPE zcl_hardcode_maintain=&gt;ty_attribute_range_data,
      ls_new_attribute_logical_key  TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key,
      ls_new_attribute_logical_keyx TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_keyx.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc                TYPE sy-subrc,
      lv_cancel               TYPE c LENGTH 1,
      lv_answer               TYPE c LENGTH 1,
      lv_name_new             TYPE string,
      lv_selected_node        TYPE lvc_nkey,
      lv_parent_node_key      TYPE lvc_nkey,
      lv_version_node_key     TYPE lvc_nkey,
      lv_parameter_node_key   TYPE lvc_nkey,
      lv_node_key_new_primary TYPE lvc_nkey.

***------------------------------------------------------------------***
**                          FIELD-SYMBOLS                             **
***------------------------------------------------------------------***
    FIELD-SYMBOLS :
      &lt;lfs_s_code_source&gt;     TYPE lcl_main_tree=&gt;ts_code_source,
      &lt;lfs_t_code_source&gt;     TYPE lcl_main_tree=&gt;tt_code_source,
      &lt;lfs_s_attribute_range&gt; TYPE lcl_main_tree=&gt;ts_attribute_range,
      &lt;lfs_t_attribute_range&gt; TYPE lcl_main_tree=&gt;tt_attribute_range.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      IMPORTING
        ev_subrc           = lv_subrc
        ev_selected_node   = lv_selected_node
        ev_parent_node_key = lv_parent_node_key
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le avant suppression
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;get_children(
      EXPORTING
        i_node_key         = lv_selected_node
      IMPORTING
        et_children        = lt_children
      EXCEPTIONS
        historic_error     = 1
        node_key_not_found = 2
        OTHERS             = 3
    ).

    &quot; -----------------------------------------------------------
    &quot; Saisie du nouveau Nom
    &quot; -----------------------------------------------------------

    IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL.
      &quot; Attribut
      lv_name_new = CONV #( me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
                              iv_title = text-tcy
                              iv_text  = ls_selected_line-attribute_name
                          )
                    ).

      &quot; Initialisation des donnÃ©es pour Affichage gestion Nouvel Attribut
      CREATE DATA ls_attribute_detail-attribute_name.
      ls_attribute_detail-attribute_name-&gt;*    = lv_name_new.
      CREATE DATA ls_attribute_detail-attribute_key1.
      ls_attribute_detail-attribute_key1-&gt;*    = ls_selected_line-attribute_key1.
      CREATE DATA ls_attribute_detail-attribute_key2.
      ls_attribute_detail-attribute_key2-&gt;*    = ls_selected_line-attribute_key2.
      CREATE DATA ls_attribute_detail-attribute_key3.
      ls_attribute_detail-attribute_key3-&gt;*     = ls_selected_line-attribute_key3.
      CREATE DATA ls_attribute_detail-attribute_key4.
      ls_attribute_detail-attribute_key4-&gt;*     = ls_selected_line-attribute_key4.
      CREATE DATA ls_attribute_detail-attribute_as_range.
      ls_attribute_detail-attribute_as_range-&gt;* = ls_selected_line-attribute_as_range.
      CREATE DATA ls_attribute_detail-attribute_as_code_source.
      ls_attribute_detail-attribute_as_code_source-&gt;* = ls_selected_line-attribute_as_code_source.

      &quot; Initialisation Range
      CREATE DATA lot_attribute_range_value.
      TRY.
          lot_attribute_range_value-&gt;* =
            me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
              ]-t_attribute_range[ attribute_guid_regroup = ls_selected_line-attribute_guid_regroup
                                 ]-t_attribute_range_value.

        CATCH cx_sy_itab_line_not_found.
          &quot; Aucune valeur

      ENDTRY.

      &quot; Initialisation Code Source
      CREATE DATA lot_code_source.
      TRY.
          lot_code_source-&gt;* =
            me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
              ]-t_code_source[ attribute_guid_regroup = ls_selected_line-attribute_guid_regroup
                             ]-t_code_source.

        CATCH cx_sy_itab_line_not_found.
          &quot; Aucune valeur

      ENDTRY.

      &quot; Affichage outil saisi des donnÃ©es
      me-&gt;mo_main_tree-&gt;mo_attribute_detail-&gt;process(
        IMPORTING
          ev_cancel                     = lv_cancel
          es_new_attribute_logical_key  = ls_new_attribute_logical_key
          es_new_attribute_logical_keyx = ls_new_attribute_logical_keyx
        CHANGING
          cot_code_source               = lot_code_source
          cs_attribute_detail           = ls_attribute_detail
          cot_attribute_range_value     = lot_attribute_range_value
      ).
      IF lv_cancel EQ abap_true.
        &quot; L&apos;utilisateur Ã  annulÃ© les modifications
        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

      ENDIF.

    ELSEIF NOT ls_selected_line-parameter_guid IS INITIAL.
      &quot; ParamÃ¨tre
      lv_name_new = CONV #( me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
                              iv_title = text-tcy
                              iv_text  = ls_selected_line-parameter_name
                          )
                    ).

    ELSEIF NOT ls_selected_line-version_guid IS INITIAL.
      &quot; Version
      lv_name_new = CONV #( me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
                              iv_title = text-tcy
                              iv_text  = ls_selected_line-version_id
                          )
                    ).

    ENDIF.
    IF lv_name_new IS INITIAL.
      &quot; Pas de Nom saisi
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Copie des Hardcodes
        &quot; -----------------------------------------------------------

        IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL.
          &quot; Attribut
          &quot;&quot;  --&gt; Copie de l&apos;Attribut
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;attribute_add(
            EXPORTING
              iv_parameter_guid         = ls_selected_line-parameter_guid
              is_attribute_logical_key  = ls_new_attribute_logical_key
              it_code_source            = lot_code_source-&gt;*
              ir_ranges_value           = CORRESPONDING tt_r_ranges( lot_attribute_range_value-&gt;*
                                                            MAPPING low    = attribute_low
                                                                    sign   = attribute_sign
                                                                    high   = attribute_high
                                                                    option = attribute_opti )
            IMPORTING
              es_attribute_data         = ls_attribute_data
              es_attribute_range_data   = ls_attribute_range_data
          ).

          &quot; Ajout de l&apos;entrÃ©e pour mutualisation traitement
          APPEND ls_attribute_range_data TO lt_attribute_range_data.

        ELSEIF NOT ls_selected_line-parameter_guid IS INITIAL.
          &quot; ParamÃ¨tre
          &quot;&quot;  --&gt; Copie du ParamÃ¨tre
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;parameter_copy(
            EXPORTING
              iv_parameter_guid_copy  = ls_selected_line-parameter_guid
              iv_parameter_name_new   = CONV #( lv_name_new )
              iv_copy_children        = abap_true
            IMPORTING
              es_parameter_data       = ls_parameter_data
              et_attribute_data       = lt_attribute_data
              et_attribute_range_data = lt_attribute_range_data
          ).

          &quot;&quot;  --&gt; Ajout des donnÃ©es du ParamÃ¨tre
          APPEND ls_parameter_data TO lt_parameter_data.

        ELSEIF NOT ls_selected_line-version_guid IS INITIAL.
          &quot; Version
          &quot;&quot;  --&gt; Copie de la Version
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;version_copy(
            EXPORTING
              iv_version_guid_copy    = ls_selected_line-version_guid
              iv_version_id_new       = CONV #( lv_name_new )
              iv_copy_children        = abap_true
            IMPORTING
              es_version_data         = ls_version_data
              et_parameter_data       = lt_parameter_data
              et_attribute_data       = lt_attribute_data
              et_attribute_range_data = lt_attribute_range_data
          ).

        ENDIF.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Tant pis, ce n&apos;est qu&apos;une copie ...
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

    ENDTRY.

    &quot; -----------------------------------------------------------
    &quot; Ajout des Noeuds
    &quot; -----------------------------------------------------------

    IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL.
      &quot; -----------------------------------------------------------
      &quot; Ajout de l&apos;Attribut dans l&apos;Affichage
      &quot; -----------------------------------------------------------

      &quot;&quot;  --&gt; Initialisation donnÃ©es Ã  afficher
      MOVE-CORRESPONDING ls_attribute_data TO ls_hardcode_data_new.

      IF ls_hardcode_data_new-attribute_as_range EQ abap_true.
        &quot;&quot;  --&gt; Initialisation IcÃ´ne
        ls_hardcode_data_new-attribute_as_range_icon = text-ira.

      ENDIF.

      IF ls_hardcode_data_new-attribute_as_code_source EQ abap_true.
        &quot;&quot;  --&gt; Initialisation IcÃ´ne
        ls_hardcode_data_new-attribute_as_code_source_icon = text-ics.

      ENDIF.

      &quot;&quot;  --&gt;  Ajout du Noeud
      me-&gt;mo_main_tree-&gt;node_add(
        is_data        = ls_hardcode_data_new
        iv_node_level  = lcl_main_tree=&gt;mc_node_level_attribute
        iv_node_parent = lv_parent_node_key
      ).

      &quot; -----------------------------------------------------------
      &quot; Alimentation donnÃ©es de l&apos;Attribut
      &quot; -----------------------------------------------------------

      &quot;&quot;  --&gt; RÃ©cupÃ©ration table des Ranges du Programme
      ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                           ]-t_attribute_range TO &lt;lfs_t_attribute_range&gt;.  &quot;ForcÃ©ment rÃ©ussi
      IF sy-subrc EQ 0.
        &quot;&quot;  --&gt; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
        READ TABLE &lt;lfs_t_attribute_range&gt;
        WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
             ASSIGNING &lt;lfs_s_attribute_range&gt;.
        IF sy-subrc NE 0.
          &quot; Aucune entrÃ©e existante pour cet Attribut
          &quot;&quot;  --&gt; Ajout de l&apos;EntrÃ©e
          ls_attribute_range-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
          INSERT ls_attribute_range INTO TABLE &lt;lfs_t_attribute_range&gt; ASSIGNING &lt;lfs_s_attribute_range&gt;.

        ENDIF.

      ENDIF.

      &quot;&quot;  --&gt; RÃ©cupÃ©ration table des Codes Sources du Programme
      ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                           ]-t_code_source TO &lt;lfs_t_code_source&gt;.  &quot;ForcÃ©ment rÃ©ussi
      IF sy-subrc EQ 0.
        &quot;&quot;  --&gt; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
        READ TABLE &lt;lfs_t_code_source&gt;
        WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
             ASSIGNING &lt;lfs_s_code_source&gt;.
        IF sy-subrc NE 0.
          &quot; Aucune entrÃ©e existante pour cet Attribut
          &quot;&quot;  --&gt; Ajout de l&apos;EntrÃ©e
          ls_code_source-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
          INSERT ls_code_source INTO TABLE &lt;lfs_t_code_source&gt; ASSIGNING &lt;lfs_s_code_source&gt;.

        ENDIF.

      ENDIF.

    ELSEIF NOT ls_selected_line-parameter_guid IS INITIAL
        OR NOT ls_selected_line-version_guid   IS INITIAL.

      IF NOT ls_selected_line-parameter_guid IS INITIAL.
        &quot; Utilisation de la Version courante comme Noeud parent
        lv_version_node_key = lv_parent_node_key.

      ELSE.
        &quot; -----------------------------------------------------------
        &quot; Ajout de la Version (+Enfants) dans l&apos;Affichage
        &quot; -----------------------------------------------------------

        &quot;&quot;  --&gt; Initialisation des donnÃ©es
        MOVE-CORRESPONDING ls_version_data TO ls_hardcode_data_new.
        ls_hardcode_data_new-version_primary_icon = me-&gt;mo_main_tree-&gt;icon_version_primary_set( ls_hardcode_data_new-version_primary ).

        &quot;&quot;  --&gt; Ajout du Noeud
        lv_version_node_key = me-&gt;mo_main_tree-&gt;node_add(
          is_data       = ls_hardcode_data_new
          iv_node_level = lcl_main_tree=&gt;mc_node_level_version
        ).

      ENDIF.

      &quot; -----------------------------------------------------------
      &quot; Ajout de la Version (+Enfants) dans l&apos;Affichage
      &quot; -----------------------------------------------------------

      &quot; Tri des donnÃ©es
      SORT :
        lt_parameter_data BY parameter_guid,
        lt_attribute_data BY parameter_guid attribute_guid_regroup attribute_guid.

      &quot; Parcours l&apos;ensemble des ParamÃ¨tres
      LOOP AT lt_parameter_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_parameter_data&gt;).

        CLEAR : ls_hardcode_data_new, lv_parameter_node_key.

        &quot; Ajout du ParamÃ¨tre dans l&apos;Affichage
        MOVE-CORRESPONDING &lt;lfs_s_parameter_data&gt; TO ls_hardcode_data_new.

        &quot; Ajout du Noeud
        lv_parameter_node_key = me-&gt;mo_main_tree-&gt;node_add(
          is_data        = ls_hardcode_data_new
          iv_node_level  = lcl_main_tree=&gt;mc_node_level_parameter
          iv_node_parent = lv_version_node_key
        ).

        &quot; RÃ©cupÃ©ration premiÃ¨re occurence des Attributs du ParamÃ¨tre
        READ TABLE lt_attribute_data WITH KEY parameter_guid = &lt;lfs_s_parameter_data&gt;-parameter_guid
                          TRANSPORTING NO FIELDS BINARY SEARCH.
        IF sy-subrc EQ 0.
          &quot; Au moins une correspondance
          &quot;&quot;  --&gt; Parcours l&apos;ensemble des Attributs du ParamÃ¨tre
          LOOP AT lt_attribute_data ASSIGNING FIELD-SYMBOL(&lt;lfs_s_attribute_data&gt;)
                                         FROM sy-tabix.

            CLEAR : ls_hardcode_data_new, ls_attribute_data.

            IF &lt;lfs_s_attribute_data&gt;-parameter_guid NE &lt;lfs_s_parameter_data&gt;-parameter_guid.
              &quot; On ne traite plus le mÃªme ParamÃ¨tre
              &quot;&quot;  --&gt; ArrÃªt de la boucle
              EXIT.

            ENDIF.

            &quot; Initialisation donnÃ©es Ã  afficher
            MOVE-CORRESPONDING &lt;lfs_s_attribute_data&gt; TO ls_hardcode_data_new.

            IF ls_hardcode_data_new-attribute_as_range EQ abap_true.
              &quot; Attribut utilisation Range
              &quot;&quot;  --&gt; Initialisation IcÃ´ne
              ls_hardcode_data_new-attribute_as_range_icon = text-ira.

            ENDIF.

            IF ls_hardcode_data_new-attribute_as_code_source EQ abap_true.
              &quot; Attribut utilisation Code Source
              &quot;&quot;  --&gt; Initialisation IcÃ´ne
              ls_hardcode_data_new-attribute_as_range_icon = text-ics.

            ENDIF.

            &quot; Ajout du Noeud
            me-&gt;mo_main_tree-&gt;node_add(
              is_data        = ls_hardcode_data_new
              iv_node_level  = lcl_main_tree=&gt;mc_node_level_attribute
              iv_node_parent = lv_parameter_node_key
            ).

            &quot; -----------------------------------------------------------
            &quot; Alimentation donnÃ©es de l&apos;Attribut
            &quot; -----------------------------------------------------------

            &quot;&quot;  --&gt; RÃ©cupÃ©ration table des Ranges du Programme
            ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                                 ]-t_attribute_range TO &lt;lfs_t_attribute_range&gt;.  &quot;ForcÃ©ment rÃ©ussi
            IF sy-subrc EQ 0.
              &quot;&quot;  --&gt; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
              READ TABLE &lt;lfs_t_attribute_range&gt;
              WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
                   ASSIGNING &lt;lfs_s_attribute_range&gt;.
              IF sy-subrc NE 0.
                &quot; Aucune entrÃ©e existante pour cet Attribut
                &quot;&quot;  --&gt; Ajout de l&apos;EntrÃ©e
                ls_attribute_range-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
                INSERT ls_attribute_range INTO TABLE &lt;lfs_t_attribute_range&gt; ASSIGNING &lt;lfs_s_attribute_range&gt;.

              ENDIF.

              TRY.
                  &quot; Modification valeurs des ranges
                  &lt;lfs_s_attribute_range&gt;-t_attribute_range_value = lt_attribute_range_data[
                      attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
                    ]-t_attribute_range_value.

                CATCH cx_sy_itab_line_not_found.
                  &quot; Pas de correspondance
                  &quot;&quot;  --&gt; Tant pis ...

              ENDTRY.

            ENDIF.

**********ToDo : Gestion des Codes Sources lors de la copie des Versions
*            &quot;&quot;  --&gt; RÃ©cupÃ©ration table des Codes Sources du Programme
*            ASSIGN me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data[ repid = me-&gt;mo_main_tree-&gt;mv_repid
*                                                                 ]-t_code_source TO &lt;lfs_t_code_source&gt;.  &quot;ForcÃ©ment rÃ©ussi
*            IF sy-subrc EQ 0.
*              &quot;&quot;  --&gt; RÃ©cupÃ©ration entrÃ©e correspondant Ã  l&apos;Attribut
*              READ TABLE &lt;lfs_t_code_source&gt;
*              WITH TABLE KEY attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
*                   ASSIGNING &lt;lfs_s_code_source&gt;.
*              IF sy-subrc NE 0.
*                &quot; Aucune entrÃ©e existante pour cet Attribut
*                &quot;&quot;  --&gt; Ajout de l&apos;EntrÃ©e
*                ls_code_source-attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup.
*                INSERT ls_code_source INTO TABLE &lt;lfs_t_code_source&gt; ASSIGNING &lt;lfs_s_code_source&gt;.
*
*              ENDIF.
*
*              TRY.
*                  &quot; Modification valeurs des ranges
*                  &lt;lfs_s_code_source&gt;-t_code_source = lt_code_source[
*                      attribute_guid_regroup = ls_hardcode_data_new-attribute_guid_regroup
*                    ]-t_code_source.
*
*                CATCH cx_sy_itab_line_not_found.
*                  &quot; Pas de correspondance
*                  &quot;&quot;  --&gt; Tant pis ...
*
*              ENDTRY.
*
*            ENDIF.

          ENDLOOP.

        ENDIF.

      ENDLOOP.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Modification de l&apos;Affichage
    &quot; -----------------------------------------------------------

    &quot; Modification de l&apos;affichage
    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;update_calculations( ).

  ENDMETHOD.

  METHOD handler_on_modify.

***------------------------------------------------------------------***
**                             RANGES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_code_source  TYPE stringtab,
      lr_ranges_value TYPE tt_r_ranges.

***------------------------------------------------------------------***
**                             TABLES                                 **
***------------------------------------------------------------------***
    DATA :
      lt_attribute_range_value TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_code_source                TYPE lcl_main_tree=&gt;ts_code_source,
      ls_selected_line              TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_attribute_range            TYPE lcl_main_tree=&gt;ts_attribute_range,
      ls_new_attribute_logical_key  TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key,
      ls_new_attribute_logical_keyx TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_keyx.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_exception         TYPE REF TO cx_root,
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_cancel        TYPE flag,
      lv_subrc         TYPE sy-subrc,
      lv_node_text     TYPE lvc_value,
      lv_node_level    TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy-node_level,
      lv_selected_node TYPE lvc_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      IMPORTING
        ev_subrc         = lv_subrc
        ev_selected_node = lv_selected_node
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    TRY.
        &quot; -----------------------------------------------------------
        &quot; Modification des donnÃ©es internes
        &quot; -----------------------------------------------------------

        IF NOT ls_selected_line-attribute_guid_regroup IS INITIAL.
          &quot; Attribut
          &quot;&quot;  --&gt; Affichage outil saisi des donnÃ©es
          me-&gt;mo_main_tree-&gt;attribute_detail_display(
            IMPORTING
              ev_cancel                     = lv_cancel
              et_code_source                = lt_code_source
              er_ranges_value               = lr_ranges_value
              et_attribute_range_value      = lt_attribute_range_value
              es_new_attribute_logical_key  = ls_new_attribute_logical_key
              es_new_attribute_logical_keyx = ls_new_attribute_logical_keyx
            CHANGING
              cs_hardcode_data              = ls_selected_line
          ).
          IF lv_cancel EQ abap_true.
            &quot; L&apos;utilisateur Ã  annulÃ© les modifications
            &quot;&quot;  --&gt; ArrÃªt du traitement
            RETURN.

          ENDIF.

          &quot;&quot;  --&gt; Modification des donnÃ©es l&apos;Attribut
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;attribute_set(
              iv_parameter_guid              = ls_selected_line-parameter_guid
              iv_attribute_guid_regroup      = ls_selected_line-attribute_guid_regroup
              is_new_attribute_logical_key   = ls_new_attribute_logical_key
              is_new_attribute_logical_keyx  = ls_new_attribute_logical_keyx
              ir_new_ranges_value            = lr_ranges_value
              iv_replace_ranges_value        = abap_true
              iv_new_attribute_as_range      = ls_selected_line-attribute_as_range
              it_new_code_source_value       = lt_code_source
              iv_new_attribute_as_code_sourc = ls_selected_line-attribute_as_code_source
              iv_replace_code_source         = abap_true
          ).

          &quot;&quot;  --&gt; Initialisation donnÃ©es du Range
          READ TABLE me-&gt;mo_main_tree-&gt;ms_persistent_data-t_hc_data WITH TABLE KEY repid = me-&gt;mo_main_tree-&gt;mv_repid
                                                                         ASSIGNING FIELD-SYMBOL(&lt;lfs_s_hc_data&gt;).
          IF sy-subrc EQ 0.
            TRY.
                &quot;&quot;  --&gt; Modification valeurs du Range
                &lt;lfs_s_hc_data&gt;-t_attribute_range[ attribute_guid_regroup  = ls_selected_line-attribute_guid_regroup
                                                 ]-t_attribute_range_value = lt_attribute_range_value.

              CATCH cx_sy_itab_line_not_found.
                &quot; L&apos;entrÃ©e n&apos;existe pas
                &quot;&quot;  --&gt; CrÃ©ation d&apos;une nouvelle entrÃ©e
                ls_attribute_range-attribute_guid_regroup  = ls_selected_line-attribute_guid_regroup.
                ls_attribute_range-t_attribute_range_value = lt_attribute_range_value[].
                INSERT ls_attribute_range INTO TABLE &lt;lfs_s_hc_data&gt;-t_attribute_range.

            ENDTRY.

            TRY.
                &quot;&quot;  --&gt; Modification Code Source
                &lt;lfs_s_hc_data&gt;-t_code_source[ attribute_guid_regroup  = ls_selected_line-attribute_guid_regroup
                                             ]-t_code_source = lt_code_source.

              CATCH cx_sy_itab_line_not_found.
                &quot; L&apos;entrÃ©e n&apos;existe pas
                &quot;&quot;  --&gt; CrÃ©ation d&apos;une nouvelle entrÃ©e
                ls_code_source-attribute_guid_regroup  = ls_selected_line-attribute_guid_regroup.
                ls_code_source-t_code_source = lt_code_source[].
                INSERT ls_code_source INTO TABLE &lt;lfs_s_hc_data&gt;-t_code_source.

            ENDTRY.

          ENDIF.

          &quot;&quot;  --&gt; Modification des IcÃ´nes
          ls_selected_line-attribute_as_range_icon = me-&gt;mo_main_tree-&gt;icon_attribute_range_set(
            ls_selected_line-attribute_as_range
          ).
          ls_selected_line-attribute_as_code_source_icon = me-&gt;mo_main_tree-&gt;icon_attribute_code_source_set(
            ls_selected_line-attribute_as_code_source
          ).

          &quot;&quot;  --&gt; Initialisation niveau de Noeud
          lv_node_level = 3.                                &quot;#EC NOTEXT

        ELSEIF NOT ls_selected_line-parameter_guid IS INITIAL.
          &quot; ParamÃ¨tre
          &quot;&quot;  --&gt; PopUp saisi Nom
          ls_selected_line-parameter_name = me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
            EXPORTING
              iv_text  = ls_selected_line-parameter_name
              iv_title = text-npa
            IMPORTING
              ev_subrc = lv_subrc
          ).
          IF NOT lv_subrc IS INITIAL.
            &quot; Action interrompue
            &quot;&quot;  --&gt; ArrÃªt du traitement
            RETURN.

          ENDIF.

          &quot;&quot;  --&gt; Modification des donnÃ©es du ParamÃ¨tre
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;parameter_set(
              iv_parameter_guid     = ls_selected_line-parameter_guid
              iv_new_parameter_name = ls_selected_line-parameter_name
          ).

          &quot;&quot;  --&gt; Initialisation niveau de Noeud
          lv_node_level = 2.                                &quot;#EC NOTEXT

        ELSEIF NOT ls_selected_line-version_guid IS INITIAL.
          &quot; Version
          &quot;&quot;  --&gt; PopUp saisi Nom
          ls_selected_line-version_id = me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
            EXPORTING
              iv_text  = ls_selected_line-version_id
              iv_title = text-nve
            IMPORTING
              ev_subrc = lv_subrc
          ).
          IF NOT lv_subrc IS INITIAL.
            &quot; Action interrompue
            &quot;&quot;  --&gt; ArrÃªt du traitement
            RETURN.

          ENDIF.

          &quot;&quot;  --&gt; Modification des donnÃ©es de la Version
          me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;version_set(
              iv_version_guid   = ls_selected_line-version_guid
              iv_new_version_id = ls_selected_line-version_id
          ).

          &quot;&quot;  --&gt; Initialisation niveau de Noeud
          lv_node_level = 1.                                &quot;#EC NOTEXT

        ENDIF.

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affiche le message d&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

        &quot;&quot;  --&gt; ArrÃªt du traitement
        RETURN.

    ENDTRY.

    &quot; RÃ©cupÃ©ration configuration de l&apos;affichage
    zcl_gui_alv_tree_util=&gt;hierarchy_usage(
      EXPORTING
        is_data      = ls_selected_line
        is_hierarchy = me-&gt;mo_main_tree-&gt;ms_display_element-display_element-t_hierarchy[ lv_node_level ]
      IMPORTING
        es_node_data = ls_selected_line
        ev_node_text = lv_node_text
    ).

    &quot; -----------------------------------------------------------
    &quot; Modification des lignes dans l&apos;ALV
    &quot; -----------------------------------------------------------

    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;change_node(
      EXPORTING
        i_node_key     = lv_selected_node
        i_outtab_line  = ls_selected_line
        i_node_text    = lv_node_text
        i_u_node_text  = abap_true
      EXCEPTIONS
        node_not_found = 1
        OTHERS         = 2
    ).

    &quot; Modification de l&apos;affichage
    me-&gt;mo_main_tree-&gt;ms_display_element-display_element-o_alv_tree-&gt;update_calculations( ).

  ENDMETHOD.

  METHOD handler_on_version_create.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_version_data      TYPE ztec_t_hc_vers,
      ls_hardcode_data_new TYPE lcl_main_tree=&gt;ts_hc_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc           TYPE sy-subrc,
      lv_parent_node_key TYPE lvc_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; Pop-Up saisie du Nom
    &quot; -----------------------------------------------------------

    ls_hardcode_data_new-version_id = me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
      EXPORTING
        iv_title = text-nve
      IMPORTING
        ev_subrc = lv_subrc
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; ContrÃ´le validitÃ© de la saisie
    &quot; -----------------------------------------------------------

    IF ls_hardcode_data_new-version_id IS INITIAL
    OR ls_hardcode_data_new-version_id CS sy-abcde.
      &quot; Aucune saisie
      &quot;&quot;  --&gt; ArrÃªt du traitement
      MESSAGE s104(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error.
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Ajout du Noeud
    &quot; -----------------------------------------------------------

    TRY.
        &quot; CrÃ©ation de la nouvelle Version
        ls_hardcode_data_new-version_guid = me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;version_add(
          EXPORTING
           iv_version_id    = ls_hardcode_data_new-version_id
           iv_is_primary    = abap_false
          IMPORTING
            es_version_data = ls_version_data
         ).

        &quot; Initialisation des donnÃ©es
        MOVE-CORRESPONDING ls_version_data TO ls_hardcode_data_new.
        ls_hardcode_data_new-version_primary_icon = me-&gt;mo_main_tree-&gt;icon_version_primary_set( ls_hardcode_data_new-version_primary ).

        &quot; Ajout du Noeud
        me-&gt;mo_main_tree-&gt;node_add(
          is_data       = ls_hardcode_data_new
          iv_node_level = lcl_main_tree=&gt;mc_node_level_version
        ).

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

  METHOD handler_on_parameter_create.

***------------------------------------------------------------------***
**                            STRUCTURE                               **
***------------------------------------------------------------------***
    DATA :
      ls_selected_line     TYPE lcl_main_tree=&gt;ts_hc_data,
      ls_hardcode_data_new TYPE lcl_main_tree=&gt;ts_hc_data.

***------------------------------------------------------------------***
**                            INSTANCES                               **
***------------------------------------------------------------------***
    DATA :
      lo_cx_hardcode_maintain TYPE REF TO zcx_hardcode_maintain.

***------------------------------------------------------------------***
**                            VARIABLES                               **
***------------------------------------------------------------------***
    DATA :
      lv_subrc           TYPE sy-subrc,
      lv_parent_node_key TYPE lvc_nkey.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©e
    &quot; -----------------------------------------------------------

    &quot; RÃ©cupÃ©ration des donnÃ©es de la ligne sÃ©lectionnÃ©
    &quot;&quot; + RÃ©cupÃ©ration Noeud &apos;Version&apos; correspondant
    ls_selected_line = me-&gt;mo_main_tree-&gt;line_selected_get(
      EXPORTING
        iv_parent_node_ref = me-&gt;mo_main_tree-&gt;ms_display_element-display_element-t_hierarchy[ node_level = 1 ]-node_level_key_fieldname
      IMPORTING
        ev_subrc           = lv_subrc
        ev_parent_node_key = lv_parent_node_key
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Aucune lignÃ©e selÃ©ctionnÃ©e
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    &quot; Initialisation des donnÃ©es
    MOVE-CORRESPONDING ls_selected_line TO ls_hardcode_data_new.

    &quot; -----------------------------------------------------------
    &quot; Pop-Up saisie du Nom
    &quot; -----------------------------------------------------------

    ls_hardcode_data_new-parameter_name = me-&gt;mo_main_tree-&gt;mo_main-&gt;call_popup_input_simple(
      EXPORTING
        iv_title = text-npa
      IMPORTING
        ev_subrc = lv_subrc
    ).
    IF NOT lv_subrc IS INITIAL.
      &quot; Une erreur est survenue
      &quot;&quot;  --&gt; ArrÃªt du traitement
      RETURN.

    ENDIF.

    IF ls_hardcode_data_new-parameter_name IS INITIAL.
      &quot; Aucune saisie
      &quot;&quot;  --&gt; ArrÃªt du traitement
      MESSAGE s203(zhardcode) DISPLAY LIKE if_msg_output=&gt;msgtype_error.
      RETURN.

    ENDIF.

    &quot; -----------------------------------------------------------
    &quot; Ajout du Noeud
    &quot; -----------------------------------------------------------

    TRY.
        &quot; CrÃ©ation du Nouveau ParamÃ¨tre
        ls_hardcode_data_new-parameter_guid = me-&gt;mo_main_tree-&gt;mo_main-&gt;mo_hardcode_maintain-&gt;parameter_add(
            iv_version_guid   = ls_selected_line-version_guid
            iv_parameter_name = ls_hardcode_data_new-parameter_name
        ).

        &quot; Ajout du Noeud
        me-&gt;mo_main_tree-&gt;node_add(
          is_data            = ls_hardcode_data_new
          iv_node_level      = lcl_main_tree=&gt;mc_node_level_parameter
          iv_node_parent     = lv_parent_node_key
        ).

      CATCH zcx_hardcode_maintain INTO lo_cx_hardcode_maintain.
        &quot; Une erreur est survenue
        &quot;&quot;  --&gt; Affichage de l&apos;erreur
        WHILE lo_cx_hardcode_maintain-&gt;previous IS BOUND.
          lo_cx_hardcode_maintain ?= lo_cx_hardcode_maintain-&gt;previous.
        ENDWHILE.
        MESSAGE ID lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgid
              TYPE if_msg_output=&gt;msgtype_success
            NUMBER lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-msgno
              WITH lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr1
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr2
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr3
                   lo_cx_hardcode_maintain-&gt;if_t100_message~t100key-attr4
           DISPLAY LIKE if_msg_output=&gt;msgtype_error.

    ENDTRY.

  ENDMETHOD.

ENDCLASS.

*----------------------------------------------------------------------*
*       CLASS LCL_TREE_DRAG_AND_DROP IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_tree_drag_and_drop IMPLEMENTATION.

  METHOD flavor_select.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; SÃ©lection des donnÃ©es
    &quot; -----------------------------------------------------------



  ENDMETHOD.

  METHOD left_drag.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; SÃ©lection des donnÃ©es
    &quot; -----------------------------------------------------------



  ENDMETHOD.

  METHOD right_drop.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; SÃ©lection des donnÃ©es
    &quot; -----------------------------------------------------------



  ENDMETHOD.

  METHOD drop_complete.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

    &quot; -----------------------------------------------------------
    &quot; SÃ©lection des donnÃ©es
    &quot; -----------------------------------------------------------



  ENDMETHOD.

ENDCLASS.</source>
 </PROG>
 <PROG NAME="ZTEC_HARDCODE_SEL" VARCL="X" SUBC="I" LEVL="740" RMAND="400" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Include Ecran de sÃ©lection" LENGTH="26 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZTEC_HARDCODE_SEL
*&amp;---------------------------------------------------------------------*

***==================================================================***
**                         SELECTION-SCREEN                           **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Boutons
  &quot; -----------------------------------------------------------

  &quot; Activation boutons
  SELECTION-SCREEN FUNCTION KEY 1.  &quot;Supprimer
  SELECTION-SCREEN FUNCTION KEY 2.  &quot;Copier
  SELECTION-SCREEN FUNCTION KEY 3.  &quot;Transporter
  SELECTION-SCREEN FUNCTION KEY 4.  &quot;Mettre Ã  Jour dans la SHM

  &quot; -----------------------------------------------------------
  &quot; CritÃ¨res de SÃ©lection
  &quot; -----------------------------------------------------------

  SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-tb1.

  &quot; Nom du Programme
  PARAMETERS : p_repid TYPE sy-repid OBLIGATORY MATCHCODE OBJECT ztec_harcode_repid_help_value.

  &quot; Charger Hardcode En cours de Modif.
  PARAMETER : p_work TYPE flag NO-DISPLAY.

  SELECTION-SCREEN END OF BLOCK b1.</source>
 </PROG>
 <PROG NAME="ZTEC_HARDCODE_C01" VARCL="X" SUBC="I" LEVL="740" RMAND="400" RLOAD="F" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="R" ENTRY="Include dÃ©claration dÃ©finition classes" LENGTH="38 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include           ZTEC_HARDCODE_C01
*&amp;---------------------------------------------------------------------*


*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_TREE DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_tree DEFINITION ABSTRACT CREATE PROTECTED.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    CLASS-METHODS factory
      IMPORTING
                !iv_id             TYPE string
                !io_main           TYPE REF TO lcl_main
                !io_alv_tree       TYPE REF TO cl_gui_alv_tree
                !it_display_data   TYPE STANDARD TABLE
      RETURNING VALUE(ro_instance) TYPE REF TO lcl_generic_event_tree
      RAISING   cx_sy_unknown_type.

    &quot; Handler Double Clique
    METHODS handler_item_double_click
      FOR EVENT item_double_click
          OF cl_gui_alv_tree
      IMPORTING
          fieldname node_key.                               &quot;#EC NEEDED

    &quot; Handler Clique Bouton
    METHODS handler_button_click
      FOR EVENT button_click
                  OF cl_gui_alv_tree
      IMPORTING fieldname node_key.                         &quot;#EC NEEDED

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

*-- ProtÃ©gÃ©e
  PROTECTED SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        !io_main         TYPE REF TO lcl_main OPTIONAL
        !io_alv_tree     TYPE REF TO cl_gui_alv_tree
        !io_display_data TYPE REF TO data.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_main TYPE REF TO lcl_main.
    DATA : mo_alv_tree TYPE REF TO cl_gui_alv_tree.
    DATA : mt_display_data TYPE REF TO data.
    CLASS-DATA : mv_previous_mode TYPE sy-index.

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


ENDCLASS.             &quot;LCL_GENERIC_EVENT_TREE DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_TOOLBAR DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_toolbar DEFINITION ABSTRACT CREATE PROTECTED.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; GÃ©nÃ©ration instance Handler
    CLASS-METHODS factory
      IMPORTING
                !iv_id             TYPE string
                !io_toolbar        TYPE REF TO cl_gui_toolbar
      RETURNING VALUE(ro_instance) TYPE REF TO lcl_generic_event_toolbar
      RAISING   cx_sy_unknown_type.

    &quot; Handler Clique Toolbar
    METHODS handler_function_selected
      FOR EVENT function_selected
                  OF cl_gui_toolbar
      IMPORTING fcode.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


*-- Protected
  PROTECTED SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING !io_toolbar TYPE REF TO cl_gui_toolbar.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_toolbar TYPE REF TO cl_gui_toolbar.


ENDCLASS.             &quot;lcl_GENERIC_EVENT_TOOLBAR DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree DEFINITION FINAL FRIENDS lcl_main_tree_toolbar_handler.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; GÃ©nÃ©ration Arbre ALV
*    CLASS-METHODS hardcode_alv_tree_generate
*      IMPORTING
*                !io_main                 TYPE REF TO lcl_main
*                !iv_container_name       TYPE clike OPTIONAL
*                !io_container            TYPE REF TO cl_gui_container
*                !iv_repid                TYPE sy-repid
*                !is_system_target        TYPE coas_system OPTIONAL
*      EXPORTING
*                !ev_drag_and_drop_handle TYPE i
*      RETURNING VALUE(ro_hardcode_tree)  TYPE REF TO cl_gui_alv_tree.

    &quot; Constructor
    METHODS constructor
      IMPORTING
        !io_main TYPE REF TO lcl_main.

    &quot; Traitement
    METHODS process
      IMPORTING
                !iv_repid       TYPE sy-repid
                !it_hardcode    TYPE zvtec_t_hc_tt
                !iv_event       TYPE ui_func OPTIONAL
      RETURNING VALUE(rv_subrc) TYPE sy-subrc.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    CONSTANTS : mc_node_level_version TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy-node_level VALUE &apos;1&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_node_level_parameter TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy-node_level VALUE &apos;2&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_node_level_attribute TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy-node_level VALUE &apos;3&apos;. &quot;#EC NOTEXT

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

    &quot; Type donnÃ©es Ã  afficher
    TYPES :
      BEGIN OF ts_hc_data,
        version_guid                  TYPE ztec_t_hc_vers-version_guid,
        parameter_guid                TYPE ztec_t_hc_param-parameter_guid,
        attribute_guid_regroup        TYPE ztec_t_hc_attr-attribute_guid_regroup,
        repid                         TYPE ztec_t_hc_vers-repid,
        version_id                    TYPE ztec_t_hc_vers-version_id,
        version_primary               TYPE ztec_t_hc_vers-version_primary,
        version_primary_icon          TYPE icon-id,
        parameter_name                TYPE ztec_t_hc_param-parameter_name,
        attribute_name                TYPE ztec_t_hc_attr-attribute_name,
        attribute_key1                TYPE ztec_t_hc_attr-attribute_key1,
        attribute_key2                TYPE ztec_t_hc_attr-attribute_key2,
        attribute_key3                TYPE ztec_t_hc_attr-attribute_key3,
        attribute_key4                TYPE ztec_t_hc_attr-attribute_key4,
        attribute_as_range            TYPE ztec_t_hc_attr-attribute_as_range,
        attribute_as_range_icon       TYPE icon-id,
        attribute_as_code_source      TYPE ztec_t_hc_attr-attribute_as_code_source,
        attribute_as_code_source_icon TYPE icon-id,
      END OF   ts_hc_data.

    TYPES : tt_t_hc_data TYPE STANDARD TABLE OF ts_hc_data
                                        WITH NON-UNIQUE KEY primary_key
                                                 COMPONENTS version_guid parameter_guid attribute_guid_regroup.

    TYPES :
      BEGIN OF ts_attribute_range,
        attribute_guid_regroup  TYPE ztec_t_hc_attr-attribute_guid_regroup,
        t_attribute_range_value TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det,
      END OF   ts_attribute_range.

    TYPES : tt_attribute_range TYPE SORTED TABLE OF ts_attribute_range
                                      WITH UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup.

    TYPES :
      BEGIN OF ts_code_source,
        attribute_guid_regroup TYPE ztec_t_hc_attr-attribute_guid_regroup,
        t_code_source          TYPE stringtab,
      END OF   ts_code_source.

    TYPES : tt_code_source TYPE SORTED TABLE OF ts_code_source
            WITH UNIQUE KEY primary_key COMPONENTS attribute_guid_regroup.

    TYPES :
      BEGIN OF ts_hc_data_internal,
        repid             TYPE sy-repid,
        t_hardcode        TYPE zvtec_t_hc_tt,
        t_attribute_range TYPE tt_attribute_range,
        t_code_source     TYPE tt_code_source,
      END OF   ts_hc_data_internal.

    TYPES : tt_t_hc_data_internal TYPE SORTED TABLE OF ts_hc_data_internal
                                       WITH UNIQUE KEY primary_key
                                            COMPONENTS repid.

    &quot; DonnÃ©es persistantes
    TYPES :
      BEGIN OF ts_persistent_data,
        t_hc_data TYPE tt_t_hc_data_internal,
      END OF   ts_persistent_data.

    &quot; Container donnÃ©es
    TYPES :
      BEGIN OF ts_container_data,
        t_display_data TYPE tt_t_hc_data,
      END OF   ts_container_data.

    &quot; ElÃ¨ments pour affichage
    TYPES :
      BEGIN OF ts_display_element,
        t_fieldcatalog          TYPE        lvc_t_fcat,
        t_hierarchy             TYPE        zcl_gui_alv_tree_util=&gt;ty_t_hierarchy,
        o_event                 TYPE REF TO lcl_main_tree_event,
        o_alv_tree              TYPE REF TO cl_gui_alv_tree,
        o_drag_and_drop         TYPE REF TO cl_dragdrop,
        o_drag_and_drop_handler TYPE REF TO lcl_tree_drag_and_drop,
        v_handle_tree           TYPE i,
        o_container             TYPE REF TO cl_gui_container,
        o_ccontainer            TYPE REF TO cl_gui_custom_container,
        o_toolbar               TYPE REF TO cl_gui_toolbar,
        s_hierarchy_header      TYPE        treev_hhdr,
        o_toolbar_event         TYPE REF TO lcl_main_tree_toolbar_event,
        o_toolbar_handler       TYPE REF TO lcl_main_tree_toolbar_handler,
        t_toolbar_excluding     TYPE        ui_functions,
      END OF   ts_display_element.

    &quot; Ensemble des composantes
    TYPES :
      BEGIN OF ts_main_tree,
        data            TYPE ts_container_data,
        display_element TYPE ts_display_element,
      END OF   ts_main_tree.

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Chargement des donnÃ©es
    METHODS load_data
      IMPORTING
                !iv_repid       TYPE sy-repid
                !it_hardcode    TYPE zvtec_t_hc_tt
      RETURNING VALUE(rv_subrc) TYPE sy-subrc.

    &quot; Initialisation donnÃ©es Ã  afficher
    METHODS build_hierarchy_node
      IMPORTING !iv_repid       TYPE sy-repid OPTIONAL
                !it_hardcode    TYPE zvtec_t_hc_tt OPTIONAL
      PREFERRED PARAMETER iv_repid
      RETURNING VALUE(rv_subrc) TYPE sy-subrc.

    &quot; CrÃ©ation des Ã©lÃ¨ments Ã  afficher
    METHODS build_display_element
      IMPORTING
*        !iv_container_name TYPE clike
*        !io_container      TYPE REF TO cl_gui_container OPTIONAL
        !iv_read_only      TYPE xsdboolean DEFAULT abap_false
        !iv_drag_and_drop  TYPE xsdboolean DEFAULT abap_false.

    &quot; CrÃ©ation barre de TÃ¢che
    METHODS build_toolbar
      IMPORTING
        !iv_read_only TYPE xsdboolean DEFAULT abap_false.

    &quot; CrÃ©ation du Container
    METHODS build_container.
*      IMPORTING !iv_container_name TYPE clike.

    &quot; CrÃ©ation de l&apos;ALV Tree
    METHODS build_alv_tree
      IMPORTING
        !iv_read_only TYPE xsdboolean DEFAULT abap_false.

    &quot; CrÃ©ation du FieldCatalog
    METHODS build_fieldcatalog.

    &quot; CrÃ©ation de la HiÃ©rarchie d&apos;affichagee
    METHODS build_hierarchy.

    &quot; Affichage des donnÃ©es
    METHODS display.

    &quot; Initialisation IcÃ´ne PrimaritÃ©
    METHODS icon_version_primary_set
      IMPORTING !iv_version_primary    TYPE ztec_t_hc_vers-version_primary
      RETURNING VALUE(rv_icon_primary) TYPE icon-id.

    &quot; Initialisation IcÃ´ne Valeurs Multiple
    METHODS icon_attribute_range_set
      IMPORTING !iv_attribute_as_range TYPE ztec_t_hc_attr-attribute_as_range
      RETURNING VALUE(rv_icon_range)   TYPE icon-id.

    &quot; Initialisation IcÃ´ne Code Source
    METHODS icon_attribute_code_source_set
      IMPORTING !iv_attribute_as_code_source TYPE ztec_t_hc_attr-attribute_as_code_source
      RETURNING VALUE(rv_icon_range)         TYPE icon-id.

    &quot; RÃ©cupÃ©ration ligne sÃ©lectionnÃ©e
    METHODS line_selected_get
      IMPORTING
                !iv_parent_node_ref   TYPE clike OPTIONAL
      EXPORTING
                !ev_subrc             TYPE sy-subrc
                !ev_selected_node     TYPE lvc_nkey
                !ev_node_text         TYPE lvc_value
                !et_item_layout       TYPE lvc_t_layi
                !es_node_layout       TYPE lvc_s_layn
                !ev_parent_node_key   TYPE lvc_nkey
      RETURNING VALUE(rs_outtab_line) TYPE ts_hc_data.

    &quot; Ajout d&apos;un Noeud
    METHODS node_add
      IMPORTING
                !is_data           TYPE ts_hc_data
                !iv_node_level     TYPE zcl_gui_alv_tree_util=&gt;ty_hierarchy-node_level
                !iv_node_parent    TYPE lvc_nkey OPTIONAL
      RETURNING VALUE(rv_node_key) TYPE lvc_nkey.

    &quot; Affichage du DÃ©tail de l&apos;Attribut
    METHODS attribute_detail_display
      EXPORTING
                !ev_cancel                     TYPE flag
                !et_code_source                TYPE stringtab
                !er_ranges_value               TYPE tt_r_ranges
                !es_hardcode_data              TYPE ts_hc_data
                !es_new_attribute_logical_key  TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key
                !es_new_attribute_logical_keyx TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_keyx
                !et_attribute_range_value      TYPE zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det
      CHANGING  !cs_hardcode_data              TYPE ts_hc_data.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    CLASS-DATA : ms_persistent_data TYPE ts_persistent_data.
    DATA : mo_main TYPE REF TO lcl_main.
    DATA : mv_repid TYPE sy-repid.
    DATA : mo_attribute_detail TYPE REF TO lcl_attribute_detail.
    DATA : ms_display_element TYPE lcl_main_tree=&gt;ts_main_tree.
    DATA : mt_level_node_key TYPE zcl_gui_alv_tree_util=&gt;ty_t_level_node_key.

ENDCLASS.             &quot;lcl_MAIN_TREE DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_GENERIC_EVENT_GRID DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_generic_event_grid DEFINITION ABSTRACT CREATE PROTECTED.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; GÃ©nÃ©ration instance Handler
    CLASS-METHODS factory
      IMPORTING
                !iv_id             TYPE string
                !io_main           TYPE REF TO lcl_main
                !io_alv_grid       TYPE REF TO cl_gui_alv_grid
                !it_display_data   TYPE STANDARD TABLE
      RETURNING VALUE(ro_instance) TYPE REF TO lcl_generic_event_grid
      RAISING   cx_sy_unknown_type.

    &quot; Handler Aide Ã  la recherche
    METHODS handler_onf4
      FOR EVENT onf4
          OF cl_gui_alv_grid
      IMPORTING
          e_display e_fieldname e_fieldvalue er_event_data es_row_no et_bad_cells. &quot;#EC NEEDED

    &quot; Handler clique bouton
    METHODS handler_button_click
      FOR EVENT button_click
          OF cl_gui_alv_grid
      IMPORTING
          es_col_id es_row_no.                              &quot;#EC NEEDED

    &quot; Handler Ã©vÃ¨nement double clique
    METHODS handler_double_click
      FOR EVENT double_click
                  OF cl_gui_alv_grid
      IMPORTING e_row e_column es_row_no.                   &quot;#EC NEEDED

    METHODS handler_hotspot_click
      FOR EVENT hotspot_click
                  OF cl_gui_alv_grid
      IMPORTING e_column_id e_row_id es_row_no.             &quot;#EC NEEDED

    &quot; Handler modification donnÃ©es
    METHODS handler_data_changed
      FOR EVENT data_changed
                  OF cl_gui_alv_grid
      IMPORTING er_data_changed e_ucomm e_onf4 e_onf4_after e_onf4_before. &quot;#EC NEEDED

    &quot; Handler fin modification donnÃ©es
    METHODS handler_data_changed_finished
      FOR EVENT data_changed_finished
          OF cl_gui_alv_grid
      IMPORTING
          e_modified et_good_cells.                         &quot;#EC NEEDED

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

*-- ProtÃ©gÃ©e
  PROTECTED SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        !io_main         TYPE REF TO lcl_main OPTIONAL
        !io_alv_grid     TYPE REF TO cl_gui_alv_grid
        !io_display_data TYPE REF TO data.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_main TYPE REF TO lcl_main.
    DATA : mo_alv_grid TYPE REF TO cl_gui_alv_grid.
    DATA : mt_display_data TYPE REF TO data.

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


ENDCLASS.             &quot;LCL_GENERIC_EVENT_GRID DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_TOOLBAR_EVENT DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_toolbar_event DEFINITION FINAL
                                   INHERITING FROM lcl_generic_event_toolbar
                                           FRIENDS lcl_generic_event_toolbar.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

    CONSTANTS : mc_fc_copy TYPE ui_func VALUE &apos;COPY&apos;.       &quot;#EC NOTEXT
    CONSTANTS : mc_fc_delete TYPE ui_func VALUE &apos;DELETE&apos;.   &quot;#EC NOTEXT
    CONSTANTS : mc_fc_modify TYPE ui_func VALUE &apos;MODIFY&apos;.   &quot;#EC NOTEXT
    CONSTANTS : mc_fc_transport TYPE ui_func VALUE &apos;TRANSPORT&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_fc_update_shm TYPE ui_func VALUE &apos;UPDATE_SHM&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_fc_primary_set TYPE ui_func VALUE &apos;PRIMARY_SET&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_fc_version_create TYPE ui_func VALUE &apos;VERSION_CREATE&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_fc_attribute_create TYPE ui_func VALUE &apos;ATTRIBUTE_CREATE&apos;. &quot;#EC NOTEXT
    CONSTANTS : mc_fc_parameter_create TYPE ui_func VALUE &apos;PARAMETERS_CREATE&apos;. &quot;#EC NOTEXT

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Handler Clique Toolbar
    METHODS handler_function_selected REDEFINITION.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

    &quot; EvÃ¨nement Global - Suppression
    EVENTS on_delete.

    &quot; EvÃ¨nement Global - Modification
    EVENTS on_modify.

    &quot; EvÃ¨nement Global - Copier
    EVENTS on_copy.

    &quot; EvÃ¨nement Global - Transporter
    EVENTS on_transport
      EXPORTING VALUE(iv_advanced_mode) TYPE xsdboolean OPTIONAL.

    &quot; EvÃ¨nement Global - Mettre Ã  Jour la SHM
    EVENTS on_update_shm.

    &quot; EvÃ¨nement Version - CrÃ©ation
    EVENTS on_version_create.

    &quot; EvÃ¨nement Version - PrimaritÃ©
    EVENTS on_version_primary_set.

    &quot; EvÃ¨nement ParamÃ¨tre - CrÃ©ation
    EVENTS on_parameter_create.

    &quot; EvÃ¨nement Attribut - CrÃ©ation
    EVENTS on_attribute_create.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    CLASS-DATA : my_id TYPE string VALUE &apos;MAIN_TOOLBAR&apos;.    &quot;#EC NOTEXT

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


ENDCLASS.             &quot;LCL_TOOLBAR_EVENT DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main DEFINITION FINAL CREATE PRIVATE.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Initialisation
    CLASS-METHODS initialization
      RETURNING VALUE(ro_instance) TYPE REF TO lcl_main.

    &quot; Transport des Hardcodes
    CLASS-METHODS transport_hardcode
      RETURNING VALUE(rv_subrc) TYPE sy-subrc.

    &quot; Ordre de Transport - CrÃ©ation
    CLASS-METHODS transport_request_create
      IMPORTING
                !it_vers_guid_to_del     TYPE epic_t_guid OPTIONAL
                !it_param_guid_to_del    TYPE epic_t_guid OPTIONAL
                !it_attr_guid_to_del     TYPE epic_t_guid OPTIONAL
                !it_vers_guid_to_create  TYPE epic_t_guid OPTIONAL
                !it_param_guid_to_create TYPE epic_t_guid OPTIONAL
                !it_attr_guid_to_create  TYPE epic_t_guid   OPTIONAL
      EXPORTING
                !es_return               TYPE bapiret2
      RETURNING VALUE(rv_order)          TYPE trkorr .

    &quot; Traitement principal
    METHODS process
      IMPORTING
        !iv_event TYPE ui_func OPTIONAL.

    &quot; Sauvegarde
    METHODS save.

    &quot; EvÃ¨nement action utilisateur
    METHODS at_selection_screen.

    &quot; DonnÃ©es modifiÃ©es
    METHODS is_changed
      RETURNING VALUE(rv_changed) TYPE flag.

    &quot; Saisie
    METHODS call_popup_input_simple
      IMPORTING
                !iv_text        TYPE clike OPTIONAL
                !iv_title       TYPE clike
      EXPORTING
                !ev_subrc       TYPE sy-subrc
      RETURNING VALUE(rv_input) TYPE ug_txtlg.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_hardcode_maintain TYPE REF TO zcl_hardcode_maintain.

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

    &quot; Type stockage critÃ¨re de sÃ©lection
    TYPES :
      BEGIN OF ts_selection_criteria,
        ov_repid     TYPE REF TO sy-repid,
        ov_load_work TYPE REF TO flag,
      END OF   ts_selection_criteria.

    &quot; Composantes Ã©lÃ¨ments Ã  afficher
    TYPES :
      BEGIN OF ts_process_instance,
        main_tree TYPE REF TO lcl_main_tree,
      END OF   ts_process_instance.

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        iov_repid     TYPE REF TO sy-repid
        iov_load_work TYPE REF TO flag.

    &quot; Hardcode - Suppression
    METHODS programm_deletion.

    &quot; Hardcode - Copie
    METHODS programm_copy.

    &quot; Hardcode - Transporter
    METHODS programm_transport.

    &quot; Hardcode - Mettre Ã  Jour la SHM
    METHODS programm_update_shm.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : ms_selection_criteria TYPE ts_selection_criteria.
    DATA : ms_process_instance TYPE ts_process_instance.

ENDCLASS.             &quot;LCL_MAIN DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_EVENT DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_event DEFINITION FINAL
                           INHERITING FROM lcl_generic_event_tree
                                   FRIENDS lcl_generic_event_tree. &quot;Pour le constructeur

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Handler Double clique Objet
    METHODS handler_button_click REDEFINITION.
    METHODS handler_item_double_click REDEFINITION.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*  DÃ©claration d&apos;Ã©vÃ¨nements

    &quot; Double-clique IcÃ´ne Stock Transit
    EVENTS double_click_on_trame
      EXPORTING VALUE(is_key) TYPE lgort_key
                VALUE(iv_inbound) TYPE flag.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs
    CONSTANTS : my_id TYPE string VALUE &apos;MAIN_EVENT&apos;.       &quot;#EC NOTEXT

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes


***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***


***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

ENDCLASS.             &quot;LCL_MAIN_TREE_EVENT DEFINITION


*----------------------------------------------------------------------*
*       CLASS LCL_TREE_DRAG_AND_DROP DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_tree_drag_and_drop DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    METHODS flavor_select FOR EVENT on_drop_get_flavor OF cl_gui_alv_tree
*    cl_gui_simple_tree
      IMPORTING drag_drop_object node_key.

    METHODS   left_drag FOR EVENT on_drag_multiple OF cl_gui_alv_tree
      IMPORTING drag_drop_object fieldname node_key_table.

    METHODS  right_drop FOR EVENT on_drop OF cl_gui_alv_tree
      IMPORTING drag_drop_object node_key.

    METHODS  drop_complete FOR EVENT on_drop_complete_multiple OF
                  cl_gui_alv_tree
      IMPORTING drag_drop_object fieldname node_key_table.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs


ENDCLASS.             &quot;lcl_TREE_DRAG_AND_DROP DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_MAIN_TREE_TOOLBAR_HANDLER DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_main_tree_toolbar_handler DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        !io_main_tree TYPE REF TO lcl_main_tree.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                             HANDLER                                **
***------------------------------------------------------------------***

*	DÃ©claration des Handler

    METHODS handler_on_copy                FOR EVENT on_copy
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_delete              FOR EVENT on_delete
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_modify              FOR EVENT on_modify
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_transport           FOR EVENT on_transport
                  OF lcl_main_tree_toolbar_event
      IMPORTING !iv_advanced_mode.
    METHODS handler_on_update_shm          FOR EVENT on_update_shm
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_version_create      FOR EVENT on_version_create
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_parameter_create    FOR EVENT on_parameter_create
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_attribute_create    FOR EVENT on_attribute_create
         OF lcl_main_tree_toolbar_event.
    METHODS handler_on_version_primary_set FOR EVENT on_version_primary_set
         OF lcl_main_tree_toolbar_event.

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Hardcode - Transport
    METHODS _hardcode_transport
      IMPORTING
                !iv_direct        TYPE xsdboolean DEFAULT abap_true
                !iv_advanced_mode TYPE xsdboolean
      RETURNING VALUE(rs_return)  TYPE bapiret2.

    &quot; Hardcode - Transport - OT
    METHODS _hardcode_transport_ot
      RETURNING VALUE(rs_return) TYPE bapiret2.

    &quot; Hardcode - Transport - Direct
    METHODS _hardcode_transport_direct
      IMPORTING
                !iv_advanced_mode TYPE xsdboolean
      RETURNING VALUE(rs_return)  TYPE bapiret2.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                             HANDLER                                **
***------------------------------------------------------------------***

*	DÃ©claration des Handler

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_main_tree TYPE REF TO lcl_main_tree.

ENDCLASS.             &quot;lcl_MAIN_TREE_TOOLBAR_HANDLER DEFINITION

*----------------------------------------------------------------------*
*       CLASS LCL_ATTRIBUTE_DETAIL DEFINIION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_attribute_detail DEFINITION FINAL.

*-- Publique
  PUBLIC SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

    &quot; Constructeur
    METHODS constructor
      IMPORTING
        !io_main TYPE REF TO lcl_main.

    &quot; Traitement principal
    METHODS process
      EXPORTING
        !ev_cancel                     TYPE flag
        !es_new_attribute_logical_key  TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_key
        !es_new_attribute_logical_keyx TYPE zcl_hardcode_maintain=&gt;ty_attribute_logical_keyx
      CHANGING
        !cs_attribute_detail           TYPE ts_attribute_detail_ref
        !cot_code_source               TYPE REF TO stringtab OPTIONAL
        !cot_attribute_range_value     TYPE REF TO zcl_hardcode_maintain=&gt;ty_t_attribute_range_value_det OPTIONAL.

    &quot; RÃ©cupÃ©ration Range
    METHODS range_value_get
      RETURNING VALUE(ror_range_value) TYPE REF TO tt_r_ranges.

    &quot; RÃ©cupÃ©ration Code Source
    METHODS code_source_get
      RETURNING VALUE(rot_code_source) TYPE REF TO stringtab.

    &quot; RÃ©cupÃ©ration instance
    CLASS-METHODS instance_get
      RETURNING VALUE(ro_instance) TYPE REF TO lcl_attribute_detail.

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

*-- PrivÃ©e
  PRIVATE SECTION.

***------------------------------------------------------------------***
**                              TYPES                                 **
***------------------------------------------------------------------***

*   DÃ©claration de type

***------------------------------------------------------------------***
**                           MÃTHODES                                 **
***------------------------------------------------------------------***

*	DÃ©claration de mÃ©thodes

***------------------------------------------------------------------***
**                           ÃVENEMENTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;Ã©vÃ¨nement

***------------------------------------------------------------------***
**                            ATTRIBUTS                               **
***------------------------------------------------------------------***

*	DÃ©claration d&apos;attributs

    DATA : mo_main TYPE REF TO lcl_main.
    DATA : mo_attribute_detail TYPE REF TO ts_attribute_detail.
    DATA : mor_ranges_value TYPE REF TO tt_r_ranges.
    DATA : mot_code_source TYPE REF TO stringtab.
    CLASS-DATA : mo_instance TYPE REF TO lcl_attribute_detail.

ENDCLASS.             &quot;lcl_ATTRIBUTE_DETAIL DEFINITION</source>
 </PROG>
 <PROG NAME="ZTEC_HARDCODE" VARCL="X" SUBC="1" RSTAT="K" RMAND="400" RLOAD="F" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="F">
    <textElement ID="I" KEY="ATT" ENTRY="@4G@" LENGTH="4 "/>
    <textElement ID="I" KEY="C01" ENTRY="Rechercher un OT" LENGTH="18 "/>
    <textElement ID="I" KEY="CAN" ENTRY="@0W@" LENGTH="4 "/>
    <textElement ID="I" KEY="CO2" ENTRY="CrÃ©er un OT" LENGTH="13 "/>
    <textElement ID="I" KEY="COP" ENTRY="@14@" LENGTH="14 "/>
    <textElement ID="I" KEY="COS" ENTRY="Code Source" LENGTH="11 "/>
    <textElement ID="I" KEY="CRE" ENTRY="CrÃ©er" LENGTH="5 "/>
    <textElement ID="I" KEY="CSD" ENTRY="Modification valeurs" LENGTH="20 "/>
    <textElement ID="I" KEY="DEL" ENTRY="@11@" LENGTH="4 "/>
    <textElement ID="I" KEY="DLO" ENTRY="Perte de donnÃ©es" LENGTH="16 "/>
    <textElement ID="I" KEY="HEA" ENTRY="HiÃ©rarchie" LENGTH="10 "/>
    <textElement ID="I" KEY="HIG" ENTRY="Limite sup." LENGTH="11 "/>
    <textElement ID="I" KEY="ICS" ENTRY="@9U@" LENGTH="14 "/>
    <textElement ID="I" KEY="IP2" ENTRY="Nouveau nom" LENGTH="21 "/>
    <textElement ID="I" KEY="IRA" ENTRY="@OP@" LENGTH="4 "/>
    <textElement ID="I" KEY="LOW" ENTRY="Limite inf." LENGTH="11 "/>
    <textElement ID="I" KEY="MOD" ENTRY="@0Z@" LENGTH="4 "/>
    <textElement ID="I" KEY="NAT" ENTRY="Saisir un nom pour l&apos;Attribut" LENGTH="37 "/>
    <textElement ID="I" KEY="NON" ENTRY="Non" LENGTH="3 "/>
    <textElement ID="I" KEY="NPA" ENTRY="Saisir un nom pour le ParamÃ¨tre" LENGTH="39 "/>
    <textElement ID="I" KEY="NRE" ENTRY="Saisir un nom pour le Programme" LENGTH="31 "/>
    <textElement ID="I" KEY="NVE" ENTRY="Saisir un nom pour la Version" LENGTH="38 "/>
    <textElement ID="I" KEY="OKA" ENTRY="@0V@" LENGTH="4 "/>
    <textElement ID="I" KEY="OPT" ENTRY="Option" LENGTH="6 "/>
    <textElement ID="I" KEY="OUI" ENTRY="Oui" LENGTH="3 "/>
    <textElement ID="I" KEY="PAR" ENTRY="@9X@" LENGTH="4 "/>
    <textElement ID="I" KEY="PDE" ENTRY="@11@" LENGTH="4 "/>
    <textElement ID="I" KEY="PRI" ENTRY="PrimaritÃ©" LENGTH="9 "/>
    <textElement ID="I" KEY="RAN" ENTRY="Range" LENGTH="5 "/>
    <textElement ID="I" KEY="REP" ENTRY="@8M@" LENGTH="4 "/>
    <textElement ID="I" KEY="SHM" ENTRY="@6H@" LENGTH="4 "/>
    <textElement ID="I" KEY="SHO" ENTRY="Multi" LENGTH="5 "/>
    <textElement ID="I" KEY="SWI" ENTRY="@9B@" LENGTH="4 "/>
    <textElement ID="I" KEY="TB1" ENTRY="CritÃ¨res de sÃ©lection" LENGTH="21 "/>
    <textElement ID="I" KEY="TCO" ENTRY="Que souhaitez-vous faire ?" LENGTH="26 "/>
    <textElement ID="I" KEY="TCY" ENTRY="Copier" LENGTH="16 "/>
    <textElement ID="I" KEY="TDE" ENTRY="Supprimer" LENGTH="9 "/>
    <textElement ID="I" KEY="TMO" ENTRY="Modifier" LENGTH="8 "/>
    <textElement ID="I" KEY="TQ1" ENTRY="Etes-vous sÃ»r de vouloir supprimer ce Noeud et tous ses enfants ?" LENGTH="65 "/>
    <textElement ID="I" KEY="TQ2" ENTRY="Etes-vous sÃ»r de vouloir supprimer les Hardcodes de ce Programme ?" LENGTH="132 "/>
    <textElement ID="I" KEY="TQ3" ENTRY="Voulez-vous transporter la suppression de ces Hardcodes ?" LENGTH="114 "/>
    <textElement ID="I" KEY="TRA" ENTRY="@7Q@" LENGTH="4 "/>
    <textElement ID="I" KEY="TSH" ENTRY="MÃ J SHM" LENGTH="17 "/>
    <textElement ID="I" KEY="TSW" ENTRY="Modifier PrimaritÃ©" LENGTH="18 "/>
    <textElement ID="I" KEY="TTR" ENTRY="Transporter" LENGTH="11 "/>
    <textElement ID="I" KEY="VCR" ENTRY="@EV@" LENGTH="4 "/>
    <textElement ID="I" KEY="VDE" ENTRY="@ES@" LENGTH="4 "/>
    <textElement ID="I" KEY="VER" ENTRY="@6D@" LENGTH="4 "/>
    <textElement ID="I" KEY="VSO" ENTRY="@8I@" LENGTH="4 "/>
    <textElement ID="I" KEY="VSP" ENTRY="@3C@" LENGTH="4 "/>
    <textElement ID="R" ENTRY="Gestion des Hardcodes" LENGTH="21 "/>
    <textElement ID="S" KEY="P_REPID" ENTRY="        Programme" LENGTH="17 "/>
   </language>
  </textPool>
  <dynpros>
   <dynpro PROG="ZTEC_HARDCODE" DNUM="0101" FNUM="0101" BZMX="30 " BZBR="180 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="30 " NOCO="180 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Hardcode">
    <dynprofield FNAM="CC_MAIN_TREE" DIDX="001E" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="B4" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="101" AGLT="01" ADEZ="01"/>
    <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE STATUS_0101.

PROCESS AFTER INPUT.
 MODULE USER_COMMAND_0101.</dynproflowsource>
   </dynpro>
   <dynpro PROG="ZTEC_HARDCODE" DNUM="0201" TYPE="M" FNUM="0201" BZMX="10 " BZBR="157 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="10 " NOCO="157 " VALP="0 " CUAN="G" SPRA="F" DTEXT="ParamÃ¨tre">
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_NAME" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="11" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Nom de l&apos;attribut" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_NAME" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="32" FMB2="00" LENG="1E" LINE="01" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="______________________________"/>
    <dynprofield FNAM="CADRE_VALUE" DIDX="0007" FLG1="00" FLG2="00" FLG3="00" FILL="R" FMB1="30" FMB2="00" LENG="9D" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="Valeurs de l&apos;attribut"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY1" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0D" LINE="05" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Valeur clef 1" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY1" DIDX="0000" FLG1="80" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="05" COLN="11" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY2" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0D" LINE="05" COLN="53" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Valeur clef 2" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY2" DIDX="0000" FLG1="80" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="05" COLN="61" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY3" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0D" LINE="06" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Valeur clef 3" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY3" DIDX="0000" FLG1="80" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="06" COLN="11" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY4" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0D" LINE="06" COLN="53" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Valeur clef 4" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_KEY4" DIDX="0000" FLG1="80" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="06" COLN="61" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
    <dynprofield FNAM="RANGE_TEXT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="10" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Valeurs multiple" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_AS_RANGE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="08" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                        RANGE_DIS"/>
    <dynprofield FNAM="BTN_MUTLI_VALUE" DIDX="000C" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="0E" LINE="08" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" GRP1="RAN" AGLT="00" ADEZ="00" STXT="@9Y@_Valeurs__" RES1="                                                                                                                                                                        RANGE_SET"/>
    <dynprofield FNAM="CODE_TEXT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0A" LINE="08" COLN="27" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Code libre"/>
    <dynprofield FNAM="GS_ATTRIBUTE_DETAIL-ATTRIBUTE_AS_CODE_SOURCE" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FILL="C" FMB1="00" FMB2="00" LENG="01" LINE="08" COLN="32" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" ITYP="C" AGLT="00" ADEZ="00" RES1="                                                                                                                                                                        SOURCE_DIS"/>
    <dynprofield FNAM="BTN_CODE_SOURCE" DIDX="000E" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="20" LINE="08" COLN="35" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" GRP1="COS" AGLT="00" ADEZ="00" STXT="@9U\QCode Source@ Code Source" RES1="                                                                                                                                                                        SOURCE_SET"/>
    <dynprofield FNAM="BTN_VALID" DIDX="0002" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="04" LINE="0A" COLN="99" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" AGLT="00" ADEZ="00" STXT="@0V@" RES1="                                                                                                                                                                        VALID"/>
    <dynprofield FNAM="BTN_CANCEL" DIDX="0002" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="04" LINE="0A" COLN="9C" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="107" AGLT="00" ADEZ="00" STXT="@0W@" RES1="                                                                                                                                                                        CANCEL"/>
    <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE status_0201.

PROCESS AFTER INPUT.
  MODULE user_command_0201.</dynproflowsource>
   </dynpro>
   <dynpro PROG="ZTEC_HARDCODE" DNUM="0302" TYPE="M" FNUM="0302" BZMX="4 " BZBR="43 " MILI="196 " MICO="37 " MALI="0 " MACO="0 " NOLI="4 " NOCO="43 " VALP="0 " CUAN="G" SPRA="F" CUPO="GS_TRANSPORT_TARGET-SYSTEM" DTEXT="Hardcode - Transport - SÃ©lection Cible">
    <dynprofield FNAM="GS_TRANSPORT_TARGET-SYSTEM" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="SystÃ¨me Cible :" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-SYSTEM" DIDX="0000" FLG1="80" FLG2="80" FLG3="80" FMB1="00" FMB2="08" LENG="08" LINE="01" COLN="12" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="________"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-MANDANT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="02" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Mandant Cible :" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-MANDANT" DIDX="0000" FLG1="80" FLG2="80" FLG3="80" FMB1="00" FMB2="00" LENG="04" LINE="02" COLN="12" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="____"/>
    <dynprofield FNAM="BTN_CANCEL" DIDX="000F" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="11" LINE="04" COLN="07" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="@0W@_Annuler_____" RES1="                                                                                                                                                                        CANCEL"/>
    <dynprofield FNAM="BTN_TRANSPORT" DIDX="000F" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="11" LINE="04" COLN="1E" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="@4A@_Transporter_" RES1="                                                                                                                                                                        TRANSPORT"/>
    <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE status_0302.

PROCESS AFTER INPUT.
  MODULE user_command_0302.

PROCESS ON VALUE-REQUEST.
  &quot; Aide Ã  la Recherche SystÃ¨me Cible
  FIELD gs_transport_target-system MODULE value_help_system_target.</dynproflowsource>
   </dynpro>
   <dynpro PROG="ZTEC_HARDCODE" DNUM="0301" FNUM="0301" BZMX="27 " BZBR="160 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="27 " NOCO="160 " VALP="0 " CUAN="G" SPRA="F" DTEXT="Hardcode - Transport">
    <dynprofield FNAM="GS_TRANSPORT_TARGET-SYSTEM" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="SystÃ¨me cible :" RES1="                                                                                                                                                                                                                                                        X"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-SYSTEM" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="03" LINE="01" COLN="12" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="___"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-MANDANT" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="02" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Mandant Cible :" RES1="                                                                                                                                                                                                                                                         X"/>
    <dynprofield FNAM="GS_TRANSPORT_TARGET-MANDANT" DIDX="0000" FLG1="80" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="03" LINE="02" COLN="12" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="00" ADEZ="00" STXT="___"/>
    <dynprofield FNAM="BTN_REFRESH" DIDX="0010" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="13" LINE="02" COLN="1B" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="@42@_RafraÃ®chir___" RES1="                                                                                                                                                                        REFRESH"/>
    <dynprofield FNAM="BTN_TRANSPORT" DIDX="0010" FLG1="00" FLG2="00" FLG3="00" FILL="P" FMB1="30" FMB2="00" LENG="13" LINE="02" COLN="68" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="@4A@_Transporter__" RES1="                                                                                                                                                                        TRANSPORT"/>
    <dynprofield FNAM="LOCAL" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0E" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Local :"/>
    <dynprofield FNAM="TARGET" DIDX="0000" FLG1="00" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="07" LINE="03" COLN="52" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="0" AGLT="00" ADEZ="00" STXT="Cible :"/>
    <dynprofield FNAM="CC_HARDCODE_TREE" DIDX="0018" FLG1="00" FLG2="00" FLG3="00" FILL="U" FMB1="30" FMB2="00" LENG="A0" LINE="04" COLN="02" LANF="00" LBLK="00" LREP="00" AUTH="103" AGLT="01" ADEZ="01"/>
    <dynprofield DIDX="0000" FLG1="80" FLG2="10" FLG3="00" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
    <dynproflowsource>PROCESS BEFORE OUTPUT.
  MODULE status_0301.

PROCESS AFTER INPUT.
  MODULE user_command_0301.

PROCESS ON VALUE-REQUEST.
  &quot; Aide Ã  la Recherche SystÃ¨me Cible
  FIELD gs_transport_target-system MODULE value_help_system_target.</dynproflowsource>
   </dynpro>
  </dynpros>
  <pfstatus>
   <pfstatus_sta CODE="PF_STATUS_0101" MODAL="D" ACTCODE="000001" PFKCODE="000001" BUTCODE="0001" INT_NOTE="Barre de TÃ¢che 0101"/>
   <pfstatus_sta CODE="PF_STATUS_0201" MODAL="D" ACTCODE="000002" PFKCODE="000002" BUTCODE="0001" INT_NOTE="Barre de TÃ¢che 0201"/>
   <pfstatus_sta CODE="PF_STATUS_0301" MODAL="D" ACTCODE="000003" PFKCODE="000003" BUTCODE="0001" INT_NOTE="Barre de TÃ¢che 0301"/>
   <pfstatus_sta CODE="PF_STATUS_0302" MODAL="D" ACTCODE="000004" PFKCODE="000004" BUTCODE="0001" INT_NOTE="Barre de TÃ¢che 0302"/>
   <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Retour"/>
   <pfstatus_fun CODE="ENTER" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Valider"/>
   <pfstatus_fun CODE="EXIT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Retour"/>
   <pfstatus_fun CODE="EXIT" TEXTNO="002" TEXT_TYPE="S" FUN_TEXT="Terminer"/>
   <pfstatus_fun CODE="LEAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Interrompre"/>
   <pfstatus_fun CODE="SAVE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_SAVE" ICON_ID="@2L@" FUN_TEXT="Sauvegarder"/>
   <pfstatus_fun CODE="TRANSPORT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_TRANSPORT" ICON_ID="@4A@" FUN_TEXT="Transporter"/>
   <pfstatus_pfk CODE="000001" PFNO="00" FUNCODE="ENTER" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="EXIT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="11" FUNCODE="SAVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="LEAVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="15" FUNCODE="EXIT" FUNNO="002"/>
   <pfstatus_pfk CODE="000003" PFNO="03" FUNCODE="BACK" FUNNO="001"/>
   <pfstatus_pfk CODE="000003" PFNO="12" FUNCODE="LEAVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000003" PFNO="15" FUNCODE="EXIT" FUNNO="002"/>
   <pfstatus_pfk CODE="000004" PFNO="12" FUNCODE="LEAVE" FUNNO="001"/>
   <pfstatus_pfk CODE="000004" PFNO="15" FUNCODE="EXIT" FUNNO="002"/>
   <pfstatus_set STATUS="PF_STATUS_0101" FUNCTION="ENTER"/>
   <pfstatus_set STATUS="PF_STATUS_0101" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="PF_STATUS_0101" FUNCTION="LEAVE"/>
   <pfstatus_set STATUS="PF_STATUS_0101" FUNCTION="SAVE"/>
   <pfstatus_set STATUS="PF_STATUS_0201" FUNCTION="ENTER"/>
   <pfstatus_set STATUS="PF_STATUS_0201" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="PF_STATUS_0201" FUNCTION="LEAVE"/>
   <pfstatus_set STATUS="PF_STATUS_0201" FUNCTION="SAVE"/>
   <pfstatus_set STATUS="PF_STATUS_0301" FUNCTION="BACK"/>
   <pfstatus_set STATUS="PF_STATUS_0301" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="PF_STATUS_0301" FUNCTION="LEAVE"/>
   <pfstatus_set STATUS="PF_STATUS_0302" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="PF_STATUS_0302" FUNCTION="LEAVE"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0101"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0101"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0101"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000002" MODAL="D" INT_NOTE="Barre de TÃ¢che 0201"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000002" MODAL="D" INT_NOTE="Barre de TÃ¢che 0201"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000002" SUB_CODE="0001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0201"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000003" MODAL="D" INT_NOTE="Barre de TÃ¢che 0301"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000003" MODAL="D" INT_NOTE="Barre de TÃ¢che 0301"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000003" SUB_CODE="0001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0301"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000004" MODAL="D" INT_NOTE="Barre de TÃ¢che 0302"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000004" MODAL="D" INT_NOTE="Barre de TÃ¢che 0302"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000004" SUB_CODE="0001" MODAL="D" INT_NOTE="Barre de TÃ¢che 0302"/>
   <pfstatus_tit CODE="TITLEBAR_0101" TEXT="Hardcode - &amp;"/>
   <pfstatus_tit CODE="TITLEBAR_0201" TEXT="Edition donnÃ©es de l&apos;Attribut &amp;"/>
  </pfstatus>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report  ZTEC_HARDCODE
*&amp;
*&amp;---------------------------------------------------------------------*
*&amp; Gestion Hardcode
*&amp;---------------------------------------------------------------------*
*&amp; CrÃ©Ã© le      : 13/01/2016                                           *
*&amp;                                                                     *
*                                                                      *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Liste des modifications                                             *
*&amp; Auteur      Date       Signature  Objet de la modification          *
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;
*&amp;---------------------------------------------------------------------*

***------------------------------------------------------------------***
**                             INCLUDE                                **
***------------------------------------------------------------------***

&quot; Include dÃ©claration des donnÃ©es / types
INCLUDE ztec_hardcode_top.

&quot; Include dÃ©claration Ã©cran de sÃ©lection
INCLUDE ztec_hardcode_sel.

&quot; Include dÃ©claration Classes dÃ©finition
INCLUDE ztec_hardcode_c01.

&quot; Include dÃ©claration Classes implÃ©mentation
INCLUDE ztec_hardcode_c02.

&quot; Include dÃ©claration Routines
INCLUDE ztec_hardcode_f01.

***==================================================================***
**                          INITIALIZATION                            **
***==================================================================***
INITIALIZATION.
  &quot; CrÃ©ation de l&apos;instance principale
  go_main = lcl_main=&gt;initialization( ).

***==================================================================***
**                       AT SELECTION-SCREEN                          **
***==================================================================***
AT SELECTION-SCREEN.
  &quot; Action utilisateur
  go_main-&gt;at_selection_screen( ).

***==================================================================***
**                        START-OF-SELECTION                          **
***==================================================================***
START-OF-SELECTION.

***==================================================================***
**                           TRAITEMENT                               **
***==================================================================***

  &quot; -----------------------------------------------------------
  &quot; Traitement
  &quot; -----------------------------------------------------------

  go_main-&gt;process( ).</source>
 </PROG>
 <SHLP SHLPNAME="ZTEC_HARCODE_REPID_HELP_VALUE" DDLANGUAGE="F" DDTEXT="Hardcode - Programme Aide Ã  la Recherche" ISSIMPLE="X" SELMETHOD="ZTEC_T_HC_VERS" SELMTYPE="T" DIALOGTYPE="D" FUZZY_SIMILARITY="0.8 ">
  <dd32p SHLPNAME="ZTEC_HARCODE_REPID_HELP_VALUE" FIELDNAME="REPID" FLPOSITION="0001" ROLLNAME="REPID" SHLPOUTPUT="X" SHLPSELPOS="01" SHLPLISPOS="01" DOMNAME="PROGNAME" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000"/>
 </SHLP>
 <TABL TABNAME="ZTEC_S_HC_ATTRIBUTE_SOURCE" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Hardcode - Attribut - Code Source" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_SOURCE" FIELDNAME="ATTRIBUTE_GUID_REGROUP" DDLANGUAGE="F" POSITION="0001" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_SOURCE" FIELDNAME="CODE_SOURCE" DDLANGUAGE="F" POSITION="0002" ROLLNAME="STRINGTAB" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="TTYP" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  TTYPL" MASKLEN="0000" DDTEXT="Table avec chaÃ®nes de caractÃ¨res" DEPTH="00" COMPTYPE="L" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_T_HC_ATTR_C" DDLANGUAGE="F" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="Hardcode - Attribut - Code Source" AUTHCLASS="00" CONTFLAG="C" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_T_HC_ATTR_C" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" SCHFELDANZ="000" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="MANDT" DDLANGUAGE="F" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" RESERVEDTE="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Mandant" REPTEXT="Mdt" SCRTEXT_S="Mandant" SCRTEXT_M="Mandant" SCRTEXT_L="Mandant" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="RELID" DDLANGUAGE="F" POSITION="0002" KEYFLAG="X" ROLLNAME="INDX_RELID" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" NOTNULL="X" DOMNAME="SYCHAR02" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="10" SCRLEN3="10" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Zone dans la table de donnÃ©es IMPORT/EXPORT" REPTEXT="Zone" SCRTEXT_S="Zone" SCRTEXT_M="Zone" SCRTEXT_L="Zone" DOMNAME3L="SYCHAR02" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="SRTFD" DDLANGUAGE="F" POSITION="0003" KEYFLAG="X" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" NOTNULL="X" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="SRTF2" DDLANGUAGE="F" POSITION="0004" KEYFLAG="X" ROLLNAME="INDX_SRTF2" ADMINFIELD="0" INTTYPE="X" INTLEN="000004" NOTNULL="X" DOMNAME="SYBIN4" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="INT4" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" SIGNFLAG="X" MASK="  INT4E" MASKLEN="0000" DDTEXT="Compteur enregistrements suivants dans tables EXPORT/IMPORT" REPTEXT="Compteur enregistrements successifs" SCRTEXT_S="Compteur" SCRTEXT_M="Compteur enreg." SCRTEXT_L="Compteur enregistr." DOMNAME3L="SYBIN4" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="CREATED_AT" DDLANGUAGE="F" POSITION="0005" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="CREATED_BY" DDLANGUAGE="F" POSITION="0006" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="UPDATED_AT" DDLANGUAGE="F" POSITION="0007" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="UPDATED_BY" DDLANGUAGE="F" POSITION="0008" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="DATA_SIZE" DDLANGUAGE="F" POSITION="0009" ROLLNAME="ABAP_MSIZE" ADMINFIELD="0" INTTYPE="P" INTLEN="000011" DOMNAME="ABAP_MSIZE" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="14" SCRLEN3="29" DTELMASTER="D" DATATYPE="DEC" LENG="000020" OUTPUTLEN="000026" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Type DEC correct pour nombre entier 64 octets" REPTEXT="Nbre entier 64 oct. avec +/-" SCRTEXT_S="Ent.64oct." SCRTEXT_M="Entier 64 oct." SCRTEXT_L="Nbre entier 64 oct. avec +/-" DOMNAME3L="ABAP_MSIZE" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="IS_COMPRESSED" DDLANGUAGE="F" POSITION="0010" ROLLNAME="G_COMPRESS" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XFELD" ROUTPUTLEN="000000" HEADLEN="01" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Comprimer donnÃ©es" REPTEXT="C" SCRTEXT_S="Comprimer" SCRTEXT_M="Comprimer" SCRTEXT_L="Comprimer" DOMNAME3L="XFELD" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="CLUSTR" DDLANGUAGE="F" POSITION="0011" ROLLNAME="INDX_CLSTR" ADMINFIELD="0" INTTYPE="X" INTLEN="000002" DOMNAME="SYBIN2" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="INT2" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" SIGNFLAG="X" MASK="  INT2E" MASKLEN="0000" DDTEXT="Zone longueur pour donnÃ©es util. ds tables export/import" REPTEXT="Longueur donnÃ©es" SCRTEXT_S="Longueur" SCRTEXT_M="Long. donnÃ©es" SCRTEXT_L="Longueur donnÃ©es" DOMNAME3L="SYBIN2" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR_C" FIELDNAME="CLUSTD" DDLANGUAGE="F" POSITION="0012" ROLLNAME="INDX_CLUST" ADMINFIELD="0" INTTYPE="X" INTLEN="002886" DOMNAME="INDX_CLUST" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="LRAW" LENG="002886" OUTPUTLEN="002886" DECIMALS="000000" MASK="  LRAWE" MASKLEN="0000" DDTEXT="Zone donnÃ©es pour tables de base de donnÃ©es IMPORT/EXPORT" REPTEXT="DonnÃ©es" SCRTEXT_S="DonnÃ©es" SCRTEXT_M="DonnÃ©es" SCRTEXT_L="DonnÃ©es" DOMMASTER="D" DOMNAME3L="INDX_CLUST" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_T_HC_ATTR" DDLANGUAGE="F" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="Hardcode - Table des Attributs" AUTHCLASS="00" CONTFLAG="C" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_T_HC_ATTR" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" BUFALLOW="X" JAVAONLY="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="MANDT" DDLANGUAGE="F" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" RESERVEDTE="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Mandant" REPTEXT="Mdt" SCRTEXT_S="Mandant" SCRTEXT_M="Mandant" SCRTEXT_L="Mandant" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_GUID_REGROUP" DDLANGUAGE="F" POSITION="0002" KEYFLAG="X" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" NOTNULL="X" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_GUID" DDLANGUAGE="F" POSITION="0003" KEYFLAG="X" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" NOTNULL="X" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - GUID" REPTEXT="Attribut GUID" SCRTEXT_S="Attr GUID" SCRTEXT_M="Attribut GUID" SCRTEXT_L="Attribut GUID" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_NAME" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_ATTRIBUTE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Nom" REPTEXT="Attribut" SCRTEXT_S="Attr." SCRTEXT_M="Attribut" SCRTEXT_L="Attribut" DOMNAME3L="CHAR30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="PARAMETER_GUID" DDLANGUAGE="F" POSITION="0005" ROLLNAME="ZTEC_HC_PARAMETER_GUID" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - ParamÃ¨tre - GUID" REPTEXT="GUID ParamÃ¨tre" SCRTEXT_S="GUID Param" SCRTEXT_M="GUID ParamÃ¨tre" SCRTEXT_L="GUID ParamÃ¨tre" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY1" DDLANGUAGE="F" POSITION="0006" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY2" DDLANGUAGE="F" POSITION="0007" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY3" DDLANGUAGE="F" POSITION="0008" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY4" DDLANGUAGE="F" POSITION="0009" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_SIGN" DDLANGUAGE="F" POSITION="0010" ROLLNAME="DDSIGN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="DDSIGN" ROUTPUTLEN="000000" HEADLEN="04" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Type des composantes SIGN dans type de ligne du type ranges" REPTEXT="SIGN" DOMNAME3L="DDSIGN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_OPTI" DDLANGUAGE="F" POSITION="0011" ROLLNAME="DDOPTION" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="DDOPTION" ROUTPUTLEN="000000" HEADLEN="06" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Type composantes OPTION dans type de ligne du type ranges" REPTEXT="OPTION" DOMNAME3L="DDOPTION" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_LOW" DDLANGUAGE="F" POSITION="0012" ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" DOMNAME3L="TEXT255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_HIGH" DDLANGUAGE="F" POSITION="0013" ROLLNAME="ZTEC_HC_ATTRIBUTE_HIGH" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Zone HIGH" REPTEXT="Limite supÃ©rieur" SCRTEXT_S="HIGH" SCRTEXT_M="Limite sup." SCRTEXT_L="Limite supÃ©rieur" DOMNAME3L="TEXT255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_AS_RANGE" DDLANGUAGE="F" POSITION="0014" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vÃ©ritÃ© XSD : vrai/faux [ext.]" REPTEXT="Val. vÃ©ritÃ©" SCRTEXT_S="Val.vÃ©ritÃ©" SCRTEXT_M="Val. de vÃ©ritÃ©" SCRTEXT_L="Valeur de vÃ©ritÃ©" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_AS_CODE_SOURCE" DDLANGUAGE="F" POSITION="0015" ROLLNAME="XSDBOOLEAN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XSDBOOLEAN" ROUTPUTLEN="000000" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Valeur de vÃ©ritÃ© XSD : vrai/faux [ext.]" REPTEXT="Val. vÃ©ritÃ©" SCRTEXT_S="Val.vÃ©ritÃ©" SCRTEXT_M="Val. de vÃ©ritÃ©" SCRTEXT_L="Valeur de vÃ©ritÃ©" DOMNAME3L="XSDBOOLEAN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="CREATED_BY" DDLANGUAGE="F" POSITION="0016" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="CREATED_AT" DDLANGUAGE="F" POSITION="0017" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="CHANGED_BY" DDLANGUAGE="F" POSITION="0018" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="CHANGED_AT" DDLANGUAGE="F" POSITION="0019" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" LANGDEP="X" DDTEXT="Hardcode - Valeurs Attributs" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME=".INCLUDE" DDLANGUAGE="F" POSITION="0001" ADMINFIELD="0" INTLEN="000000" PRECFIELD="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="      S" MASKLEN="0000" DDTEXT="Hardcode - Clefs Valeurs Attributs" DEPTH="00" COMPTYPE="S" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="KEY1" DDLANGUAGE="F" POSITION="0002" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="1" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="KEY2" DDLANGUAGE="F" POSITION="0003" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="1" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="KEY3" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="1" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="KEY4" DDLANGUAGE="F" POSITION="0005" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="1" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="RANGE" DDLANGUAGE="F" POSITION="0006" ROLLNAME="ZTEC_R_HC_ATTRIBUTE_RANGE" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="TTYP" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  TTYPL" MASKLEN="0000" DDTEXT="Hardcode - Range Valeurs Attribut" DEPTH="00" COMPTYPE="L" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE" FIELDNAME="CODE_SOURCE" DDLANGUAGE="F" POSITION="0007" ROLLNAME="STRINGTAB" ADMINFIELD="0" INTLEN="000000" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="TTYP" LENG="000000" OUTPUTLEN="000000" DECIMALS="000000" MASK="  TTYPL" MASKLEN="0000" DDTEXT="Table avec chaÃ®nes de caractÃ¨res" DEPTH="00" COMPTYPE="L" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_T_HC_VERS" DDLANGUAGE="F" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="HC - Table des Versions" AUTHCLASS="00" CONTFLAG="C" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_T_HC_VERS" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" BUFALLOW="X" JAVAONLY="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="MANDT" DDLANGUAGE="F" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" RESERVEDTE="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Mandant" REPTEXT="Mdt" SCRTEXT_S="Mandant" SCRTEXT_M="Mandant" SCRTEXT_L="Mandant" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_GUID" DDLANGUAGE="F" POSITION="0002" KEYFLAG="X" ROLLNAME="ZTEC_HC_VERSION_GUID" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" NOTNULL="X" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Version - GUID" REPTEXT="Version GUID" SCRTEXT_S="Version ID" SCRTEXT_M="Version GUID" SCRTEXT_L="Version GUID" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="REPID" DDLANGUAGE="F" POSITION="0003" ROLLNAME="REPID" ADMINFIELD="0" INTTYPE="C" INTLEN="000080" DOMNAME="PROGNAME" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000040" OUTPUTLEN="000040" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom du programme ABAP" REPTEXT="Programme" SCRTEXT_S="Programme" SCRTEXT_M="Nom programme" SCRTEXT_L="Nom du programme" DOMNAME3L="PROGNAME" SHLPORIGIN="X" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_ID" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_VERSION_ID" ADMINFIELD="0" INTTYPE="N" INTLEN="000010" ROUTPUTLEN="000000" HEADLEN="07" SCRLEN1="07" SCRLEN2="07" SCRLEN3="07" DTELMASTER="F" DATATYPE="NUMC" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="Hardcode - Version - ID" REPTEXT="Version" SCRTEXT_S="Version" SCRTEXT_M="Version" SCRTEXT_L="Version" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_PRIMARY" DDLANGUAGE="F" POSITION="0005" ROLLNAME="ZTEC_HC_VERSION_PRIMARY" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XFELD" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Version primaire" REPTEXT="Version primaire" SCRTEXT_S="Primaire" SCRTEXT_M="Primaire" SCRTEXT_L="Version primaire" DOMNAME3L="XFELD" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="CREATED_BY" DDLANGUAGE="F" POSITION="0006" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="CREATED_AT" DDLANGUAGE="F" POSITION="0007" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="CHANGED_BY" DDLANGUAGE="F" POSITION="0008" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_VERS" FIELDNAME="CHANGED_AT" DDLANGUAGE="F" POSITION="0009" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd35v TABNAME="ZTEC_T_HC_VERS" FIELDNAME="REPID" SHLPNAME="ZTEC_HARCODE_REPID_HELP_VALUE"/>
  <dd36m TABNAME="ZTEC_T_HC_VERS" FIELDNAME="REPID" SHLPNAME="ZTEC_HARCODE_REPID_HELP_VALUE" SHLPFIELD="REPID" FLPOSITION="0001" SHTABLE="ZTEC_T_HC_VERS" SHFIELD="REPID" SHLPOUTPUT="X" ROLLNAME="REPID" DOMNAME="PROGNAME" DATATYPE="CHAR" LENG="000040" DECIMALS="000000"/>
 </TABL>
 <TABL TABNAME="ZTEC_T_HC_PARAM" DDLANGUAGE="F" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="HC - Table des ParamÃ¨tres" AUTHCLASS="00" CONTFLAG="C" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZTEC_T_HC_PARAM" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" BUFALLOW="X" JAVAONLY="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="MANDT" DDLANGUAGE="F" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" RESERVEDTE="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Mandant" REPTEXT="Mdt" SCRTEXT_S="Mandant" SCRTEXT_M="Mandant" SCRTEXT_L="Mandant" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="PARAMETER_GUID" DDLANGUAGE="F" POSITION="0002" KEYFLAG="X" ROLLNAME="ZTEC_HC_PARAMETER_GUID" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" NOTNULL="X" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - ParamÃ¨tre - GUID" REPTEXT="GUID ParamÃ¨tre" SCRTEXT_S="GUID Param" SCRTEXT_M="GUID ParamÃ¨tre" SCRTEXT_L="GUID ParamÃ¨tre" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="VERSION_GUID" DDLANGUAGE="F" POSITION="0003" ROLLNAME="ZTEC_HC_VERSION_GUID" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" DOMNAME="SYSUUID_C32" ROUTPUTLEN="000000" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Version - GUID" REPTEXT="Version GUID" SCRTEXT_S="Version ID" SCRTEXT_M="Version GUID" SCRTEXT_L="Version GUID" DOMNAME3L="SYSUUID_C32" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="PARAMETER_NAME" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_PARAMETER_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CHAR30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - ParamÃ¨tre - Nom" REPTEXT="ParamÃ¨tre" SCRTEXT_S="Param." SCRTEXT_M="ParamÃ¨tre" SCRTEXT_L="ParamÃ¨tre" DOMNAME3L="CHAR30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="CREATED_BY" DDLANGUAGE="F" POSITION="0005" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="CREATED_AT" DDLANGUAGE="F" POSITION="0006" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="CHANGED_BY" DDLANGUAGE="F" POSITION="0007" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Nom d&apos;utilisateur" REPTEXT="Nom d&apos;utilisateur" SCRTEXT_S="Utilisat." SCRTEXT_M="Nom utilisateur" SCRTEXT_L="Nom d&apos;utilisateur" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="CHANGED_AT" DDLANGUAGE="F" POSITION="0008" ROLLNAME="TIMESTAMP" ADMINFIELD="0" INTTYPE="P" INTLEN="000008" DOMNAME="TZNTSTMPS" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DEC" LENG="000015" OUTPUTLEN="000019" DECIMALS="000000" MASK="  DEC E" MASKLEN="0000" DDTEXT="Horodatage UTC en abrÃ©gÃ© (AAAAMMJJhhmmss)" REPTEXT="Horodatage" SCRTEXT_S="Horodatage" SCRTEXT_M="Horodatage" SCRTEXT_L="Horodatage" DOMMASTER="D" DOMNAME3L="TZNTSTMPS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Hardcode - Clefs Valeurs Attributs" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" FIELDNAME="KEY1" DDLANGUAGE="F" POSITION="0001" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" FIELDNAME="KEY2" DDLANGUAGE="F" POSITION="0002" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" FIELDNAME="KEY3" DDLANGUAGE="F" POSITION="0003" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_VALUE_KEY" FIELDNAME="KEY4" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" DOMNAME3L="ZTEC_HC_DOM_ATTRIBUTE_KEY" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZTEC_S_HC_ATTRIBUTE_RANGE" DDLANGUAGE="F" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Hardcode - Ranges Valeurs Attributs" AUTHCLASS="00" PROZPUFF="000" EXCLASS="1">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_RANGE" FIELDNAME="SIGN" DDLANGUAGE="F" POSITION="0001" ROLLNAME="DDSIGN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="DDSIGN" ROUTPUTLEN="000000" HEADLEN="04" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Type des composantes SIGN dans type de ligne du type ranges" REPTEXT="SIGN" DOMNAME3L="DDSIGN" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_RANGE" FIELDNAME="OPTION" DDLANGUAGE="F" POSITION="0002" ROLLNAME="DDOPTION" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="DDOPTION" ROUTPUTLEN="000000" HEADLEN="06" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Type composantes OPTION dans type de ligne du type ranges" REPTEXT="OPTION" DOMNAME3L="DDOPTION" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_RANGE" FIELDNAME="LOW" DDLANGUAGE="F" POSITION="0003" ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" DOMNAME3L="TEXT255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZTEC_S_HC_ATTRIBUTE_RANGE" FIELDNAME="HIGH" DDLANGUAGE="F" POSITION="0004" ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" ADMINFIELD="0" INTTYPE="C" INTLEN="000510" DOMNAME="TEXT255" ROUTPUTLEN="000000" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="F" DATATYPE="CHAR" LENG="000255" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" DOMNAME3L="TEXT255" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TRAN TCODE="ZHARDCODE" PGMNA="ZTEC_HARDCODE" DYPNO="1000" CINFO="80">
  <tstct SPRSL="F" TCODE="ZHARDCODE" TTEXT="Gestion des Hardcodes"/>
  <tstcc TCODE="ZHARDCODE" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X"/>
  <tstcp/>
  <rsstcd ST_PROG="X" DEVCLASS="$TMP"/>
 </TRAN>
 <TTYP TYPENAME="ZVTEC_T_HC_TT" DDLANGUAGE="F" ROWTYPE="ZVTEC_T_HC" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Type de table ZVTEC_T_HC" TYPELEN="001984" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZTEC_T_HC_VERS_TT" DDLANGUAGE="F" ROWTYPE="ZTEC_T_HC_VERS" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Type de table ZTEC_T_HC_VERS" TYPELEN="000226" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZTEC_T_HC_PARAM_TT" DDLANGUAGE="F" ROWTYPE="ZTEC_T_HC_PARAM" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Type de table ZTEC_T_HC_PARAM" TYPELEN="000258" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZTEC_T_HC_ATTR_TT" DDLANGUAGE="F" ROWTYPE="ZTEC_T_HC_ATTR" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Type de table ZTEC_T_HC_ATTR" TYPELEN="001832" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZTEC_R_HC_ATTRIBUTE_RANGE" DDLANGUAGE="F" ROWTYPE="ZTEC_S_HC_ATTRIBUTE_RANGE" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Hardcode - Range Valeurs Attribut" TYPELEN="001026" TTYPKIND="R" RANGE_CTYP="ZTEC_HC_ATTRIBUTE_LOW" CTDATATYPE="CHAR" CTLENG="000255" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZTEC_T_HC_ATTR_C_TT" DDLANGUAGE="F" ROWTYPE="ZTEC_T_HC_ATTR_C" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="K" KEYKIND="N" KEYFDCOUNT="0001" DDTEXT="Hardcode - ZTEC_T_HC_ATTR_C" TYPELEN="003048" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000">
  <dd42v TYPENAME="ZTEC_T_HC_ATTR_C_TT" KEYFDPOS="0001" ROWTYPEPOS="0003" KEYFIELD="SRTFD"/>
 </TTYP>
 <TTYP TYPENAME="ZTEC_T_HC_ATTRIBUTE_SOURCE" DDLANGUAGE="F" ROWTYPE="ZTEC_S_HC_ATTRIBUTE_SOURCE" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="S" KEYDEF="K" KEYKIND="U" KEYFDCOUNT="0001" DDTEXT="Hardcode - ZTEC_S_HC_ATTRIBUTE_SOURCE" TYPELEN="000072" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000">
  <dd42v TYPENAME="ZTEC_T_HC_ATTRIBUTE_SOURCE" KEYFDPOS="0001" ROWTYPEPOS="0001" KEYFIELD="ATTRIBUTE_GUID_REGROUP"/>
 </TTYP>
 <VIEW VIEWNAME="ZVTEC_T_HC" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="F" AGGTYPE="V" AUTHCLASS="00" ROOTTAB="ZTEC_T_HC_VERS" DDTEXT="Hardcode - Vue exploitation" VIEWCLASS="D" VIEWGRANT="R">
  <dd09l TABNAME="ZVTEC_T_HC" AS4LOCAL="A" AS4VERS="0000" SCHFELDANZ="000" BUFALLOW="N"/>
  <dd26v VIEWNAME="ZVTEC_T_HC" TABNAME="ZTEC_T_HC_VERS" TABPOS="0001" FORTABNAME="ZTEC_T_HC_VERS"/>
  <dd26v VIEWNAME="ZVTEC_T_HC" TABNAME="ZTEC_T_HC_PARAM" TABPOS="0002"/>
  <dd26v VIEWNAME="ZVTEC_T_HC" TABNAME="ZTEC_T_HC_ATTR" TABPOS="0003"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0001" DDLANGUAGE="F" VIEWFIELD="MANDT" TABNAME="ZTEC_T_HC_VERS" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Mandant" REPTEXT="Mdt" SCRTEXT_S="Mandant" SCRTEXT_M="Mandant" SCRTEXT_L="Mandant" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0002" DDLANGUAGE="F" VIEWFIELD="VERSION_GUID" TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_GUID" KEYFLAG="X" ROLLNAME="ZTEC_HC_VERSION_GUID" ROLLNAMEVI="ZTEC_HC_VERSION_GUID" DOMNAME="SYSUUID_C32" DATATYPE="CHAR" FLENGTH="000032" INTTYPE="C" INTLEN="000064" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000032" DECIMALS="000000" DDTEXT="Hardcode - Version - GUID" REPTEXT="Version GUID" SCRTEXT_S="Version ID" SCRTEXT_M="Version GUID" SCRTEXT_L="Version GUID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0003" DDLANGUAGE="F" VIEWFIELD="PARAMETER_GUID" TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="PARAMETER_GUID" KEYFLAG="X" ROLLNAME="ZTEC_HC_PARAMETER_GUID" ROLLNAMEVI="ZTEC_HC_PARAMETER_GUID" DOMNAME="SYSUUID_C32" DATATYPE="CHAR" FLENGTH="000032" INTTYPE="C" INTLEN="000064" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000032" DECIMALS="000000" DDTEXT="Hardcode - ParamÃ¨tre - GUID" REPTEXT="GUID ParamÃ¨tre" SCRTEXT_S="GUID Param" SCRTEXT_M="GUID ParamÃ¨tre" SCRTEXT_L="GUID ParamÃ¨tre" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0004" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_GUID_REGROUP" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_GUID_REGROUP" KEYFLAG="X" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_GUID_REGROUP" DOMNAME="SYSUUID_C32" DATATYPE="CHAR" FLENGTH="000032" INTTYPE="C" INTLEN="000064" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000032" DECIMALS="000000" DDTEXT="Hardcode - Attribut - GUID Regroupement" REPTEXT="GUID Regroupement" SCRTEXT_S="GUID Reg." SCRTEXT_M="GUID Regroup." SCRTEXT_L="GUID Regroupement" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0005" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_GUID" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_GUID" KEYFLAG="X" ROLLNAME="ZTEC_HC_ATTRIBUTE_GUID" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_GUID" DOMNAME="SYSUUID_C32" DATATYPE="CHAR" FLENGTH="000032" INTTYPE="C" INTLEN="000064" HEADLEN="32" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000032" DECIMALS="000000" DDTEXT="Hardcode - Attribut - GUID" REPTEXT="Attribut GUID" SCRTEXT_S="Attr GUID" SCRTEXT_M="Attribut GUID" SCRTEXT_L="Attribut GUID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0006" DDLANGUAGE="F" VIEWFIELD="REPID" TABNAME="ZTEC_T_HC_VERS" FIELDNAME="REPID" ROLLNAME="REPID" ROLLNAMEVI="REPID" DOMNAME="PROGNAME" DATATYPE="CHAR" FLENGTH="000040" SHLPORIGIN="X" INTTYPE="C" INTLEN="000080" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000040" DECIMALS="000000" DDTEXT="Nom du programme ABAP" REPTEXT="Programme" SCRTEXT_S="Programme" SCRTEXT_M="Nom programme" SCRTEXT_L="Nom du programme" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0007" DDLANGUAGE="F" VIEWFIELD="VERSION_ID" TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_ID" ROLLNAME="ZTEC_HC_VERSION_ID" ROLLNAMEVI="ZTEC_HC_VERSION_ID" DATATYPE="NUMC" FLENGTH="000005" INTTYPE="N" INTLEN="000010" HEADLEN="07" SCRLEN1="07" SCRLEN2="07" SCRLEN3="07" OUTPUTLEN="000005" DECIMALS="000000" DDTEXT="Hardcode - Version - ID" REPTEXT="Version" SCRTEXT_S="Version" SCRTEXT_M="Version" SCRTEXT_L="Version" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0008" DDLANGUAGE="F" VIEWFIELD="VERSION_PRIMARY" TABNAME="ZTEC_T_HC_VERS" FIELDNAME="VERSION_PRIMARY" ROLLNAME="ZTEC_HC_VERSION_PRIMARY" ROLLNAMEVI="ZTEC_HC_VERSION_PRIMARY" DOMNAME="XFELD" DATATYPE="CHAR" FLENGTH="000001" SHLPORIGIN="F" INTTYPE="C" INTLEN="000002" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" DDTEXT="Hardcode - Version primaire" REPTEXT="Version primaire" SCRTEXT_S="Primaire" SCRTEXT_M="Primaire" SCRTEXT_L="Version primaire" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0009" DDLANGUAGE="F" VIEWFIELD="PARAMETER_NAME" TABNAME="ZTEC_T_HC_PARAM" FIELDNAME="PARAMETER_NAME" ROLLNAME="ZTEC_HC_PARAMETER_NAME" ROLLNAMEVI="ZTEC_HC_PARAMETER_NAME" DOMNAME="CHAR30" DATATYPE="CHAR" FLENGTH="000030" INTTYPE="C" INTLEN="000060" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000030" DECIMALS="000000" DDTEXT="Hardcode - ParamÃ¨tre - Nom" REPTEXT="ParamÃ¨tre" SCRTEXT_S="Param." SCRTEXT_M="ParamÃ¨tre" SCRTEXT_L="ParamÃ¨tre" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0010" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_NAME" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_NAME" ROLLNAME="ZTEC_HC_ATTRIBUTE_NAME" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_NAME" DOMNAME="CHAR30" DATATYPE="CHAR" FLENGTH="000030" INTTYPE="C" INTLEN="000060" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000030" DECIMALS="000000" DDTEXT="Hardcode - Attribut - Nom" REPTEXT="Attribut" SCRTEXT_S="Attr." SCRTEXT_M="Attribut" SCRTEXT_L="Attribut" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0011" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_KEY1" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY1" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_KEY" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" DATATYPE="CHAR" FLENGTH="000060" INTTYPE="C" INTLEN="000120" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0012" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_KEY2" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY2" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_KEY" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" DATATYPE="CHAR" FLENGTH="000060" INTTYPE="C" INTLEN="000120" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0013" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_KEY3" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY3" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_KEY" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" DATATYPE="CHAR" FLENGTH="000060" INTTYPE="C" INTLEN="000120" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0014" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_KEY4" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_KEY4" ROLLNAME="ZTEC_HC_ATTRIBUTE_KEY" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_KEY" DOMNAME="ZTEC_HC_DOM_ATTRIBUTE_KEY" DATATYPE="CHAR" FLENGTH="000060" INTTYPE="C" INTLEN="000120" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Clef" REPTEXT="Clef" SCRTEXT_S="Clef" SCRTEXT_M="Clef" SCRTEXT_L="Clef" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0015" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_SIGN" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_SIGN" ROLLNAME="DDSIGN" ROLLNAMEVI="DDSIGN" DOMNAME="DDSIGN" DATATYPE="CHAR" FLENGTH="000001" SHLPORIGIN="F" INTTYPE="C" INTLEN="000002" HEADLEN="04" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" DDTEXT="Type des composantes SIGN dans type de ligne du type ranges" REPTEXT="SIGN" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0016" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_OPTI" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_OPTI" ROLLNAME="DDOPTION" ROLLNAMEVI="DDOPTION" DOMNAME="DDOPTION" DATATYPE="CHAR" FLENGTH="000002" SHLPORIGIN="F" INTTYPE="C" INTLEN="000004" HEADLEN="06" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" OUTPUTLEN="000002" DECIMALS="000000" VALEXI="X" DDTEXT="Type composantes OPTION dans type de ligne du type ranges" REPTEXT="OPTION" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0017" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_LOW" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_LOW" ROLLNAME="ZTEC_HC_ATTRIBUTE_LOW" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_LOW" DOMNAME="TEXT255" DATATYPE="CHAR" FLENGTH="000255" INTTYPE="C" INTLEN="000510" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Zone LOW" REPTEXT="Limite infÃ©rieur" SCRTEXT_S="LOW" SCRTEXT_M="Limite inf." SCRTEXT_L="Limite infÃ©rieur" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0018" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_HIGH" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_HIGH" ROLLNAME="ZTEC_HC_ATTRIBUTE_HIGH" ROLLNAMEVI="ZTEC_HC_ATTRIBUTE_HIGH" DOMNAME="TEXT255" DATATYPE="CHAR" FLENGTH="000255" INTTYPE="C" INTLEN="000510" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000255" DECIMALS="000000" LOWERCASE="X" DDTEXT="Hardcode - Attribut - Zone HIGH" REPTEXT="Limite supÃ©rieur" SCRTEXT_S="HIGH" SCRTEXT_M="Limite sup." SCRTEXT_L="Limite supÃ©rieur" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0019" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_AS_RANGE" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_AS_RANGE" ROLLNAME="XSDBOOLEAN" ROLLNAMEVI="XSDBOOLEAN" DOMNAME="XSDBOOLEAN" DATATYPE="CHAR" FLENGTH="000001" SHLPORIGIN="F" INTTYPE="C" INTLEN="000002" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" DDTEXT="Valeur de vÃ©ritÃ© XSD : vrai/faux [ext.]" REPTEXT="Val. vÃ©ritÃ©" SCRTEXT_S="Val.vÃ©ritÃ©" SCRTEXT_M="Val. de vÃ©ritÃ©" SCRTEXT_L="Valeur de vÃ©ritÃ©" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZVTEC_T_HC" OBJPOS="0020" DDLANGUAGE="F" VIEWFIELD="ATTRIBUTE_AS_CODE_SOURCE" TABNAME="ZTEC_T_HC_ATTR" FIELDNAME="ATTRIBUTE_AS_CODE_SOURCE" ROLLNAME="XSDBOOLEAN" ROLLNAMEVI="XSDBOOLEAN" DOMNAME="XSDBOOLEAN" DATATYPE="CHAR" FLENGTH="000001" SHLPORIGIN="F" INTTYPE="C" INTLEN="000002" HEADLEN="13" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" DDTEXT="Valeur de vÃ©ritÃ© XSD : vrai/faux [ext.]" REPTEXT="Val. vÃ©ritÃ©" SCRTEXT_S="Val.vÃ©ritÃ©" SCRTEXT_M="Val. de vÃ©ritÃ©" SCRTEXT_L="Valeur de vÃ©ritÃ©" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd28j VIEWNAME="ZVTEC_T_HC" LTAB="ZTEC_T_HC_PARAM" LFIELD="MANDT" OPERATOR="EQ" RTAB="ZTEC_T_HC_VERS" RFIELD="MANDT" SOURCE="S"/>
  <dd28j VIEWNAME="ZVTEC_T_HC" LTAB="ZTEC_T_HC_PARAM" LFIELD="VERSION_GUID" OPERATOR="EQ" RTAB="ZTEC_T_HC_VERS" RFIELD="VERSION_GUID" SOURCE="S"/>
  <dd28j VIEWNAME="ZVTEC_T_HC" LTAB="ZTEC_T_HC_ATTR" LFIELD="MANDT" OPERATOR="EQ" RTAB="ZTEC_T_HC_PARAM" RFIELD="MANDT" SOURCE="S"/>
  <dd28j VIEWNAME="ZVTEC_T_HC" LTAB="ZTEC_T_HC_ATTR" LFIELD="PARAMETER_GUID" OPERATOR="EQ" RTAB="ZTEC_T_HC_PARAM" RFIELD="PARAMETER_GUID" SOURCE="S"/>
 </VIEW>
</nugget>
